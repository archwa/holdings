{"version":3,"sources":["Search.js","SearchResults.js","HoldingsView.js","HoldersView.js","stitch/components/UserInput.js","stitch/components/functions/ResultsGetHoldersForTicker.js","stitch/components/functions/ResultsGetPositionsForFund.js","stitch/components/functions/ResultsGetAverageTimePositionsHeldForFund.js","stitch/components/ResultsFormatter.js","stitch/components/UserInterface.js","stitch/index.js","App.js","serviceWorker.js","index.js"],"names":["ColorButton","withStyles","theme","root","color","backgroundColor","blue","Button","styles","position","margin","textAlign","justifyContent","width","minWidth","display","top","transform","height","Search","props","state","go","location","value","_handleCompanySearch","bind","_handleSymbolSearch","_handleChange","event","this","setState","target","q","parsedQuery","qs","queryString","stringify","newRedirect","redirect","style","container","onSubmit","to","TextField","onChange","label","variant","type","textField","fullWidth","ButtonGroup","buttonGroup","onClick","button","React","Component","SearchResults","stitch","_searchCompany","_searchSymbol","initialCompanySearchFromQuery","_","get","parse","initialSymbolSearchFromQuery","stitchInitialized","companyQuery","symbolQuery","loading","prevProps","companySearch","oldCompanySearch","symbolSearch","oldSymbolSearch","callFunction","then","res","data","filerSearch","status","console","error","message","issuerSearch","filerResults","issuerResults","filerData","issuerData","count","map","results","issuer","name","cusip6","filer","cik","holders","reduce","acc","issuerResult","newAcc","issuerName","filers","filerResult","filerName","companyResults","merge","companyResultsValues","values","length","company","first","companyKeys","keys","loc","toString","id","catch","err","symbolResults","symbolName","holdersView","holdingsView","holdings","symbol","minHeight","isEmpty","noResults","val","k","item","key","concat","bottom","TablePaginationActions","classes","makeStyles","flexShrink","marginLeft","spacing","useStyles1","useTheme","page","rowsPerPage","onChangePage","className","IconButton","disabled","aria-label","direction","Math","ceil","max","desc","a","b","orderBy","EnhancedTableHead","order","onRequestSort","headCells","TableHead","TableRow","headCell","TableCell","align","fontFamily","padding","disablePadding","sortDirection","TableSortLabel","active","property","HoldingsView","_getHoldings","initialCikFromPath","initialCikFromQuery","initialCik","oldCik","cikFromPath","oldCikFromPath","cikFromQuery","oldCikFromQuery","checked","strCik","padStart","modifiedHoldings","holding","index","tableWrapper","maxHeight","overflow","handleChangePage","newPage","tableInfo","columns","format","toLocaleString","date","Date","currentYear","getFullYear","currentQuarter","getMonth","currentOnly","filter","holdingYear","parseInt","substring","holdingQuarter","abs","filterValue","filterValueLower","lowerCase","colKeys","column","slimHolding","pick","includes","some","avgOwnership","ownership_length","num","round","filer_name","Paper","Table","size","stickyHeader","isDesc","TableBody","array","cmp","stabilizedThis","el","sort","stableSort","getSorting","slice","row","hover","tabIndex","textDecoration","TableFooter","colSpan","placeholder","Checkbox","TablePagination","rowsPerPageOptions","component","onChangeRowsPerPage","ActionsComponent","HoldersView","_getHolders","initialCusipFromPath","initialCusipFromQuery","initialCusip","cusip","oldCusip","cusipFromPath","oldCusipFromPath","cusipFromQuery","oldCusipFromQuery","strCusip","substr","holder","holderYear","holderQuarter","slimHolder","issuer_name","flexDirection","UserInput","inputValue","StitchController","_handleInputChange","cleanInput","searchResult","log","init","Input","input","_handleClick","ResultsGetHoldersForTicker","_handleSort","clickedColumn","sortBy","reverse","rawData","isEqual","columnNameDisplay","sorted","idx","from","quarters","join","ResultsGetPositionsForFund","rawResults","names","year","quarter","ResultsGetAverageTimePositionsHeldForFund","positionsCount","averageLengthOfStockOwnership","years","ResultsFormatter","getAverageTimePositionsHeldForFund","companySearchResult","symbolSearchResult","require","Stitch","RemoteMongoClient","UserApiKeyCredential","db","sc","initClientForAppId","process","loginUsingApiKey","initServiceClient","mongodb","initDBFromServiceClient","appId","client","initializeDefaultAppClient","credential","auth","loginWithCredential","user","getServiceClient","factory","args","App","window","_updateWindowDimensions","innerWidth","innerHeight","addEventListener","removeEventListener","zIndex","left","path","exact","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ef31de20.chunk.js","sourcesContent":["import React from 'react';\n\nimport {\n  Redirect\n} from 'react-router-dom';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { withStyles } from '@material-ui/core/styles';\nimport { blue } from '@material-ui/core/colors';\n\nimport queryString from 'query-string';\n\nconst ColorButton = withStyles(theme => ({\n  root: {\n    color: 'white',\n    backgroundColor: blue[500],\n    '&:hover': {\n      backgroundColor: blue[700],\n    },\n  },\n}))(Button);\n\nconst styles = {\n  'container': {\n    position: 'relative',\n    margin: '10px',\n    textAlign: 'center',\n    justifyContent: 'center',\n  },\n  'textField': {\n    margin: '5px',\n    width: '50%',\n    minWidth: '300px',\n    display: 'inline-block',\n  },\n  'buttonGroup': {\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    display: 'inline-block',\n  },\n  'button': {\n    height: '100%',\n  }\n};\n\nexport class Search extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      'redirect': {\n        go: false,\n        location: '/',\n      },\n      value: ''\n    };\n\n    this._handleCompanySearch = this._handleCompanySearch.bind(this);\n    this._handleSymbolSearch = this._handleSymbolSearch.bind(this);\n    this._handleChange = this._handleChange.bind(this);\n  }\n\n  _handleChange(event) {\n    this.setState({\n      'value': event.target.value\n    });  \n  }\n\n  _handleCompanySearch(q) {\n    const parsedQuery = {\n      'company': this.state.value\n    };\n\n    const qs = queryString.stringify(parsedQuery);\n\n    let newRedirect = { ...this.state.redirect };\n    newRedirect.location = ('/search?' + qs);\n    newRedirect.go = true;\n\n    this.setState({ redirect: newRedirect });  \n  }\n\n\n  _handleSymbolSearch(q) {\n    const parsedQuery = {\n      'symbol': this.state.value\n    };\n\n    const qs = queryString.stringify(parsedQuery);\n\n    let newRedirect = { ...this.state.redirect };\n    newRedirect.location = ('/search?' + qs);\n    newRedirect.go = true;\n\n    this.setState({ redirect: newRedirect });  \n  }\n\n  render() {\n    const redirect = this.state.redirect.go;\n    const location = this.state.redirect.location;\n\n    return (<div style={ styles.container }>\n      <form onSubmit={ this._handleCompanySearch }>\n      { redirect? <Redirect to={ location } /> :null }\n      <TextField\n        onChange={this._handleChange}\n        label='Search'\n        variant='outlined'\n        type='search'\n        style={ styles.textField }\n        fullWidth\n      />\n      <ButtonGroup style={ styles.buttonGroup }>\n        <ColorButton variant='contained' onClick={ this._handleCompanySearch } style={ styles.button }>\n          Company\n        </ColorButton>\n        <ColorButton variant='contained' onClick={ this._handleSymbolSearch } style={ styles.button }>\n          Symbol\n        </ColorButton>\n      </ButtonGroup>\n      </form>\n    </div>);\n  }\n\n};\n\n","import React from 'react';\nimport queryString from 'query-string';\nimport _ from 'lodash';\n\nimport { Link, Redirect } from 'react-router-dom';\n\nexport class SearchResults extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // get Stitch controller from props\n    this.stitch = this.props.stitch;\n\n    // bind this to all non-React functions\n    this._searchCompany = this._searchCompany.bind(this);\n    this._searchSymbol = this._searchSymbol.bind(this);\n\n    const initialCompanySearchFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'company', null);\n    const initialSymbolSearchFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'symbol', null);\n    \n    this.state = {\n      'companyQuery': initialCompanySearchFromQuery,\n      'symbolQuery': initialSymbolSearchFromQuery,\n      'companyResults': null,\n      'symbolResults': null,\n      'loading': true,\n      'redirect': {\n        go: false,\n        location: '/',\n      },\n    };\n  }\n\n  componentDidMount() {\n    const stitchInitialized = this.props.stitchInitialized;\n    const companyQuery = this.state.companyQuery;\n    const symbolQuery = this.state.symbolQuery;\n\n    if(stitchInitialized && companyQuery) {\n      this._searchCompany(companyQuery);\n    }\n\n    if(stitchInitialized && symbolQuery) {\n      this._searchSymbol(symbolQuery);\n    }\n\n    if(stitchInitialized && !companyQuery && !symbolQuery && this.state.loading) {\n      this.setState({ loading: false });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const stitchInitialized = this.props.stitchInitialized;\n    const companySearch = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'company', null);\n    const oldCompanySearch = _.get(queryString.parse(_.get(prevProps, 'location.search', null)), 'company', null);\n    const symbolSearch = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'symbol', null);\n    const oldSymbolSearch = _.get(queryString.parse(_.get(prevProps, 'location.search', null)), 'symbol', null);\n\n    // clear old searches\n    if(companySearch !== oldCompanySearch) {\n      this.setState({ 'companyQuery': companySearch, 'companyResults': null });\n    }\n\n    if(symbolSearch !== oldSymbolSearch) {\n      this.setState({ 'symbolQuery': symbolSearch, 'symbolResults': null });\n    }\n\n\n    // perform new searches\n    if(stitchInitialized && companySearch && companySearch !== oldCompanySearch) {\n      this._searchCompany(companySearch);\n    }\n    \n    if(stitchInitialized && symbolSearch && symbolSearch !== oldSymbolSearch) {\n      this._searchSymbol(symbolSearch);\n    }\n  }\n\n  _searchCompany(q) {\n    this.setState({ loading: true });\n    this.stitch.callFunction('searchForCompany', [ q ])\n      .then(res => {\n        if(res.data.filerSearch.status < 0) {\n          console.error(res.data.filerSearch.message);\n        }\n\n        if(res.data.issuerSearch.status < 0) {\n          console.error(res.data.issuerSearch.message);\n        }\n\n        const filerData = _.get(res, 'data.filerSearch.data', null);\n        const issuerData = _.get(res, 'data.issuerSearch.data', null);\n\n        let filerResults, issuerResults;\n\n        if(issuerData.count !== 1) {\n          issuerResults = _.map(issuerData.results, issuer => ({\n            name: _.get(issuer, 'names.0', null),\n            cusip6: _.get(issuer, 'cusip6', null),\n          }));\n        }\n\n        else {\n          issuerResults = [\n            {\n              name: _.get(issuerData, 'results.data.issuer_names.0', null),\n              cusip6: _.get(issuerData, 'results.data.issuer_cusip6', null),\n            }\n          ];\n        }\n\n        if(filerData.count !== 1) {\n          filerResults = _.map(filerData.results, filer => ({\n            name: _.get(filer, 'name', null),\n            cik: _.get(filer, 'cik', null),\n          }));\n        }\n\n        else {\n          filerResults = [\n            {\n              name: _.get(filerData, 'results.data.filer_names.0', null),\n              cik: _.get(filerData, 'results.data.filer_cik', null),\n            }\n          ];\n        }\n        \n        const holders = _.reduce(issuerResults, (acc, issuerResult) => {\n          const newAcc = acc;\n          const issuerName = _.get(issuerResult, 'name', null);\n          if(!newAcc[issuerName]) {\n            newAcc[issuerName] = {\n              'holders': _.get(issuerResult, 'cusip6', null)\n            };\n          }\n\n          else if(!newAcc[issuerName]['holders']) {\n            newAcc[issuerName]['holders'] = _.get(issuerResult, 'cusip6', null);\n          }\n\n          return newAcc;\n        }, {});\n\n        const filers = _.reduce(filerResults, (acc, filerResult) => {\n          const newAcc = acc;\n          const filerName = _.get(filerResult, 'name', null);\n          if(!newAcc[filerName]) {\n            newAcc[filerName] = {\n              'holdings': _.get(filerResult, 'cik', null)\n            };\n          }\n\n          else if(!newAcc[filerName]['holdings']) {\n            newAcc[filerName]['holdings'] = _.get(filerResult, 'cik', null);\n          }\n\n          return newAcc;\n        }, {});\n\n        const companyResults = _.merge(holders, filers);\n\n        const companyResultsValues = _.values(companyResults);\n\n        if(companyResultsValues.length === 1) {\n          const company = _.first(companyResultsValues);\n          const companyKeys = _.keys(company);\n\n          if(companyKeys.length === 1) {\n            const loc = _.first(companyKeys).toString();\n            const id = _.get(company, loc).toString();\n\n            let newRedirect = { ...this.state.redirect };\n            newRedirect.location = ('/' + loc + '/' + id);\n            newRedirect.go = true;\n\n            this.setState({ redirect: newRedirect });  \n          }\n\n          else {\n            this.setState({ loading: false, companyResults });\n          }\n        }\n\n        else {\n          this.setState({ loading: false, companyResults });\n        }\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({ loading: false });\n      });\n  }\n\n  _searchSymbol(q) {\n    this.setState({ loading: true });\n    this.stitch.callFunction('searchForSymbol', [ q ])\n      .then(res => {\n        // no results\n        if(!res.status && !res.data) {\n          this.setState({ loading: false, symbolResults: null });\n        }\n\n        if(res.status < 0) {\n          console.error(res.message);\n        }\n\n        else {\n          const data = _.get(res, 'data', null);\n          const symbolName = _.get(data, 'symbol.symbol', null);\n          const holdersView = _.get(data, 'holdersView', null);\n          const holdingsView = _.get(data, 'holdingsView', null);\n          const holdings = holdingsView? {\n            'name': _.get(holdingsView, 'data.filer_names.0', null),\n            'cik': _.get(holdingsView, 'data.filer_cik', null),\n          } :null;\n          const holders = holdersView? {\n            'name': _.get(holdersView, 'data.issuer_names.0', null),\n            'cusip6': _.get(holdersView, 'data.issuer_cusip6', null),\n          } :null;\n\n\n          const name = holdings? holdings.name :(holders? holders.name :symbolName);\n\n          const symbolResults = {\n            name,\n            symbol: symbolName,\n            holdings: holdings? _.get(holdings, 'cik', null) :null,\n            holders: holders? _.get(holders, 'cusip6', null) :null,\n          };\n\n          if(symbolResults.holdings && !symbolResults.holders) {\n            let newRedirect = { ...this.state.redirect };\n            newRedirect.location = ('/holdings/' + symbolResults.holdings.toString());\n            newRedirect.go = true;\n\n            this.setState({ redirect: newRedirect });  \n          }\n          \n          else if(!symbolResults.holdings && symbolResults.holders) {\n            let newRedirect = { ...this.state.redirect };\n            newRedirect.location = ('/holders/' + symbolResults.holders.toString());\n            newRedirect.go = true;\n\n            this.setState({ redirect: newRedirect });  \n          }\n          \n          else {\n            this.setState({ loading: false, symbolResults });\n          }\n        }\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({ loading: false });\n      });\n  }\n\n  render() {\n    const loading = this.state.loading;\n    const companyResults = this.state.companyResults;\n    const symbolResults = this.state.symbolResults;\n    const companyQuery = this.state.companyQuery;\n    const symbolQuery = this.state.symbolQuery;\n\n    const redirect = this.state.redirect.go;\n    const location = this.state.redirect.location;\n\n    return (<div>\n      { redirect? <Redirect to={ location } /> :null }\n      { (!loading && !companyQuery && !symbolQuery)? <><div style={{ minHeight: '30vh' }}></div>{ `Please provide a search query.` }</> :null}\n      { (!loading && (companyQuery || symbolQuery) && _.isEmpty(companyResults) && _.isEmpty(symbolResults))?\n        <>\n          <div style={{ minHeight: '30vh' }}></div>\n          {\n            (() => {\n              let noResults = 'No results';\n              if(companyQuery) {\n                noResults += ` for company query \"${companyQuery}\"`\n              }\n              if(companyQuery && symbolQuery) {\n                noResults += ' or';\n              }\n              if(symbolQuery) {\n                noResults += ` for symbol query \"${symbolQuery}\"`;\n              }\n              noResults += '.';\n\n              return noResults;\n            })()\n          }\n        </> :null}\n      { (loading && (companyQuery || symbolQuery))? <><div style={{ minHeight: '30vh' }}></div>{ `One moment please ...` }</> :null}\n      { (!_.isEmpty(companyResults) && !loading)?\n      <div style={{ textAlign: 'left', margin: '10px' }}>\n        <h2>Company Results</h2>\n        <ul>\n          { \n            _.reduce(companyResults, (acc, val, k) => {\n              const item = <li key={ k.toString() }>\n                  <strong>{ k.toString() }</strong>\n                  { ' : ' }\n                  { !val.holders? null :\n                    <Link to={ '/holders/' + val.holders.toString() }>\n                      Holders\n                    </Link>\n                  }\n                  { val.holders && val.holdings? ' | ' :null}\n                  { !val.holdings? null :\n                    <Link to={ '/holdings/' + val.holdings.toString() }>\n                      Holdings\n                    </Link>\n                  }\n                  {!val.holders && !val.holdings? 'No holders or holdings views available.' :null}\n                </li>;\n\n              return _.concat(acc, item);\n            }, [])\n          }\n        </ul>\n      </div>\n      :null }\n      { (!_.isEmpty(symbolResults) && !loading)?\n      <div style={{ textAlign: 'left', margin: '10px' }}>\n        <h2>Symbol Results</h2>\n        <ul>\n          { (() => {\n              const name = _.get(symbolResults, 'name', null);\n              const symbol = _.get(symbolResults, 'symbol', null);\n              const holders = _.get(symbolResults, 'holders', null);\n              const holdings = _.get(symbolResults, 'holdings', null);\n\n              return <li key={ name }>\n                <strong>{ name + ' ( ' + symbol + ' )' }</strong>\n                { ' : ' }\n                { !holders? null :\n                  <Link to={ '/holders/' + holders }>\n                    Holders\n                  </Link>\n                }\n                {holders && holdings? ' | ' :null}\n                { !holdings? null :\n                  <Link to={ '/holdings/' + holdings }>\n                    Holdings\n                  </Link>\n                }\n                {!holders && !holdings? 'No holders or holdings views available.' :null}\n              </li>;\n            })()\n          }\n        </ul>\n      </div>\n      :null}\n    </div>);\n  }\n\n};\n","import React from 'react';\nimport queryString from 'query-string';\nimport _ from 'lodash';\n\nimport { Link } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TextField from '@material-ui/core/TextField';\n\n// need CIK\n\nconst styles = {\n  'textField': {\n    margin: '5px',\n    width: '30%',\n    minWidth: '300px',\n    display: 'inline-block',\n    position: '',\n    bottom: 0\n  },\n};\n\nfunction TablePaginationActions(props) {\n    const useStyles1 = makeStyles(theme => ({\n      root: {\n        flexShrink: 0,\n        marginLeft: theme.spacing(2.5),\n      },\n    }));\n    \n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\n// need CUSIP\nfunction EnhancedTableHead(props) {\n  const { order, orderBy, onRequestSort, headCells } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.align}\n            style={{ minWidth: headCell.minWidth, fontFamily: 'Courier New' }}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={order}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {/*orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null*/}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  headCells: PropTypes.object.isRequired,\n};\n\nexport class HoldingsView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n\n    // get Stitch controller from props\n    this.stitch = this.props.stitch;\n\n    // bind this to all non-React functions\n    this._getHoldings = this._getHoldings.bind(this);\n    this._handleChange = this._handleChange.bind(this);\n\n    const initialCikFromPath = _.get(this.props, 'match.params.cik', null);\n    const initialCikFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'cik', null);\n    const initialCik = initialCikFromPath? initialCikFromPath :initialCikFromQuery;\n\n    // initialize state\n    this.state = {\n      'holdings': null,\n      'cik': initialCik,\n      'loading': true,\n      'tableInfo': {\n        'page': 0,\n        'rowsPerPage': 10\n      },\n      'currentOnly': false,\n      'order': 'desc',\n      'orderBy': 'ownership_length',\n      'filter': '',\n    };\n  }\n\n  componentDidMount() {\n    const cik = this.state.cik;\n\n    if(this.props.stitchInitialized && cik) {\n      this._getHoldings(cik);\n    }\n\n    else if(this.props.stitchInitialized && this.state.loading) {\n      this.setState({ loading: false });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.stitchInitialized) {\n      const cikFromPath = _.get(this.props, 'match.params.cik', null);\n      const oldCikFromPath = _.get(prevProps, 'match.params.cik', null);\n      const cikFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'cik', null);\n      const oldCikFromQuery = _.get(queryString.parse(_.get(prevProps, 'location.search', null)), 'cik', null);\n\n      if(cikFromPath || cikFromQuery) {\n        let cik, oldCik;\n\n        if(cikFromPath) {\n          cik = cikFromPath;\n          oldCik = oldCikFromPath;\n        }\n\n        else if(cikFromQuery) {\n          cik = cikFromQuery;\n          oldCik = oldCikFromQuery;\n        }\n\n        if(cik !== oldCik) {\n          this._getHoldings(cik);\n        }\n      }\n    }\n  }\n\n  _handleChange(event, type) {\n    if(type === 'current_only') {\n      this.setState({\n        'currentOnly': event.target.checked\n      });  \n    }\n\n    if(type === 'filter') {\n      this.setState({\n        'filter': event.target.value\n      });\n    }\n  }\n\n  _getHoldings(cik) {\n    const strCik = cik.toString();\n\n    if(strCik.length <= 10) {\n      const cik = strCik.padStart(10, '0');\n      this.stitch.callFunction('getHoldingsForFiler', [ cik ])\n        .then(res => {\n          const holdings = _.get(res, 'data.holdings', null);\n          let modifiedHoldings;\n          \n          if(holdings) {\n            modifiedHoldings = _.map(holdings, (holding, index) => ({\n              'name': _.get(holding, 'issuer_names.0', null),\n              'cusip6': _.get(holding, 'cusip6', null),\n              'cusip9': _.get(holding, 'cusip9', null),\n              'from': _.get(holding, 'from.year') + 'q' + _.get(holding, 'from.quarter'),\n              'to': _.get(holding, 'to.year') + 'q' + _.get(holding, 'to.quarter'),\n              'ownership_length': _.get(holding, 'ownership_length'),\n              'key': _.get(holding, 'cusip6', '') + index.toString()\n            }));\n          }\n\n          if(_.isEmpty(modifiedHoldings)) {\n            modifiedHoldings = null;\n          }\n\n          this.setState({\n            'holdings': modifiedHoldings,\n            'loading': false,\n            'filer_names': _.get(res, 'data.filer_names', null)\n          });\n        })\n        .catch(err => {\n          this.setState({\n            'loading': false,\n          });\n          console.error(err);\n        });\n    }\n\n    else {\n      this.setState({\n        'loading': false,\n        'cik': strCik,\n      });\n    }\n  }\n\n\n  render() {\n\n    const order = this.state.order;\n    const orderBy = this.state.orderBy;\n\n    const handleRequestSort = (event, property) => {\n      const isDesc = orderBy === property && order === 'desc';\n      this.setState({ order: isDesc ? 'asc' : 'desc' });\n      this.setState({ orderBy: property });\n    };\n\n    const classes = makeStyles({\n      root: {\n        width: '100%',\n      },\n      tableWrapper: {\n        maxHeight: 440,\n        overflow: 'auto',\n      },\n    });\n\n    const handleChangePage = (event, newPage) => {\n      const tableInfo = this.state.tableInfo;\n      tableInfo.page = newPage;\n      this.setState({ tableInfo });\n    };\n\n    const handleChangeRowsPerPage = event => {\n      const tableInfo = this.state.tableInfo;\n      tableInfo.page = 0;\n      tableInfo.rowsPerPage = +event.target.value; // number conversion, unary '+'\n      this.setState({ tableInfo });\n    };\n\n    const columns = [\n      { id: 'name', label: 'Issuer Name', minWidth: 170 },\n      /*{ id: 'cik', label: 'CIK', minWidth: 100 },\n      {\n        id: 'cik9',\n        label: 'CIK9',\n        minWidth: 170,\n        format: value => value.toLocaleString(),\n      },*/\n      {\n        id: 'from',\n        label: 'From',\n        minWidth: 70,\n        format: value => value.toLocaleString(),\n        align: 'right'\n      },\n      {\n        id: 'to',\n        label: 'To',\n        minWidth: 70,\n        align: 'right'\n      },\n      {\n        id: 'ownership_length',\n        label: 'Ownership Length (Quarters)',\n        minWidth: 70,\n        align: 'right'\n      },\n    ];\n\n\n    const rowsPerPage = this.state.tableInfo.rowsPerPage;\n    const page = this.state.tableInfo.page;\n    const loading = this.state.loading;\n\n    const date = new Date();\n    const currentYear = date.getFullYear();\n    const currentQuarter = ~~((date.getMonth() + 1) / 3) + 1;\n\n    const currentOnly = this.state.currentOnly;\n\n    let holdings = _.filter(this.state.holdings, holding => holding['name'] && holding['cusip6'] && holding['cusip9']);\n    if(currentOnly) {\n      holdings = _.filter(holdings, holding => {\n        const holdingYear = parseInt(_.get(holding, 'to', '0000q0').substring(0, 4));\n        const holdingQuarter = parseInt(_.get(holding, 'to', '0000q0').substring(5, 6));\n\n        if(!Math.abs(currentYear - holdingYear)) {\n          return Math.abs(currentQuarter - holdingQuarter) <= 1;\n        }\n        \n        return Math.abs(currentYear - holdingYear) === 1 && currentQuarter === 1 && holdingQuarter === 4;\n      });\n    }\n\n    const filterValue = this.state.filter;\n\n    if(!_.isEmpty(filterValue)) {\n      const filterValueLower = _.lowerCase(filterValue.toString());\n      const colKeys = _.map(columns, column => column.id);\n      holdings = _.filter(holdings, holding => {\n        const slimHolding = _.pick(holding, colKeys);\n        return _.map(_.values(slimHolding), value => _.includes(_.lowerCase(value.toString()), filterValueLower)).some(a => a)\n      });\n    }\n\n\n    const cik = this.state.cik;\n    let avgOwnership = 0;\n\n    if(holdings && holdings.length) {\n      avgOwnership = _.reduce(_.map(holdings, holding => holding.ownership_length), (acc, num) => {\n        return acc + num;\n      }, 0) / holdings.length;\n      avgOwnership = Math.round(avgOwnership * 1000) / 1000;\n    }\n\n    const filer_name = _.get(this.state, 'filer_names.0', null);\n    \n    return (\n      <>\n        { loading? <><div style={{ minHeight: '30vh' }}></div>One moment please ...</> :null}\n        { (!loading && !holdings)? <><div style={{ minHeight: '30vh' }}></div>{ `No results for requested CIK \"${cik}\"!` }</> :null}\n        { loading || !holdings? null :\n        <>\n        <div style={{ display: 'block', width: '100%', textAlign: 'center' }}>\n          <h1>{ filer_name }</h1>\n        </div>\n        <Paper className={classes.root} style={{ display: 'block', width: '100%' }}>\n          <div className={classes.tableWrapper}>\n            <Table size='small' stickyHeader aria-label=\"sticky table\">\n              { /*<TableHead>\n                <TableRow>\n                  {columns.map(column => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth, fontFamily: 'Courier New' }}\n                    >\n                      <strong>{column.label}</strong>\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead> */ }\n              <EnhancedTableHead\n                classes={classes}\n                order={order}\n                orderBy={orderBy}\n                onRequestSort={handleRequestSort}\n                headCells={columns}\n              />\n              <TableBody>\n                {!holdings? null : stableSort(holdings, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                  return (\n                    <TableRow hover tabIndex={-1} key={row.key}>\n                      {columns.map(column => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align} style={{ fontFamily: 'Courier New' }}>\n                            {\n                              (() => {\n                                if(column.id === 'name') {\n                                  return <Link style={{ textDecoration: 'none', color: 'blue' }} to={ '/holders/' + row.cusip6 }>{ value }</Link>;\n                                }\n\n                                return column.format && typeof value === 'number' ? column.format(value) : value;\n                              })()\n                            }\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n              <TableFooter>\n                <TableRow>\n                  <TableCell colSpan={ columns.length - 2}>\n                    <TextField\n                      onChange={(event) => this._handleChange(event, 'filter')}\n                      /*label='Filter'*/\n                      /*variant='filled'*/\n                      placeholder='Filter'\n                      type='search'\n                      value={ filterValue }\n                      style={ styles.textField }\n                      fullWidth\n                    />\n                  </TableCell>\n                  <TableCell style={{ fontFamily: 'Courier New' }}>\n                    <Checkbox\n                      checked={currentOnly}\n                      onChange={(event) => {\n                        this._handleChange(event, 'current_only');\n                        handleChangePage(event, 0);\n                      }}\n                      color=\"primary\"\n                    /> Show current holdings only \n                  </TableCell>\n                  <TableCell style={{ textAlign: 'right', fontFamily: 'Courier New' }}>\n                    <strong>Average</strong>: { avgOwnership } quarters ({Math.round(1000 * avgOwnership / 4)/1000} years)\n                  </TableCell>\n                </TableRow>\n              </TableFooter>\n            </Table>\n          </div>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 50, 100]}\n            component=\"div\"\n            count={!holdings? 0 :holdings.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            ActionsComponent={TablePaginationActions}\n          />\n        </Paper>\n        </>\n        }\n      </>\n    );\n  }\n\n};\n","import React from 'react';\nimport queryString from 'query-string';\nimport _ from 'lodash';\n\nimport { Link } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = {\n  'textField': {\n    margin: '5px',\n    width: '30%',\n    minWidth: '300px',\n    display: 'inline-block',\n    position: '',\n    bottom: 0\n  },\n};\n\nfunction TablePaginationActions(props) {\n  const useStyles1 = makeStyles(theme => ({\n    root: {\n      flexShrink: 0,\n      marginLeft: theme.spacing(2.5),\n    },\n  }));\n\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\n// need CUSIP\nfunction EnhancedTableHead(props) {\n  const { order, orderBy, onRequestSort, headCells } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.align}\n            style={{ minWidth: headCell.minWidth, fontFamily: 'Courier New' }}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={order}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {/*orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null*/}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  headCells: PropTypes.array.isRequired,\n};\n\n\nexport class HoldersView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n\n    // get Stitch controller from props\n    this.stitch = this.props.stitch;\n\n    // bind this to all non-React functions\n    this._getHolders = this._getHolders.bind(this);\n    this._handleChange = this._handleChange.bind(this);\n\n    const initialCusipFromPath = _.get(this.props, 'match.params.cusip', null);\n    const initialCusipFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'cusip', null);\n    const initialCusip = initialCusipFromPath? initialCusipFromPath :initialCusipFromQuery;\n\n    // initialize state\n    this.state = {\n      'holders': null,\n      'cusip': initialCusip,\n      'loading': true,\n      'tableInfo': {\n        'page': 0,\n        'rowsPerPage': 10\n      },\n      'currentOnly': false,\n      'order': 'desc',\n      'orderBy': 'ownership_length',\n      'filter': '',\n    };\n  }\n\n  componentDidMount() {\n    const cusip = this.state.cusip;\n\n    if(this.props.stitchInitialized && cusip) {\n      this._getHolders(cusip);\n    }\n\n    else if(this.props.stitchInitialized && this.state.loading) {\n      this.setState({ loading: false });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.stitchInitialized) {\n      const cusipFromPath = _.get(this.props, 'match.params.cusip', null);\n      const oldCusipFromPath = _.get(prevProps, 'match.params.cusip', null);\n      const cusipFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'cusip', null);\n      const oldCusipFromQuery = _.get(queryString.parse(_.get(prevProps, 'location.search', null)), 'cusip', null);\n\n      if(cusipFromPath || cusipFromQuery) {\n        let cusip, oldCusip;\n\n        if(cusipFromPath) {\n          cusip = cusipFromPath;\n          oldCusip = oldCusipFromPath;\n        }\n\n        else if(cusipFromQuery) {\n          cusip = cusipFromQuery;\n          oldCusip = oldCusipFromQuery;\n        }\n\n        if(cusip !== oldCusip) {\n          this._getHolders(cusip);\n        }\n      }\n    }\n  }\n\n  _handleChange(event, type) {\n    if(type === 'current_only') {\n      this.setState({\n        'currentOnly': event.target.checked\n      });  \n    }\n\n    if(type === 'filter') {\n      this.setState({\n        'filter': event.target.value\n      });\n    }\n  }\n\n  _getHolders(cusip) {\n    const strCusip = cusip.toString();\n\n    if(strCusip.length >= 6) {\n      const cusip6 = cusip.substr(0, 6);\n      this.stitch.callFunction('getHoldersForIssuer', [ cusip6 ])\n        .then(res => {\n          const holdings = _.get(res, 'data.holdings', null);\n          let modifiedHoldings;\n          \n          if(holdings) {\n            modifiedHoldings = _.map(holdings, (holding, index) => ({\n              'name': _.get(holding, 'filer_names.0', null),\n              'cik': _.get(holding, 'cik', null),\n              'cusip9': _.get(holding, 'cusip9', null),\n              'from': _.get(holding, 'from.year') + 'q' + _.get(holding, 'from.quarter'),\n              'to': _.get(holding, 'to.year') + 'q' + _.get(holding, 'to.quarter'),\n              'ownership_length': _.get(holding, 'ownership_length'),\n              'key': _.get(holding, 'cik', '') + index.toString()\n            }));\n          }\n\n          if(_.isEmpty(modifiedHoldings)) {\n            modifiedHoldings = null;\n          }\n\n          this.setState({\n            'holders': modifiedHoldings,\n            'loading': false,\n            'issuer_names': _.get(res, 'data.issuer_names', null)\n          });\n        })\n        .catch(err => {\n          this.setState({\n            'loading': false,\n          });\n          console.error(err);\n        });\n    }\n\n    else {\n      this.setState({\n        'loading': false,\n        'cusip': strCusip,\n      });\n    }\n  }\n\n\n  render() {\n\n    const order = this.state.order;\n    const orderBy = this.state.orderBy;\n\n    const handleRequestSort = (event, property) => {\n      const isDesc = orderBy === property && order === 'desc';\n      this.setState({ order: isDesc ? 'asc' : 'desc' });\n      this.setState({ orderBy: property });\n    };\n\n    const classes = makeStyles({\n      root: {\n        width: '100%',\n      },\n      tableWrapper: {\n        maxHeight: 440,\n        overflow: 'auto',\n      },\n    });\n\n    const columns = [\n      { id: 'name', label: 'Holder Name', minWidth: 170 },\n      /*{ id: 'cik', label: 'CIK', minWidth: 100 },\n      {\n        id: 'cusip9',\n        label: 'CUSIP9',\n        minWidth: 170,\n        format: value => value.toLocaleString(),\n      },*/\n      {\n        id: 'from',\n        label: 'From',\n        minWidth: 70,\n        format: value => value.toLocaleString(),\n        align: 'right'\n      },\n      {\n        id: 'to',\n        label: 'To',\n        minWidth: 70,\n        align: 'right'\n      },\n      {\n        id: 'ownership_length',\n        label: 'Ownership Length (Quarters)',\n        minWidth: 170,\n        align: 'right'\n      },\n    ];\n\n    const handleChangePage = (event, newPage) => {\n      const tableInfo = this.state.tableInfo;\n      tableInfo.page = newPage;\n      this.setState({ tableInfo });\n    };\n\n    const handleChangeRowsPerPage = event => {\n      const tableInfo = this.state.tableInfo;\n      tableInfo.page = 0;\n      tableInfo.rowsPerPage = +event.target.value; // number conversion, unary '+'\n      this.setState({ tableInfo });\n    };\n\n    const rowsPerPage = this.state.tableInfo.rowsPerPage;\n    const page = this.state.tableInfo.page;\n    const loading = this.state.loading;\n\n    const date = new Date();\n    const currentYear = date.getFullYear();\n    const currentQuarter = ~~((date.getMonth() + 1) / 3) + 1;\n\n    const currentOnly = this.state.currentOnly;\n\n    let holders = _.filter(this.state.holders, holder => holder['name'] && holder['cik'] && holder['cusip9']);\n    if(currentOnly) {\n      holders = _.filter(holders, holder => {\n        const holderYear = parseInt(_.get(holder, 'to', '0000q0').substring(0, 4));\n        const holderQuarter = parseInt(_.get(holder, 'to', '0000q0').substring(5, 6));\n\n        if(!Math.abs(currentYear - holderYear)) {\n          return Math.abs(currentQuarter - holderQuarter) <= 1;\n        }\n        \n        return Math.abs(currentYear - holderYear) === 1 && currentQuarter === 1 && holderQuarter === 4;\n      });\n    }\n\n    const filterValue = this.state.filter;\n\n    if(!_.isEmpty(filterValue)) {\n      const filterValueLower = _.lowerCase(filterValue.toString());\n      const colKeys = _.map(columns, column => column.id);\n      holders = _.filter(holders, holder => {\n        const slimHolder = _.pick(holder, colKeys);\n        return _.map(_.values(slimHolder), value => _.includes(_.lowerCase(value.toString()), filterValueLower)).some(a => a)\n      });\n    }\n    \n    const cusip = this.state.cusip;\n    let avgOwnership = 0;\n\n    if(holders && holders.length) {\n      avgOwnership = _.reduce(_.map(holders, holder => holder.ownership_length), (acc, num) => {\n        return acc + num;\n      }, 0) / holders.length;\n      avgOwnership = Math.round(avgOwnership * 1000) / 1000;\n    }\n\n    const issuer_name = _.get(this.state, 'issuer_names.0', null);\n\n    \n    return (\n      <>\n        { loading? <><div style={{ minHeight: '30vh' }}></div>One moment please ...</> :null}\n        { (!loading && !holders)? <><div style={{ minHeight: '30vh' }}></div>{ `No results for requested CUSIP \"${cusip}\"!` }</> :null}\n        { loading || !holders? null :\n        <>\n        <div style={{ display: 'flex', flexDirection: 'column', width: '100%', textAlign: 'center', justifyContent: 'center' }}>\n          <h1>{ issuer_name }</h1>\n        </div>\n        <Paper className={classes.root} style={{ display: 'block', width: '100%' }}>\n          <div className={classes.tableWrapper}>\n            <Table size='small' stickyHeader aria-label=\"sticky table\">\n              { /*<TableHead>\n                <TableRow>\n                  {columns.map(column => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth, fontFamily: 'Courier New' }}\n                    >\n                      <strong>{column.label}</strong>\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead> */ }\n              <EnhancedTableHead\n                order={order}\n                orderBy={orderBy}\n                onRequestSort={handleRequestSort}\n                headCells={columns}\n              />\n              <TableBody>\n                {!holders? null : stableSort(holders, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                  return (\n                    <TableRow hover tabIndex={-1} key={row.key}>\n                      {columns.map(column => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align} style={{ fontFamily: 'Courier New' }}>\n                            {\n                              (() => {\n                                if(column.id === 'name') {\n                                  return <Link style={{ textDecoration: 'none', color: 'blue' }} to={ '/holdings/' + row.cik }>{ value }</Link>;\n                                }\n\n                                return column.format && typeof value === 'number' ? column.format(value) : value;\n                              })()\n                            }\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n              <TableFooter>\n                <TableRow>\n                  <TableCell colSpan={ columns.length - 2}>\n                    <TextField\n                      onChange={(event) => this._handleChange(event, 'filter')}\n                      /*label='Filter'*/\n                      /*variant='filled'*/\n                      placeholder='Filter'\n                      type='search'\n                      value={ filterValue }\n                      style={ styles.textField }\n                      fullWidth\n                    />\n                  </TableCell>\n                  <TableCell style={{ fontFamily: 'Courier New' }}>\n                    <Checkbox\n                      checked={currentOnly}\n                      onChange={(event) => {\n                        this._handleChange(event, 'current_only');\n                        handleChangePage(event, 0);\n                      }}\n                      color=\"primary\"\n                    /> Show current holders only \n                  </TableCell>\n                  <TableCell style={{ textAlign: 'right', fontFamily: 'Courier New' }}>\n                    <strong>Average</strong>: { avgOwnership } quarters ({Math.round(1000 * avgOwnership / 4)/1000} years)\n                  </TableCell>\n                </TableRow>\n              </TableFooter>\n            </Table>\n          </div>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 50, 100]}\n            component=\"div\"\n            count={!holders? 0 :holders.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            ActionsComponent={TablePaginationActions}\n          />\n        </Paper>\n        </>\n        }\n      </>\n    );\n  }\n\n};\n","import React from 'react';\n//import _ from 'lodash';\n\nimport { StitchController } from '../';\nimport { Input, Button, ButtonGroup } from '@material-ui/core';\n\nexport class UserInput extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      loading: true,  // is the UI still loading?\n      status: 0,      // zero means OK, non-zero means NOT OK\n      inputValue: \"\"\n    };\n\n    // instantiate Stitch controller\n    this.stitch = new StitchController();\n    \n    // bind this for non-React functions\n    this._handleInputChange = this._handleInputChange.bind(this);\n  }\n\n  _handleInputChange(event) {\n    this.setState({ inputValue: event.target.value });\n  }\n\n  _handleClick(name) {\n    // clean up the input here if you want\n    const cleanInput = this.state.inputValue;\n\n    // TODO : add support for the checkbox (choosing the current holders / positions only)\n    /*const options = {\n      currentOnly: false\n    };*/\n\n    switch(name) {\n      case 'company':\n        this.stitch.callFunction('searchForCompany', [cleanInput])\n        .then(searchResult => {\n          console.log(searchResult);\n          return {\n            'companySearchResult': searchResult\n          };\n        })\n          /*\n          // TODO : check status of result\n          const cik = _.get(searchResult, 'data.cik', null);\n\n          return this.stitch.callFunction('getAverageTimePositionsHeldForFund', [cik, options])\n          .then(avgPosResult => {\n            return this.stitch.callFunction('getPositionsForFund', [cik, options])\n            .then(posForFundResult => {\n\n              return {\n                'searchForFund': searchResult,\n                'getAverageTimePositionsHeldForFund': avgPosResult,\n                'getPositionsForFund': posForFundResult,\n              };\n            })\n            .catch(err => {\n              console.log(err);\n              return {};\n            });\n          })\n        })\n        .then(res => {\n          console.log(res);\n          return this.props.handleSubmission(res);\n        })*/\n        .catch(err => {\n          console.log(err);\n        });\n        break;\n\n      case 'symbol':\n        this.stitch.callFunction('searchForSymbol', [cleanInput])\n        .then(searchResult => {\n          console.log(searchResult);\n          return {\n            'symbolSearchResult': searchResult\n          };\n        })\n          /*\n          // TODO : check status of result\n          const cusip = _.get(searchResult, 'data.cusip', null);\n          \n          return this.stitch.callFunction('getHoldersForTicker', [cusip, options])\n          .then(results => {\n            return {\n              'searchForCompany': searchResult,\n              'getHoldersForTicker': results\n            };\n          })\n          .catch(err => {\n            console.log(err);\n          })\n        })\n        .then(res => {\n          console.log(res);\n          return this.props.handleSubmission(res);\n        })*/\n        .catch(err => {\n          console.log(err);\n        });\n        break;\n\n      default:\n    }\n  }\n\n  componentDidMount() {\n    // initialize Stitch controller\n    this.stitch.init()\n    .then(() => {\n      this.setState({ loading: false, status: 0 });  // no longer loading\n    })\n    .catch(err => {\n      console.log(err);\n      this.setState({ loading: false, status: -1 });  // no longer loading, but bad status\n    });\n  }\n\n  render() {\n    return (\n      <div style={ styles.container }>\n        <Input\n          disabled={ this.state.loading }\n          error={ this.state.error }\n          placeholder=\"Search by ...\"\n          style={ styles.input }\n          value={ this.state.inputValue }\n          onChange={ this._handleInputChange }\n        />\n        <ButtonGroup>\n          <Button\n            disabled={ this.state.loading }\n            onClick={ () => this._handleClick('company') }\n          >\n            Company\n          </Button>\n          <Button\n            disabled={ this.state.loading }\n            onClick={ () => this._handleClick('symbol') }\n          >\n            Symbol\n          </Button>\n        </ButtonGroup>\n      </div>\n    );\n  }\n};\n\nconst styles = {\n  container: {\n    \n  },\n  button: {\n\n  },\n  input: {\n    margin: 5,\n  }\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\n\nexport class ResultsGetHoldersForTicker extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      column: null,\n      direction: null,\n      data: this.props.results.data,\n      rawData: this.props.results.data\n    };\n  }\n\n  // update raw results from props\n  componentDidUpdate() {\n    if(!_.isEqual(this.props.results.data, this.state.rawData)) {\n      this.setState({\n        data: this.props.results.data,\n        rawData: this.props.results.data,\n      });\n    } \n  }\n\n  _handleSort = (clickedColumn) => () => {\n    const { column, direction } = this.state;\n\n    // sort by ascending if not clicked\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        direction: 'ascending',\n        data: _.sortBy(this.state.data, [ clickedColumn ])\n      });\n    }\n\n    // if clicked, toggle sort direction\n    else {\n      this.setState({\n        direction: direction === 'ascending' ? 'descending' : 'ascending',\n        data: this.state.data.reverse()\n      });\n    }\n  }\n\n  render() {\n    const { column, direction, data } = this.state;\n    const columnNames = [ 'name', 'cik', 'from', 'to', 'quarters' ];\n    const columnNameDisplay = {\n      'name': 'Name',\n      'cik': 'CIK',\n      'from': 'From',\n      'to': 'To',\n      'quarters': 'Quarters'\n    };\n\n    return (\n      // name the div here? TODO\n      <div style={ styles.container }>\n        <Table>\n          <TableHead>\n            <TableRow>\n              {\n                _.map(columnNames, name => (\n                  <TableCell\n                    key={ name }\n                    sorted={ column === name? direction :null }\n                    onClick={ this._handleSort(name) }\n                  >\n                    { columnNameDisplay[name] }\n                  </TableCell>\n                ))\n              }\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              _.map(data, ({ name, cik, from, to, quarters }, idx) => (\n                  <TableRow key={ _.join([cik, '-', idx], '') }>\n                    <TableCell><code>{ name }</code></TableCell>\n                    <TableCell><code>{ cik }</code></TableCell>\n                    <TableCell><code>{ from }</code></TableCell>\n                    <TableCell><code>{ to }</code></TableCell>\n                    <TableCell><code>{ quarters }</code></TableCell>\n                  </TableRow>\n              ))\n            }\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n\n};\n\nconst styles = {\n  container: {\n    margin: 20\n  }\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\n\nexport class ResultsGetPositionsForFund extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      column: null,\n      direction: null,\n      data: this.props.results.data.filerSearch.data.results.data.holdings,\n      rawResults: this.props.results.data.filerSearch.data.results.data.holdings,\n    };\n  }\n\n  // update raw results from props\n  componentDidUpdate() {\n    if(!_.isEqual(this.props.results, this.state.rawResults)) {\n      this.setState({\n        data: this.props.results.data,\n        rawResults: this.props.results,\n      });\n    } \n  }\n\n  _handleSort = (clickedColumn) => () => {\n    const { column, direction } = this.state;\n\n    // sort by ascending if not clicked\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        direction: 'ascending',\n        data: _.sortBy(this.state.data, [ clickedColumn ])\n      });\n    }\n\n    // if clicked, toggle sort direction\n    else {\n      this.setState({\n        direction: direction === 'ascending' ? 'descending' : 'ascending',\n        data: this.state.data.reverse()\n      });\n    }\n  }\n\n  render() {\n    const { column, direction, data } = this.state;\n    const columnNames = [ 'name', 'cusip', 'from', 'to', 'quarters' ];\n    const columnNameDisplay = {\n      'name': 'Name',\n      'cusip': 'CUSIP',\n      'from': 'From',\n      'to': 'To',\n      'quarters': 'Quarters'\n    };\n\n    return (\n      // name the div here? TODO\n      <div style={ styles.container }>\n        <Table>\n          <TableHead>\n            <TableRow>\n              {\n                _.map(columnNames, name => (\n                  <TableCell\n                    key={ name }\n                    sorted={ column === name? direction :null }\n                    onClick={ this._handleSort(name) }\n                  >\n                    { columnNameDisplay[name] }\n                  </TableCell>\n                ))\n              }\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              _.map(data, ({ names, cusip6, from, to, ownership_length }, idx) => (\n                  <TableRow key={ _.join([cusip6, '-', idx], '') }>\n                    <TableCell><code>{ names[0] }</code></TableCell>\n                    <TableCell><code>{ cusip6 }</code></TableCell>\n                    <TableCell><code>{ from.year }q{ from.quarter }</code></TableCell>\n                    <TableCell><code>{ to.year }q{ to.quarter }</code></TableCell>\n                    <TableCell><code>{ ownership_length}</code></TableCell>\n                  </TableRow>\n              ))\n            }\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n\n};\n\nconst styles = {\n  container: {\n    margin: 20\n  }\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow\n} from '@material-ui/core';\n\nexport class ResultsGetAverageTimePositionsHeldForFund extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: this.props.results.data,\n      rawData: this.props.results.data,\n    };\n  }\n\n  // update raw results from props\n  componentDidUpdate() {\n    if(!_.isEqual(this.props.results.data, this.state.rawData)) {\n      this.setState({\n        data: this.props.results.data,\n        rawData: this.props.results.data,\n      });\n    } \n  }\n\n  render() {\n    const { data } = this.state;\n\n    return (\n      <div style={ styles.container }>\n        <Table>\n          <TableBody>\n            <TableRow key='total'>\n              <TableCell>\n                <strong>Total Positions Found</strong>\n              </TableCell>\n              <TableCell>\n                <code>{ data.positionsCount }</code>\n              </TableCell>\n            </TableRow>\n            <TableRow key='year'>\n              <TableCell>\n                <strong>Average Time Held of All Positions (Years)</strong>\n              </TableCell>\n              <TableCell>\n                <code>{ Math.round(data.averageLengthOfStockOwnership.years * 1000) / 1000 }</code>\n              </TableCell>\n            </TableRow>\n            <TableRow key='quarters'>\n              <TableCell>\n                <strong>Average Time Held of All Positions (Quarters)</strong>\n              </TableCell>\n              <TableCell>\n                <code>{ Math.round(data.averageLengthOfStockOwnership.quarters * 1000) / 1000 }</code>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n\n};\n\nconst styles = {\n  container: {\n    margin: 20\n  }\n};\n","import React from 'react';\nimport _ from 'lodash';\n\n// import individual results formatters\nimport { ResultsGetHoldersForTicker } from './functions/ResultsGetHoldersForTicker';\nimport { ResultsGetPositionsForFund } from './functions/ResultsGetPositionsForFund';\nimport { ResultsGetAverageTimePositionsHeldForFund } from './functions/ResultsGetAverageTimePositionsHeldForFund';\n\nexport class ResultsFormatter extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // define function results from action controller in state\n    this.state = {\n        results: this.props.results,\n    };\n  }\n\n  componentDidUpdate() {\n    if(!_.isEqual(this.props.results, this.state.results)) {\n      this.setState({\n        results: this.props.results,\n      });\n    } \n  }\n\n  render() {\n    const { results } = this.state;\n\n    return (\n      <div style={ styles.container }>\n        {\n          !_.get(results, 'companySearchResult', -1)?\n            <>Showing results for fund <strong><code>\"{ _.get(results, 'companySearchResult.data.filerSearch.data.count', '') }\" (CIK : { _.get(results, 'companySearchResult.data.filerSearch.data.count', '') })</code></strong></>\n          :null\n        }\n\n        {\n          !_.get(results, 'searchForCompany.status', -1)?\n            <>Showing results for company <strong><code>\"{ _.get(results, 'searchForCompany.data.name', '') }\" (CUSIP : { _.get(results, 'searchForCompany.data.cusip', '') })</code></strong></>\n          :null\n        }\n\n        {\n          // position average information\n          !_.get(results, 'getAverageTimePositionsHeldForFund.status', -1)?\n            <ResultsGetAverageTimePositionsHeldForFund\n              results={ results.getAverageTimePositionsHeldForFund }\n            />\n          :null\n        }\n        \n        {\n          // fund positions information\n          !_.get(results, 'companySearchResult.status', -1)?\n            <ResultsGetPositionsForFund\n              results={ results.companySearchResult }\n            />\n          :null\n        }\n        \n        {\n          // company holders information\n          !_.get(results, 'symbolSearchResult.status', -1)?\n            <ResultsGetHoldersForTicker\n              results={ results.symbolSearchResult }\n            />\n          :null\n        }\n      </div>\n    );\n  }\n};\n\nconst styles = {\n  container: {\n    margin: 20\n  }\n};\n","import React from 'react';\n\n// main components for user interface\nimport { UserInput } from './UserInput';\nimport { ResultsFormatter } from './ResultsFormatter';\n\nexport class UserInterface extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // initialize state\n    this.state = {\n      submissionResults: null  // to store submission results for display in child component(s)\n    };\n    \n    // bind non-React functions\n    this._handleSubmission = this._handleSubmission.bind(this);\n  }\n\n  // handle the submission of the child UserInput component\n  _handleSubmission(results) {\n    this.setState({ submissionResults: results });\n  }\n\n  componentDidMount() {\n    \n  }\n  \n  render() {\n    return (<div>\n      <UserInput\n        handleSubmission={ this._handleSubmission } // pass down submission handler to store results\n      />\n      <br/>\n      <ResultsFormatter\n        results={ this.state.submissionResults? this.state.submissionResults :undefined }\n      />\n    </div>);\n  }\n};\n","import { UserInterface } from './components/UserInterface';\nimport { UserInput } from './components/UserInput';\nimport { ResultsFormatter } from './components/ResultsFormatter';\n\nconst {\n  Stitch,\n  RemoteMongoClient,\n  UserApiKeyCredential\n} = require('mongodb-stitch-browser-sdk');\n\nexport class StitchController {\n  constructor() {\n    this.db = {}; // initialize database object\n    this.sc = {}; // initialize service client object\n  }\n\n  // initialize the controller\n  async init() {\n    try {\n      this.initClientForAppId(process.env.REACT_APP_STITCH_APP_ID);                            // initializes the client\n      await this.loginUsingApiKey(process.env.REACT_APP_STITCH_API_SECRET);                    // authorizes the client for use\n      const mongodb = await this.initServiceClient(process.env.REACT_APP_STITCH_SERVICE_NAME); // initializes MongoDB service client (for database access)\n      await this.initDBFromServiceClient('filings', mongodb);                                  // initializes test db for access\n      return 0;\n    }\n    catch(err) {\n      console.error(err);\n      return err;\n    }\n  }\n\n  // returns client \n  initClientForAppId(appId) {\n    this.client = Stitch.initializeDefaultAppClient(appId);\n  }\n\n  // returns a Promise (of user info)\n  loginUsingApiKey(key) {\n    const credential = new UserApiKeyCredential(process.env.REACT_APP_STITCH_API_SECRET);\n    return this.client.auth.loginWithCredential(credential)\n      .then(user => {\n        console.log(`Logged into Stitch client as API user (server) with id: ${user.id}`);\n        return user;\n      })\n      .catch(err => {\n        console.error(err);\n        return err;\n      });\n  }\n\n  // returns a Promise (of service client)\n  async initServiceClient(name) {\n    this.sc[name] = await this.client.getServiceClient(\n      RemoteMongoClient.factory,\n      name\n    );\n\n    return this.sc[name];\n  }\n\n  // returns Promise (of db client)\n  async initDBFromServiceClient(name, sc) {\n    this.db[name] = await sc.db(name);\n\n    return this.db[name];\n  }\n\n  callFunction(name, args) {\n    return this.client.callFunction(name, args)\n      .catch(err => {\n        console.error(err);\n        return err;\n      });\n  }\n};\n\n\nexport const StitchComponents = {\n  UserInterface,\n  UserInput,\n  ResultsFormatter\n};\n","import React from 'react';\nimport './App.css';\nimport { blue } from '@material-ui/core/colors';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n/*\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\n*/\n\n// need this for the Stitch UI\n//import { StitchComponents } from './stitch';\n\nimport { Search } from './Search';\nimport { SearchResults } from './SearchResults';\nimport { HoldingsView } from './HoldingsView';\nimport { HoldersView } from './HoldersView';\nimport { StitchController } from './stitch';\nimport HomeIcon from '@material-ui/icons/Home';\n\n//import Logo from './media/assets/images/gghc.png';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // initialize state\n    this.state = {\n      window: {\n        width: 0,\n        height: 0\n      },\n      'stitchInitialized': false,\n      'loading': true\n    };\n\n    // intantiate Stitch controller\n    this.stitch = new StitchController();\n\n    // bind non-React functions\n    this._updateWindowDimensions = this._updateWindowDimensions.bind(this);\n  }\n\n  _updateWindowDimensions() {\n    this.setState({ window: { width: window.innerWidth, height: window.innerHeight } });\n  }\n\n  componentDidMount() {\n    this._updateWindowDimensions();\n    window.addEventListener('resize', this._updateWindowDimensions);\n\n    console.log('Initializing Stitch ...');\n    this.stitch.init()\n    .then(err => {\n      if(!err) {\n        console.log('Stitch initialization complete!');\n        this.setState({\n          'stitchInitialized': true,\n          'loading': false,\n        });\n      }\n      else {\n        console.error('Stitch initialization error:', err);\n        this.setState({\n          'stitchInitialized': false,\n          'loading': false,\n        });\n      }\n    })\n    .catch(err => {\n      console.error('Stitch initialization error:', err);\n      this.setState({\n        'stitchInitialized': false,\n        'loading': false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this._updateWindowDimensions);\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          {/*<div className=\"App-header\">\n            <h1>Holdings Analysis</h1>\n          </div>*/}\n\n          <div className=\"App-body\">\n            { !this.state.stitchInitialized && !this.state.loading? <><div style={{ minHeight: '30vh' }}></div>Error connecting to MongoDB Stitch!</> :null }\n            { !this.state.stitchInitialized && this.state.loading? <><div style={{ minHeight: '30vh' }}></div>Connecting to MongoDB Stitch server ...</>:<>\n            <Link to='/' style={{ zIndex: 10, width: 32, height: 32, position: 'absolute', top: 5, left: 5 }}><HomeIcon\n              style={{ width: 32, height: 32, color: blue[500]}}\n            /></Link>\n            <Switch>\n              <Route\n                path='/'\n                exact\n                render={\n                  (props) => <div className=\"Welcome\">\n                    <h2>Welcome to the Holdings Analysis tool!</h2>\n                    The purpose of this tool is to enable research of both current &amp; historical holders of issued financial securities (holdings).<br/>\n                    This tool uses publicly available data disseminated by the U.S. Securities and Exchange Commission (SEC), the NASDAQ stock exchange, and others.<br/>\n                    To start using the tool, enter a search query using the search bar below.<br/>\n                    <span>You may search either by company (e.g. <strong>Tesla</strong> for Tesla Inc.) or by stock symbol (e.g. <strong>MSFT</strong> for Microsoft Corp.)  (... or <em>both</em> via search query string in the address bar.)</span>\n\n                    <h3>Definitions</h3>\n                    <ul>\n                      <li><strong>Holders</strong> are people, companies, and other entities that own, or <em>hold</em>, a financial security.</li>\n                      <li><strong>Holdings</strong> are collections of financial securities issued to a given holder.</li>\n                      <li><strong>Issuers</strong> are companies that issue, or ascribe ownership of, financial securities to holders.</li>\n                      <li><strong>Filers</strong> are people, companies, and other entities that have filed any form with the SEC.</li>\n                    </ul>\n                    \n                    <h3>Search Tips</h3>\n                    <ul>\n                      <li>By default, search tokens match by a logical <em>or</em> operation.  <strong>Example:</strong> The search query <strong>apple computer</strong> yields results matching <strong>apple</strong>, <strong>computer</strong>, or <em>both</em>.</li>\n                      <li>To search by exact phrase, use double quotes ({ '\"' }).  <strong>Example:</strong> The search query <strong>{ '\"apple computer\"' }</strong> yields results matching <strong>apple computer</strong> EXACTLY.</li>\n                      <li>To exclude a term, prepend that term with a hyphen ({ '-' }).  <strong>Example:</strong> The search query <strong>apple -computer</strong> yields results matching <strong>apple</strong> but NOT <strong>computer</strong>.</li>\n                      <li>Search queries are case-insensitive.</li>\n                    </ul>\n\n                  </div>\n                }\n              />\n            </Switch>\n            <Search />\n            <Switch>\n              <Route\n                path='/search/:search?'\n                render={\n                  (props) =>  <SearchResults {...props}\n                                stitch={ this.stitch }\n                                stitchInitialized={ this.state.stitchInitialized }\n                              />\n                }\n              />\n              <Route\n                path='/holdings/:cik?'\n                render={\n                  (props) =>  <HoldingsView {...props}\n                                stitch={ this.stitch }\n                                stitchInitialized={ this.state.stitchInitialized }\n                              />\n                }\n              />\n              <Route\n                path='/holders/:cusip?'\n                render={\n                  (props) =>  <HoldersView {...props}\n                                stitch={ this.stitch }\n                                stitchInitialized={ this.state.stitchInitialized }\n                              />\n                }\n              />\n            </Switch>\n            </>}\n          </div>\n\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
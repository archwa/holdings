{"version":3,"sources":["HoldingsView.js","HoldersView.js","stitch/components/UserInput.js","stitch/components/functions/ResultsGetHoldersForTicker.js","stitch/components/functions/ResultsGetPositionsForFund.js","stitch/components/functions/ResultsGetAverageTimePositionsHeldForFund.js","stitch/components/ResultsFormatter.js","stitch/components/UserInterface.js","stitch/index.js","App.js","serviceWorker.js","index.js"],"names":["HoldingsView","props","stitch","_getHoldings","bind","initialCikFromPath","_","get","initialCikFromQuery","queryString","parse","initialCik","state","cik","this","stitchInitialized","prevProps","oldCik","cikFromPath","oldCikFromPath","cikFromQuery","oldCikFromQuery","toString","length","padStart","callFunction","then","res","modifiedHoldings","holdings","map","holding","index","console","log","setState","catch","err","error","avgOwnership","classes","makeStyles","root","width","tableWrapper","maxHeight","overflow","columns","id","label","minWidth","format","value","toLocaleString","align","rowsPerPage","tableInfo","page","loading","reduce","ownership_length","acc","num","Math","round","issuer_name","style","minHeight","display","textAlign","fontFamily","margin","Paper","className","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","key","TableBody","slice","row","hover","role","tabIndex","TablePagination","rowsPerPageOptions","component","count","onChangePage","event","newPage","onChangeRowsPerPage","target","React","Component","HoldersView","_getHolders","initialCusipFromPath","initialCusipFromQuery","initialCusip","cusip","oldCusip","cusipFromPath","oldCusipFromPath","cusipFromQuery","oldCusipFromQuery","cusip6","substr","holders","holder","UserInput","status","inputValue","StitchController","_handleInputChange","name","cleanInput","searchResult","init","styles","container","Input","disabled","placeholder","input","onChange","ButtonGroup","Button","onClick","_handleClick","button","ResultsGetHoldersForTicker","_handleSort","clickedColumn","direction","data","sortBy","reverse","results","rawData","isEqual","columnNameDisplay","sorted","idx","from","to","quarters","join","ResultsGetPositionsForFund","filerSearch","rawResults","names","year","quarter","ResultsGetAverageTimePositionsHeldForFund","positionsCount","averageLengthOfStockOwnership","years","ResultsFormatter","getAverageTimePositionsHeldForFund","companySearchResult","symbolSearchResult","require","Stitch","RemoteMongoClient","UserApiKeyCredential","db","sc","initClientForAppId","process","loginUsingApiKey","initServiceClient","mongodb","initDBFromServiceClient","appId","client","initializeDefaultAppClient","credential","auth","loginWithCredential","user","getServiceClient","factory","args","App","window","height","_updateWindowDimensions","innerWidth","innerHeight","addEventListener","removeEventListener","basename","path","render","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6cc8bb17.chunk.js","sourcesContent":["import React from 'react';\nimport queryString from 'query-string';\nimport _ from 'lodash';\n\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\n// need CIK\n\n\nexport class HoldingsView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n\n    // get Stitch controller from props\n    this.stitch = this.props.stitch;\n\n    // bind this to all non-React functions\n    this._getHoldings = this._getHoldings.bind(this);\n\n    const initialCikFromPath = _.get(this.props, 'match.params.cik', null);\n    const initialCikFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'cik', null);\n    const initialCik = initialCikFromPath? initialCikFromPath :initialCikFromQuery;\n\n    // initialize state\n    this.state = {\n      'holdings': null,\n      'cik': initialCik,\n      'loading': true,\n      'tableInfo': {\n        'page': 0,\n        'rowsPerPage': 10\n      },\n    };\n  }\n\n  componentDidMount() {\n    const cik = this.state.cik;\n\n    if(this.props.stitchInitialized && cik) {\n      this._getHoldings(cik);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.stitchInitialized) {\n      const cikFromPath = _.get(this.props, 'match.params.cik', null);\n      const oldCikFromPath = _.get(prevProps, 'match.params.cik', null);\n      const cikFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'cik', null);\n      const oldCikFromQuery = _.get(queryString.parse(_.get(prevProps, 'location.search', null)), 'cik', null);\n\n      if(cikFromPath || cikFromQuery) {\n        let cik, oldCik;\n\n        if(cikFromPath) {\n          cik = cikFromPath;\n          oldCik = oldCikFromPath;\n        }\n\n        else if(cikFromQuery) {\n          cik = cikFromQuery;\n          oldCik = oldCikFromQuery;\n        }\n\n        if(cik !== oldCik) {\n          this._getHoldings(cik);\n        }\n      }\n    }\n  }\n\n  _getHoldings(cik) {\n    const strCik = cik.toString();\n\n    if(strCik.length <= 10) {\n      const cik = cik.padStart(10, '0');\n      this.stitch.callFunction('getHoldingsForFiler', [ cik ])\n        .then(res => {\n          const holdings = _.get(res, 'data.holdings', null);\n          let modifiedHoldings;\n          \n          if(holdings) {\n            modifiedHoldings = _.map(holdings, (holding, index) => ({\n              'name': _.get(holding, 'issuer_names', ['null'])[0],\n              'cusip6': _.get(holding, 'cusip6', null),\n              'cusip9': _.get(holding, 'cusip9', null),\n              'from': _.get(holding, 'from.year') + 'q' + _.get(holding, 'from.quarter'),\n              'to': _.get(holding, 'to.year') + 'q' + _.get(holding, 'to.quarter'),\n              'ownership_length': _.get(holding, 'ownership_length'),\n              'key': _.get(holding, 'cusip6', '') + index.toString()\n            }));\n          }\n\n          console.log(res);\n          this.setState({\n            'holdings': modifiedHoldings,\n            'loading': false,\n            'issuer_names': _.get(res, 'data.issuer_names', null)\n            //'\n          });\n        })\n        .catch(err => {\n          this.setState({\n            'loading': false,\n          });\n          console.error(err);\n        });\n    }\n\n    else {\n      this.setState({\n        'loading': false,\n      });\n    }\n  }\n\n\n  render() {\n    const classes = makeStyles({\n      root: {\n        width: '100%',\n      },\n      tableWrapper: {\n        maxHeight: 440,\n        overflow: 'auto',\n      },\n    });\n\n    const columns = [\n      { id: 'name', label: 'Issuer Name', minWidth: 170 },\n      /*{ id: 'cik', label: 'CIK', minWidth: 100 },\n      {\n        id: 'cik9',\n        label: 'CIK9',\n        minWidth: 170,\n        format: value => value.toLocaleString(),\n      },*/\n      {\n        id: 'from',\n        label: 'From',\n        minWidth: 170,\n        format: value => value.toLocaleString(),\n        align: 'right'\n      },\n      {\n        id: 'to',\n        label: 'To',\n        minWidth: 170,\n        align: 'right'\n      },\n      {\n        id: 'ownership_length',\n        label: 'Ownership Length (Quarters)',\n        minWidth: 170,\n        align: 'right'\n      },\n    ];\n\n    const handleChangePage = (event, newPage) => {\n      const tableInfo = this.state.tableInfo;\n      tableInfo.page = newPage;\n      this.setState({ tableInfo });\n    };\n\n    const handleChangeRowsPerPage = event => {\n      const tableInfo = this.state.tableInfo;\n      tableInfo.page = 0;\n      tableInfo.rowsPerPage = +event.target.value; // number conversion, unary '+'\n      this.setState({ tableInfo });\n    };\n\n    const rowsPerPage = this.state.tableInfo.rowsPerPage;\n    const page = this.state.tableInfo.page;\n    const loading = this.state.loading;\n    const holdings = this.state.holdings;\n    const cik = this.state.cik;\n    let avgOwnership;\n\n    if(holdings && holdings.length) {\n      avgOwnership = _.reduce(_.map(holdings, holding => holding.ownership_length), (acc, num) => {\n        return acc + num;\n      }, 0) / holdings.length;\n      avgOwnership = Math.round(avgOwnership * 1000) / 1000;\n    }\n\n    const issuer_name = _.get(this.state, 'issuer_names.0', null);\n    \n    return (\n      <>\n        \n          { loading? <><div style={{ minHeight: '30vh' }}></div>Processing request ...</> :null}\n          { (!loading && (!holdings || !holdings.length)) ? <><div style={{ minHeight: '30vh' }}></div>{ `No results for requested CIK \"${cik}\"!` }</> :null}\n        { (!holdings || !holdings.length)? null :\n        <>\n        <div style={{ display: 'block', width: '100%', textAlign: 'center', fontFamily: 'raleway'}}>\n          <h1>{ issuer_name }</h1>\n        </div>\n        <div style={{ display: 'block', fontFamily: 'Courier New', textAlign: 'left', margin: '10px' }}>\n          <strong>Average ownership</strong>: { avgOwnership } quarters ({avgOwnership / 4} years)\n        </div>\n        <Paper className={classes.root} style={{ display: 'block', width: '100%' }}>\n          <div className={classes.tableWrapper}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                  {columns.map(column => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth, fontFamily: 'Courier New' }}\n                    >\n                      <strong>{column.label}</strong>\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {!this.state.holdings? null : this.state.holdings.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.key}>\n                      {columns.map(column => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align} style={{ fontFamily: 'Courier New' }}>\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </div>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 50, 100]}\n            component=\"div\"\n            count={!this.state.holdings? 0 :this.state.holdings.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n        </>\n        }\n      </>\n    );\n  }\n\n};\n","import React from 'react';\nimport queryString from 'query-string';\nimport _ from 'lodash';\n\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\n// need CUSIP\n\n\nexport class HoldersView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n\n    // get Stitch controller from props\n    this.stitch = this.props.stitch;\n\n    // bind this to all non-React functions\n    this._getHolders = this._getHolders.bind(this);\n\n    const initialCusipFromPath = _.get(this.props, 'match.params.cusip', null);\n    const initialCusipFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'cusip', null);\n    const initialCusip = initialCusipFromPath? initialCusipFromPath :initialCusipFromQuery;\n\n    // initialize state\n    this.state = {\n      'holders': null,\n      'cusip': initialCusip,\n      'loading': true,\n      'tableInfo': {\n        'page': 0,\n        'rowsPerPage': 10\n      },\n    };\n  }\n\n  componentDidMount() {\n    const cusip = this.state.cusip;\n\n    if(this.props.stitchInitialized && cusip) {\n      this._getHolders(cusip);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.stitchInitialized) {\n      const cusipFromPath = _.get(this.props, 'match.params.cusip', null);\n      const oldCusipFromPath = _.get(prevProps, 'match.params.cusip', null);\n      const cusipFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'cusip', null);\n      const oldCusipFromQuery = _.get(queryString.parse(_.get(prevProps, 'location.search', null)), 'cusip', null);\n\n      if(cusipFromPath || cusipFromQuery) {\n        let cusip, oldCusip;\n\n        if(cusipFromPath) {\n          cusip = cusipFromPath;\n          oldCusip = oldCusipFromPath;\n        }\n\n        else if(cusipFromQuery) {\n          cusip = cusipFromQuery;\n          oldCusip = oldCusipFromQuery;\n        }\n\n        if(cusip !== oldCusip) {\n          this._getHolders(cusip);\n        }\n      }\n    }\n  }\n\n  _getHolders(cusip) {\n    const strCusip = cusip.toString();\n\n    if(strCusip.length >= 6) {\n      const cusip6 = cusip.substr(0, 6);\n      this.stitch.callFunction('getHoldersForIssuer', [ cusip6 ])\n        .then(res => {\n          const holdings = _.get(res, 'data.holdings', null);\n          let modifiedHoldings;\n          \n          if(holdings) {\n            modifiedHoldings = _.map(holdings, (holding, index) => ({\n              'name': _.get(holding, 'filer_names', ['null'])[0],\n              'cik': _.get(holding, 'cik', null),\n              'cusip9': _.get(holding, 'cusip9', null),\n              'from': _.get(holding, 'from.year') + 'q' + _.get(holding, 'from.quarter'),\n              'to': _.get(holding, 'to.year') + 'q' + _.get(holding, 'to.quarter'),\n              'ownership_length': _.get(holding, 'ownership_length'),\n              'key': _.get(holding, 'cik', '') + index.toString()\n            }));\n          }\n\n          console.log(res);\n          this.setState({\n            'holders': modifiedHoldings,\n            'loading': false,\n            'issuer_names': _.get(res, 'data.issuer_names', null)\n            //'\n          });\n        })\n        .catch(err => {\n          this.setState({\n            'loading': false,\n          });\n          console.error(err);\n        });\n    }\n\n    else {\n      this.setState({\n        'loading': false,\n      });\n    }\n  }\n\n\n  render() {\n    const classes = makeStyles({\n      root: {\n        width: '100%',\n      },\n      tableWrapper: {\n        maxHeight: 440,\n        overflow: 'auto',\n      },\n    });\n\n    const columns = [\n      { id: 'name', label: 'Holder Name', minWidth: 170 },\n      /*{ id: 'cik', label: 'CIK', minWidth: 100 },\n      {\n        id: 'cusip9',\n        label: 'CUSIP9',\n        minWidth: 170,\n        format: value => value.toLocaleString(),\n      },*/\n      {\n        id: 'from',\n        label: 'From',\n        minWidth: 170,\n        format: value => value.toLocaleString(),\n        align: 'right'\n      },\n      {\n        id: 'to',\n        label: 'To',\n        minWidth: 170,\n        align: 'right'\n      },\n      {\n        id: 'ownership_length',\n        label: 'Ownership Length (Quarters)',\n        minWidth: 170,\n        align: 'right'\n      },\n    ];\n\n    const handleChangePage = (event, newPage) => {\n      const tableInfo = this.state.tableInfo;\n      tableInfo.page = newPage;\n      this.setState({ tableInfo });\n    };\n\n    const handleChangeRowsPerPage = event => {\n      const tableInfo = this.state.tableInfo;\n      tableInfo.page = 0;\n      tableInfo.rowsPerPage = +event.target.value; // number conversion, unary '+'\n      this.setState({ tableInfo });\n    };\n\n    const rowsPerPage = this.state.tableInfo.rowsPerPage;\n    const page = this.state.tableInfo.page;\n    const loading = this.state.loading;\n    const holders = this.state.holders;\n    const cusip = this.state.cusip;\n    let avgOwnership;\n\n    if(holders && holders.length) {\n      avgOwnership = _.reduce(_.map(holders, holder => holder.ownership_length), (acc, num) => {\n        return acc + num;\n      }, 0) / holders.length;\n      avgOwnership = Math.round(avgOwnership * 1000) / 1000;\n    }\n\n    const issuer_name = _.get(this.state, 'issuer_names.0', null);\n    \n    return (\n      <>\n        \n          { loading? <><div style={{ minHeight: '30vh' }}></div>Processing request ...</> :null}\n          { (!loading && (!holders || !holders.length)) ? <><div style={{ minHeight: '30vh' }}></div>{ `No results for requested CUSIP \"${cusip}\"!` }</> :null}\n        { (!holders || !holders.length)? null :\n        <>\n        <div style={{ display: 'block', width: '100%', textAlign: 'center', fontFamily: 'raleway'}}>\n          <h1>{ issuer_name }</h1>\n        </div>\n        <div style={{ display: 'block', fontFamily: 'Courier New', textAlign: 'left', margin: '10px' }}>\n          <strong>Average ownership</strong>: { avgOwnership } quarters ({avgOwnership / 4} years)\n        </div>\n        <Paper className={classes.root} style={{ display: 'block', width: '100%' }}>\n          <div className={classes.tableWrapper}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                  {columns.map(column => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth, fontFamily: 'Courier New' }}\n                    >\n                      <strong>{column.label}</strong>\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {!this.state.holders? null : this.state.holders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.key}>\n                      {columns.map(column => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align} style={{ fontFamily: 'Courier New' }}>\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </div>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 50, 100]}\n            component=\"div\"\n            count={!this.state.holders? 0 :this.state.holders.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n        </>\n        }\n      </>\n    );\n  }\n\n};\n","import React from 'react';\n//import _ from 'lodash';\n\nimport { StitchController } from '../';\nimport { Input, Button, ButtonGroup } from '@material-ui/core';\n\nexport class UserInput extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      loading: true,  // is the UI still loading?\n      status: 0,      // zero means OK, non-zero means NOT OK\n      inputValue: \"\"\n    };\n\n    // instantiate Stitch controller\n    this.stitch = new StitchController();\n    \n    // bind this for non-React functions\n    this._handleInputChange = this._handleInputChange.bind(this);\n  }\n\n  _handleInputChange(event) {\n    this.setState({ inputValue: event.target.value });\n  }\n\n  _handleClick(name) {\n    // clean up the input here if you want\n    const cleanInput = this.state.inputValue;\n\n    // TODO : add support for the checkbox (choosing the current holders / positions only)\n    /*const options = {\n      currentOnly: false\n    };*/\n\n    switch(name) {\n      case 'company':\n        this.stitch.callFunction('searchForCompany', [cleanInput])\n        .then(searchResult => {\n          console.log(searchResult);\n          return {\n            'companySearchResult': searchResult\n          };\n        })\n          /*\n          // TODO : check status of result\n          const cik = _.get(searchResult, 'data.cik', null);\n\n          return this.stitch.callFunction('getAverageTimePositionsHeldForFund', [cik, options])\n          .then(avgPosResult => {\n            return this.stitch.callFunction('getPositionsForFund', [cik, options])\n            .then(posForFundResult => {\n\n              return {\n                'searchForFund': searchResult,\n                'getAverageTimePositionsHeldForFund': avgPosResult,\n                'getPositionsForFund': posForFundResult,\n              };\n            })\n            .catch(err => {\n              console.log(err);\n              return {};\n            });\n          })\n        })\n        .then(res => {\n          console.log(res);\n          return this.props.handleSubmission(res);\n        })*/\n        .catch(err => {\n          console.log(err);\n        });\n        break;\n\n      case 'symbol':\n        this.stitch.callFunction('searchForSymbol', [cleanInput])\n        .then(searchResult => {\n          console.log(searchResult);\n          return {\n            'symbolSearchResult': searchResult\n          };\n        })\n          /*\n          // TODO : check status of result\n          const cusip = _.get(searchResult, 'data.cusip', null);\n          \n          return this.stitch.callFunction('getHoldersForTicker', [cusip, options])\n          .then(results => {\n            return {\n              'searchForCompany': searchResult,\n              'getHoldersForTicker': results\n            };\n          })\n          .catch(err => {\n            console.log(err);\n          })\n        })\n        .then(res => {\n          console.log(res);\n          return this.props.handleSubmission(res);\n        })*/\n        .catch(err => {\n          console.log(err);\n        });\n        break;\n\n      default:\n    }\n  }\n\n  componentDidMount() {\n    // initialize Stitch controller\n    this.stitch.init()\n    .then(() => {\n      this.setState({ loading: false, status: 0 });  // no longer loading\n    })\n    .catch(err => {\n      console.log(err);\n      this.setState({ loading: false, status: -1 });  // no longer loading, but bad status\n    });\n  }\n\n  render() {\n    return (\n      <div style={ styles.container }>\n        <Input\n          disabled={ this.state.loading }\n          error={ this.state.error }\n          placeholder=\"Search by ...\"\n          style={ styles.input }\n          value={ this.state.inputValue }\n          onChange={ this._handleInputChange }\n        />\n        <ButtonGroup>\n          <Button\n            disabled={ this.state.loading }\n            onClick={ () => this._handleClick('company') }\n          >\n            Company\n          </Button>\n          <Button\n            disabled={ this.state.loading }\n            onClick={ () => this._handleClick('symbol') }\n          >\n            Symbol\n          </Button>\n        </ButtonGroup>\n      </div>\n    );\n  }\n};\n\nconst styles = {\n  container: {\n    \n  },\n  button: {\n\n  },\n  input: {\n    margin: 5,\n  }\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\n\nexport class ResultsGetHoldersForTicker extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      column: null,\n      direction: null,\n      data: this.props.results.data,\n      rawData: this.props.results.data\n    };\n  }\n\n  // update raw results from props\n  componentDidUpdate() {\n    if(!_.isEqual(this.props.results.data, this.state.rawData)) {\n      this.setState({\n        data: this.props.results.data,\n        rawData: this.props.results.data,\n      });\n    } \n  }\n\n  _handleSort = (clickedColumn) => () => {\n    const { column, direction } = this.state;\n\n    // sort by ascending if not clicked\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        direction: 'ascending',\n        data: _.sortBy(this.state.data, [ clickedColumn ])\n      });\n    }\n\n    // if clicked, toggle sort direction\n    else {\n      this.setState({\n        direction: direction === 'ascending' ? 'descending' : 'ascending',\n        data: this.state.data.reverse()\n      });\n    }\n  }\n\n  render() {\n    const { column, direction, data } = this.state;\n    const columnNames = [ 'name', 'cik', 'from', 'to', 'quarters' ];\n    const columnNameDisplay = {\n      'name': 'Name',\n      'cik': 'CIK',\n      'from': 'From',\n      'to': 'To',\n      'quarters': 'Quarters'\n    };\n\n    return (\n      // name the div here? TODO\n      <div style={ styles.container }>\n        <Table>\n          <TableHead>\n            <TableRow>\n              {\n                _.map(columnNames, name => (\n                  <TableCell\n                    key={ name }\n                    sorted={ column === name? direction :null }\n                    onClick={ this._handleSort(name) }\n                  >\n                    { columnNameDisplay[name] }\n                  </TableCell>\n                ))\n              }\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              _.map(data, ({ name, cik, from, to, quarters }, idx) => (\n                  <TableRow key={ _.join([cik, '-', idx], '') }>\n                    <TableCell><code>{ name }</code></TableCell>\n                    <TableCell><code>{ cik }</code></TableCell>\n                    <TableCell><code>{ from }</code></TableCell>\n                    <TableCell><code>{ to }</code></TableCell>\n                    <TableCell><code>{ quarters }</code></TableCell>\n                  </TableRow>\n              ))\n            }\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n\n};\n\nconst styles = {\n  container: {\n    margin: 20\n  }\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\n\nexport class ResultsGetPositionsForFund extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      column: null,\n      direction: null,\n      data: this.props.results.data.filerSearch.data.results.data.holdings,\n      rawResults: this.props.results.data.filerSearch.data.results.data.holdings,\n    };\n  }\n\n  // update raw results from props\n  componentDidUpdate() {\n    if(!_.isEqual(this.props.results, this.state.rawResults)) {\n      this.setState({\n        data: this.props.results.data,\n        rawResults: this.props.results,\n      });\n    } \n  }\n\n  _handleSort = (clickedColumn) => () => {\n    const { column, direction } = this.state;\n\n    // sort by ascending if not clicked\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        direction: 'ascending',\n        data: _.sortBy(this.state.data, [ clickedColumn ])\n      });\n    }\n\n    // if clicked, toggle sort direction\n    else {\n      this.setState({\n        direction: direction === 'ascending' ? 'descending' : 'ascending',\n        data: this.state.data.reverse()\n      });\n    }\n  }\n\n  render() {\n    const { column, direction, data } = this.state;\n    const columnNames = [ 'name', 'cusip', 'from', 'to', 'quarters' ];\n    const columnNameDisplay = {\n      'name': 'Name',\n      'cusip': 'CUSIP',\n      'from': 'From',\n      'to': 'To',\n      'quarters': 'Quarters'\n    };\n\n    return (\n      // name the div here? TODO\n      <div style={ styles.container }>\n        <Table>\n          <TableHead>\n            <TableRow>\n              {\n                _.map(columnNames, name => (\n                  <TableCell\n                    key={ name }\n                    sorted={ column === name? direction :null }\n                    onClick={ this._handleSort(name) }\n                  >\n                    { columnNameDisplay[name] }\n                  </TableCell>\n                ))\n              }\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              _.map(data, ({ names, cusip6, from, to, ownership_length }, idx) => (\n                  <TableRow key={ _.join([cusip6, '-', idx], '') }>\n                    <TableCell><code>{ names[0] }</code></TableCell>\n                    <TableCell><code>{ cusip6 }</code></TableCell>\n                    <TableCell><code>{ from.year }q{ from.quarter }</code></TableCell>\n                    <TableCell><code>{ to.year }q{ to.quarter }</code></TableCell>\n                    <TableCell><code>{ ownership_length}</code></TableCell>\n                  </TableRow>\n              ))\n            }\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n\n};\n\nconst styles = {\n  container: {\n    margin: 20\n  }\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow\n} from '@material-ui/core';\n\nexport class ResultsGetAverageTimePositionsHeldForFund extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: this.props.results.data,\n      rawData: this.props.results.data,\n    };\n  }\n\n  // update raw results from props\n  componentDidUpdate() {\n    if(!_.isEqual(this.props.results.data, this.state.rawData)) {\n      this.setState({\n        data: this.props.results.data,\n        rawData: this.props.results.data,\n      });\n    } \n  }\n\n  render() {\n    const { data } = this.state;\n\n    return (\n      <div style={ styles.container }>\n        <Table>\n          <TableBody>\n            <TableRow key='total'>\n              <TableCell>\n                <strong>Total Positions Found</strong>\n              </TableCell>\n              <TableCell>\n                <code>{ data.positionsCount }</code>\n              </TableCell>\n            </TableRow>\n            <TableRow key='year'>\n              <TableCell>\n                <strong>Average Time Held of All Positions (Years)</strong>\n              </TableCell>\n              <TableCell>\n                <code>{ Math.round(data.averageLengthOfStockOwnership.years * 1000) / 1000 }</code>\n              </TableCell>\n            </TableRow>\n            <TableRow key='quarters'>\n              <TableCell>\n                <strong>Average Time Held of All Positions (Quarters)</strong>\n              </TableCell>\n              <TableCell>\n                <code>{ Math.round(data.averageLengthOfStockOwnership.quarters * 1000) / 1000 }</code>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n\n};\n\nconst styles = {\n  container: {\n    margin: 20\n  }\n};\n","import React from 'react';\nimport _ from 'lodash';\n\n// import individual results formatters\nimport { ResultsGetHoldersForTicker } from './functions/ResultsGetHoldersForTicker';\nimport { ResultsGetPositionsForFund } from './functions/ResultsGetPositionsForFund';\nimport { ResultsGetAverageTimePositionsHeldForFund } from './functions/ResultsGetAverageTimePositionsHeldForFund';\n\nexport class ResultsFormatter extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // define function results from action controller in state\n    this.state = {\n        results: this.props.results,\n    };\n  }\n\n  componentDidUpdate() {\n    if(!_.isEqual(this.props.results, this.state.results)) {\n      this.setState({\n        results: this.props.results,\n      });\n    } \n  }\n\n  render() {\n    const { results } = this.state;\n\n    return (\n      <div style={ styles.container }>\n        {\n          !_.get(results, 'companySearchResult', -1)?\n            <>Showing results for fund <strong><code>\"{ _.get(results, 'companySearchResult.data.filerSearch.data.count', '') }\" (CIK : { _.get(results, 'companySearchResult.data.filerSearch.data.count', '') })</code></strong></>\n          :null\n        }\n\n        {\n          !_.get(results, 'searchForCompany.status', -1)?\n            <>Showing results for company <strong><code>\"{ _.get(results, 'searchForCompany.data.name', '') }\" (CUSIP : { _.get(results, 'searchForCompany.data.cusip', '') })</code></strong></>\n          :null\n        }\n\n        {\n          // position average information\n          !_.get(results, 'getAverageTimePositionsHeldForFund.status', -1)?\n            <ResultsGetAverageTimePositionsHeldForFund\n              results={ results.getAverageTimePositionsHeldForFund }\n            />\n          :null\n        }\n        \n        {\n          // fund positions information\n          !_.get(results, 'companySearchResult.status', -1)?\n            <ResultsGetPositionsForFund\n              results={ results.companySearchResult }\n            />\n          :null\n        }\n        \n        {\n          // company holders information\n          !_.get(results, 'symbolSearchResult.status', -1)?\n            <ResultsGetHoldersForTicker\n              results={ results.symbolSearchResult }\n            />\n          :null\n        }\n      </div>\n    );\n  }\n};\n\nconst styles = {\n  container: {\n    margin: 20\n  }\n};\n","import React from 'react';\n\n// main components for user interface\nimport { UserInput } from './UserInput';\nimport { ResultsFormatter } from './ResultsFormatter';\n\nexport class UserInterface extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // initialize state\n    this.state = {\n      submissionResults: null  // to store submission results for display in child component(s)\n    };\n    \n    // bind non-React functions\n    this._handleSubmission = this._handleSubmission.bind(this);\n  }\n\n  // handle the submission of the child UserInput component\n  _handleSubmission(results) {\n    this.setState({ submissionResults: results });\n  }\n\n  componentDidMount() {\n    \n  }\n  \n  render() {\n    return (<div>\n      <UserInput\n        handleSubmission={ this._handleSubmission } // pass down submission handler to store results\n      />\n      <br/>\n      <ResultsFormatter\n        results={ this.state.submissionResults? this.state.submissionResults :undefined }\n      />\n    </div>);\n  }\n};\n","import { UserInterface } from './components/UserInterface';\nimport { UserInput } from './components/UserInput';\nimport { ResultsFormatter } from './components/ResultsFormatter';\n\nconst {\n  Stitch,\n  RemoteMongoClient,\n  UserApiKeyCredential\n} = require('mongodb-stitch-browser-sdk');\n\nexport class StitchController {\n  constructor() {\n    this.db = {}; // initialize database object\n    this.sc = {}; // initialize service client object\n  }\n\n  // initialize the controller\n  async init() {\n    try {\n      this.initClientForAppId(process.env.REACT_APP_STITCH_APP_ID);                            // initializes the client\n      await this.loginUsingApiKey(process.env.REACT_APP_STITCH_API_SECRET);                    // authorizes the client for use\n      const mongodb = await this.initServiceClient(process.env.REACT_APP_STITCH_SERVICE_NAME); // initializes MongoDB service client (for database access)\n      await this.initDBFromServiceClient('filings', mongodb);                                  // initializes test db for access\n      return 0;\n    }\n    catch(err) {\n      console.error(err);\n      return err;\n    }\n  }\n\n  // returns client \n  initClientForAppId(appId) {\n    this.client = Stitch.initializeDefaultAppClient(appId);\n  }\n\n  // returns a Promise (of user info)\n  loginUsingApiKey(key) {\n    const credential = new UserApiKeyCredential(process.env.REACT_APP_STITCH_API_SECRET);\n    return this.client.auth.loginWithCredential(credential)\n      .then(user => {\n        console.log(`Logged into Stitch client as API user (server) with id: ${user.id}`);\n        return user;\n      })\n      .catch(err => {\n        console.error(err);\n        return err;\n      });\n  }\n\n  // returns a Promise (of service client)\n  async initServiceClient(name) {\n    this.sc[name] = await this.client.getServiceClient(\n      RemoteMongoClient.factory,\n      name\n    );\n\n    return this.sc[name];\n  }\n\n  // returns Promise (of db client)\n  async initDBFromServiceClient(name, sc) {\n    this.db[name] = await sc.db(name);\n\n    return this.db[name];\n  }\n\n  callFunction(name, args) {\n    return this.client.callFunction(name, args)\n      .catch(err => {\n        console.error(err);\n        return err;\n      });\n  }\n};\n\n\nexport const StitchComponents = {\n  UserInterface,\n  UserInput,\n  ResultsFormatter\n};\n","import React from 'react';\nimport './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n//  Link\n} from \"react-router-dom\";\n\n/*\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\n*/\n\n// need this for the Stitch UI\n//import { StitchComponents } from './stitch';\n\nimport { HoldingsView } from './HoldingsView';\nimport { HoldersView } from './HoldersView';\nimport { StitchController } from './stitch';\n\n//import Logo from './media/assets/images/gghc.png';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // initialize state\n    this.state = {\n      window: {\n        width: 0,\n        height: 0\n      },\n      'stitchInitialized': false,\n      'loading': true\n    };\n\n    // intantiate Stitch controller\n    this.stitch = new StitchController();\n\n    // bind non-React functions\n    this._updateWindowDimensions = this._updateWindowDimensions.bind(this);\n  }\n\n  _updateWindowDimensions() {\n    this.setState({ window: { width: window.innerWidth, height: window.innerHeight } });\n  }\n\n  componentDidMount() {\n    this._updateWindowDimensions();\n    window.addEventListener('resize', this._updateWindowDimensions);\n\n    console.log('Initializing Stitch ...');\n    this.stitch.init()\n    .then(err => {\n      if(!err) {\n        console.log('Stitch initialization complete!');\n        this.setState({\n          'stitchInitialized': true,\n          'loading': false,\n        });\n      }\n      else {\n        console.error('Stitch initialization error:', err);\n        this.setState({\n          'stitchInitialized': false,\n          'loading': false,\n        });\n      }\n    })\n    .catch(err => {\n      console.error('Stitch initialization error:', err);\n      this.setState({\n        'stitchInitialized': false,\n        'loading': false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this._updateWindowDimensions);\n  }\n\n  render() {\n    return (\n      <Router basename='/holdings'>\n        <div className=\"App\">\n          {/*<div className=\"App-header\">\n            <h1>Holdings Analysis</h1>\n          </div>*/}\n\n          <div className=\"App-body\">\n            { !this.state.stitchInitialized && !this.state.loading? \"Error connecting to MongoDB Stitch!\" :null }\n            { !this.state.stitchInitialized && this.state.loading? <><div style={{ minHeight: '30vh' }}></div>Connecting to MongoDB Stitch server ...</>:<>\n            { /*\n            <Paper>\n              <TextField id=\"searchQuery\" label=\"Search\" variant=\"outlined\" />\n              <ButtonGroup variant=\"text\" aria-label=\"regular contained button group\">\n                <Button>Company</Button>\n                <Button>Symbol</Button>\n              </ButtonGroup>\n            </Paper>\n            */ }\n            <Switch>\n              <Route\n                path='/holdings/:cik?'\n                render={\n                  (props) =>  <HoldingsView {...props}\n                                stitch={ this.stitch }\n                                stitchInitialized={ this.state.stitchInitialized }\n                              />\n                }\n              />\n              <Route\n                path='/holders/:cusip?'\n                render={\n                  (props) =>  <HoldersView {...props}\n                                stitch={ this.stitch }\n                                stitchInitialized={ this.state.stitchInitialized }\n                              />\n                }\n              />\n            </Switch>\n            </>}\n          </div>\n\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
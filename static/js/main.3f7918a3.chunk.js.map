{"version":3,"sources":["Search.js","SearchResults.js","HoldingsView.js","HoldersView.js","stitch/components/UserInput.js","stitch/components/functions/ResultsGetHoldersForTicker.js","stitch/components/functions/ResultsGetPositionsForFund.js","stitch/components/functions/ResultsGetAverageTimePositionsHeldForFund.js","stitch/components/ResultsFormatter.js","stitch/components/UserInterface.js","stitch/index.js","App.js","serviceWorker.js","index.js"],"names":["ColorButton","withStyles","theme","root","color","backgroundColor","blue","Button","styles","position","margin","textAlign","justifyContent","top","transform","height","Search","props","state","go","location","value","_handleCompanySearch","bind","_handleSymbolSearch","_handleChange","event","this","setState","target","q","parsedQuery","qs","queryString","stringify","newRedirect","redirect","console","log","style","container","to","TextField","onChange","label","variant","textField","ButtonGroup","buttonGroup","onClick","button","React","Component","SearchResults","stitch","_searchCompany","_searchSymbol","initialCompanySearchFromQuery","_","get","parse","initialSymbolSearchFromQuery","stitchInitialized","companyQuery","symbolQuery","loading","prevProps","companySearch","oldCompanySearch","symbolSearch","oldSymbolSearch","callFunction","then","res","filerResults","issuerResults","filerData","issuerData","count","map","results","issuer","name","cusip6","filer","cik","holders","reduce","acc","issuerResult","newAcc","issuerName","filers","filerResult","filerName","companyResults","merge","symbolResults","minHeight","val","k","item","key","toString","holdings","concat","HoldingsView","_getHoldings","initialCikFromPath","initialCikFromQuery","initialCik","oldCik","cikFromPath","oldCikFromPath","cikFromQuery","oldCikFromQuery","strCik","length","padStart","modifiedHoldings","holding","index","catch","err","error","avgOwnership","classes","makeStyles","width","tableWrapper","maxHeight","overflow","columns","id","minWidth","format","toLocaleString","align","rowsPerPage","tableInfo","page","filter","ownership_length","num","Math","round","filer_name","display","fontFamily","Paper","className","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","TableBody","slice","row","hover","tabIndex","TablePagination","rowsPerPageOptions","component","onChangePage","newPage","onChangeRowsPerPage","HoldersView","_getHolders","initialCusipFromPath","initialCusipFromQuery","initialCusip","cusip","oldCusip","cusipFromPath","oldCusipFromPath","cusipFromQuery","oldCusipFromQuery","strCusip","substr","holder","issuer_name","UserInput","status","inputValue","StitchController","_handleInputChange","cleanInput","searchResult","init","Input","disabled","placeholder","input","_handleClick","ResultsGetHoldersForTicker","_handleSort","clickedColumn","direction","data","sortBy","reverse","rawData","isEqual","columnNameDisplay","sorted","idx","from","quarters","join","ResultsGetPositionsForFund","filerSearch","rawResults","names","year","quarter","ResultsGetAverageTimePositionsHeldForFund","positionsCount","averageLengthOfStockOwnership","years","ResultsFormatter","getAverageTimePositionsHeldForFund","companySearchResult","symbolSearchResult","require","Stitch","RemoteMongoClient","UserApiKeyCredential","db","sc","initClientForAppId","process","loginUsingApiKey","initServiceClient","mongodb","initDBFromServiceClient","appId","client","initializeDefaultAppClient","credential","auth","loginWithCredential","user","getServiceClient","factory","args","App","window","_updateWindowDimensions","innerWidth","innerHeight","addEventListener","removeEventListener","basename","path","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"61BAcA,IAAMA,EAAcC,aAAW,SAAAC,GAAK,MAAK,CACvCC,KAAM,CACJC,MAAO,QACPC,gBAAiBC,IAAK,KACtB,UAAW,CACTD,gBAAiBC,IAAK,UALRL,CAQhBM,KAEEC,EAAS,CACb,UAAa,CACXC,SAAU,WACVC,OAAQ,OACRC,UAAW,SACXC,eAAgB,UAElB,UAAa,CACXF,OAAQ,OAEV,YAAe,CACbD,SAAU,WACVI,IAAK,MACLC,UAAW,oBAEb,OAAU,CACRC,OAAQ,SAICC,EAAb,YAEE,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACX,SAAY,CACVC,IAAI,EACJC,SAAU,KAEZC,MAAO,IAGT,EAAKC,qBAAuB,EAAKA,qBAAqBC,KAA1B,gBAC5B,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBAC3B,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,gBAbJ,EAFrB,2EAkBgBG,GACZC,KAAKC,SAAS,CACZ,MAASF,EAAMG,OAAOR,UApB5B,2CAwBuBS,GACnB,IAAMC,EAAc,CAClB,QAAWJ,KAAKT,MAAMG,OAGlBW,EAAKC,IAAYC,UAAUH,GAE7BI,EAAW,KAAQR,KAAKT,MAAMkB,UAClCD,EAAYf,SAAY,WAAaY,EACrCG,EAAYhB,IAAK,EAEjBkB,QAAQC,IAAIX,KAAKT,MAAMG,OACvBgB,QAAQC,IAAIH,GACZR,KAAKC,SAAS,CAAEQ,SAAUD,MArC9B,0CAyCsBL,GAClB,IAAMC,EAAc,CAClB,OAAUJ,KAAKT,MAAMG,OAGjBW,EAAKC,IAAYC,UAAUH,GAE7BI,EAAW,KAAQR,KAAKT,MAAMkB,UAClCD,EAAYf,SAAY,WAAaY,EACrCG,EAAYhB,IAAK,EAEjBkB,QAAQC,IAAIX,KAAKT,MAAMG,OACvBgB,QAAQC,IAAIH,GACZR,KAAKC,SAAS,CAAEQ,SAAUD,MAtD9B,+BA0DI,IAAMC,EAAWT,KAAKT,MAAMkB,SAASjB,GAC/BC,EAAWO,KAAKT,MAAMkB,SAAShB,SAErC,OAAQ,yBAAKmB,MAAQ/B,EAAOgC,WAExBJ,EAAU,kBAAC,IAAD,CAAUK,GAAKrB,IAAe,KAC1C,kBAACsB,EAAA,EAAD,CACEC,SAAUhB,KAAKF,cACfmB,MAAM,SACNC,QAAQ,WACRN,MAAQ/B,EAAOsC,YAEjB,kBAACC,EAAA,EAAD,CAAaR,MAAQ/B,EAAOwC,aAC1B,kBAAChD,EAAD,CAAa6C,QAAQ,YAAYI,QAAUtB,KAAKL,qBAAuBiB,MAAQ/B,EAAO0C,QAAtF,WAGA,kBAAClD,EAAD,CAAa6C,QAAQ,YAAYI,QAAUtB,KAAKH,oBAAsBe,MAAQ/B,EAAO0C,QAArF,gBA1ER,GAA4BC,IAAMC,W,gBCtCrBC,EAAb,YAEE,WAAYpC,GAAQ,IAAD,uBACjB,4CAAMA,KAGDqC,OAAS,EAAKrC,MAAMqC,OAGzB,EAAKC,eAAiB,EAAKA,eAAehC,KAApB,gBACtB,EAAKiC,cAAgB,EAAKA,cAAcjC,KAAnB,gBAErB,IAAMkC,EAAgCC,IAAEC,IAAI1B,IAAY2B,MAAMF,IAAEC,IAAI,EAAK1C,MAAO,kBAAmB,OAAQ,UAAW,MAChH4C,EAA+BH,IAAEC,IAAI1B,IAAY2B,MAAMF,IAAEC,IAAI,EAAK1C,MAAO,kBAAmB,OAAQ,SAAU,MAXnG,OAajB,EAAKC,MAAQ,CACX,aAAgBuC,EAChB,YAAeI,EACf,eAAkB,KAClB,cAAiB,KACjB,SAAW,GAlBI,EAFrB,iFAyBI,IAAMC,EAAoBnC,KAAKV,MAAM6C,kBAC/BC,EAAepC,KAAKT,MAAM6C,aAC1BC,EAAcrC,KAAKT,MAAM8C,YAE5BF,GAAqBC,GACtBpC,KAAK4B,eAAeQ,GAGnBD,GAAqBE,GACtBrC,KAAK6B,cAAcQ,GAGlBF,IAAsBC,IAAiBC,GAAerC,KAAKT,MAAM+C,SAClEtC,KAAKC,SAAS,CAAEqC,SAAS,MAtC/B,yCA0CqBC,GACjB,IAAMJ,EAAoBnC,KAAKV,MAAM6C,kBAC/BK,EAAgBT,IAAEC,IAAI1B,IAAY2B,MAAMF,IAAEC,IAAIhC,KAAKV,MAAO,kBAAmB,OAAQ,UAAW,MAChGmD,EAAmBV,IAAEC,IAAI1B,IAAY2B,MAAMF,IAAEC,IAAIO,EAAW,kBAAmB,OAAQ,UAAW,MAClGG,EAAeX,IAAEC,IAAI1B,IAAY2B,MAAMF,IAAEC,IAAIhC,KAAKV,MAAO,kBAAmB,OAAQ,SAAU,MAC9FqD,EAAkBZ,IAAEC,IAAI1B,IAAY2B,MAAMF,IAAEC,IAAIO,EAAW,kBAAmB,OAAQ,SAAU,MAGnGC,IAAkBC,IACnBzC,KAAKC,SAAS,CAAE,aAAgBuC,EAAe,eAAkB,OACjE9B,QAAQC,IAAI,sBAGX+B,IAAiBC,IAClB3C,KAAKC,SAAS,CAAE,YAAeyC,EAAc,cAAiB,OAC9DhC,QAAQC,IAAI,qBAKXwB,GAAqBK,GAAiBA,IAAkBC,GACzDzC,KAAK4B,eAAeY,GAGnBL,GAAqBO,GAAgBA,IAAiBC,GACvD3C,KAAK6B,cAAca,KAnEzB,qCAuEiBvC,GAAI,IAAD,OAChBH,KAAKC,SAAS,CAAEqC,SAAS,IACzBtC,KAAK2B,OAAOiB,aAAa,mBAAoB,CAAEzC,IAC5C0C,MAAK,SAAAC,GACJ,IAGIC,EAAcC,EAHZC,EAAYlB,IAAEC,IAAIc,EAAK,wBAAyB,MAChDI,EAAanB,IAAEC,IAAIc,EAAK,yBAA0B,MAKtDE,EADsB,IAArBE,EAAWC,MACIpB,IAAEqB,IAAIF,EAAWG,SAAS,SAAAC,GAAM,MAAK,CACnDC,KAAMxB,IAAEC,IAAIsB,EAAQ,UAAW,MAC/BE,OAAQzB,IAAEC,IAAIsB,EAAQ,SAAU,UAKlB,CACd,CACEC,KAAMxB,IAAEC,IAAIkB,EAAY,8BAA+B,MACvDM,OAAQzB,IAAEC,IAAIkB,EAAY,6BAA8B,QAM5DH,EADqB,IAApBE,EAAUE,MACIpB,IAAEqB,IAAIH,EAAUI,SAAS,SAAAI,GAAK,MAAK,CAChDF,KAAMxB,IAAEC,IAAIyB,EAAO,OAAQ,MAC3BC,IAAK3B,IAAEC,IAAIyB,EAAO,MAAO,UAKZ,CACb,CACEF,KAAMxB,IAAEC,IAAIiB,EAAW,6BAA8B,MACrDS,IAAK3B,IAAEC,IAAIiB,EAAW,yBAA0B,QAKtD,IAAMU,EAAU5B,IAAE6B,OAAOZ,GAAe,SAACa,EAAKC,GAC5C,IAAMC,EAASF,EACTG,EAAajC,IAAEC,IAAI8B,EAAc,OAAQ,MAW/C,OAVIC,EAAOC,GAMFD,EAAOC,GAAP,UACPD,EAAOC,GAAP,QAAgCjC,IAAEC,IAAI8B,EAAc,SAAU,OAN9DC,EAAOC,GAAc,CACnB,QAAWjC,IAAEC,IAAI8B,EAAc,SAAU,OAQtCC,IACN,IAEGE,EAASlC,IAAE6B,OAAOb,GAAc,SAACc,EAAKK,GAC1C,IAAMH,EAASF,EACTM,EAAYpC,IAAEC,IAAIkC,EAAa,OAAQ,MAW7C,OAVIH,EAAOI,GAMFJ,EAAOI,GAAP,WACPJ,EAAOI,GAAP,SAAgCpC,IAAEC,IAAIkC,EAAa,MAAO,OAN1DH,EAAOI,GAAa,CAClB,SAAYpC,IAAEC,IAAIkC,EAAa,MAAO,OAQnCH,IACN,IAEGK,EAAiBrC,IAAEsC,MAAMV,EAASM,GAExCvD,QAAQC,IAAImC,GACZ,EAAK7C,SAAS,CAAEqC,SAAS,EAAO8B,eAAgBA,SAnJxD,oCAuJgBjE,GAAI,IAAD,OACfH,KAAKC,SAAS,CAAEqC,SAAS,IACzBtC,KAAK2B,OAAOiB,aAAa,kBAAmB,CAAEzC,IAC3C0C,MAAK,SAAAC,GACJpC,QAAQC,IAAImC,GACZ,EAAK7C,SAAS,CAAEqC,SAAS,EAAOgC,cAAenE,SA5JvD,+BAiKI,IAAMmC,EAAUtC,KAAKT,MAAM+C,QACrB8B,EAAiBpE,KAAKT,MAAM6E,eAC5BE,EAAgBtE,KAAKT,MAAM+E,cAC3BlC,EAAepC,KAAKT,MAAM6C,aAC1BC,EAAcrC,KAAKT,MAAM8C,YAE/B,OAAQ,6BACFC,GAAY8B,GAAmBE,EAAoG,KAApF,oCAAE,yBAAK1D,MAAO,CAAE2D,UAAW,UAA3B,kCAChDjC,IAAYF,GAAgBC,GAAe,oCAAE,yBAAKzB,MAAO,CAAE2D,UAAW,UAA3B,yBAA2E,KACtHH,IAAmB9B,EACtB,yBAAK1B,MAAO,CAAE5B,UAAW,SACvB,4BAEI+C,IAAE6B,OAAOQ,GAAgB,SAACP,EAAKW,EAAKC,GAClC,IAAMC,EAAO,wBAAIC,IAAMF,EAAEG,YACnBH,EAAEG,WAAa,MACdJ,EAAIb,QACL,kBAAC,IAAD,CAAM7C,GAAK,YAAc0D,EAAIb,QAAQiB,YAArC,WADc,KAKdJ,EAAIb,SAAWa,EAAIK,SAAU,MAAO,KACnCL,EAAIK,SACL,kBAAC,IAAD,CAAM/D,GAAK,aAAe0D,EAAIK,SAASD,YAAvC,YADe,MAOrB,OAAO7C,IAAE+C,OAAOjB,EAAKa,KACpB,MAIR,UAnMP,GAAmClD,IAAMC,W,wECU5BsD,EAAb,YAEE,WAAYzF,GAAQ,IAAD,uBACjB,4CAAMA,KAIDqC,OAAS,EAAKrC,MAAMqC,OAGzB,EAAKqD,aAAe,EAAKA,aAAapF,KAAlB,gBAEpB,IAAMqF,EAAqBlD,IAAEC,IAAI,EAAK1C,MAAO,mBAAoB,MAC3D4F,EAAsBnD,IAAEC,IAAI1B,IAAY2B,MAAMF,IAAEC,IAAI,EAAK1C,MAAO,kBAAmB,OAAQ,MAAO,MAClG6F,EAAaF,GAAwCC,EAZ1C,OAejB,EAAK3F,MAAQ,CACX,SAAY,KACZ,IAAO4F,EACP,SAAW,EACX,UAAa,CACX,KAAQ,EACR,YAAe,KArBF,EAFrB,iFA6BI,IAAMzB,EAAM1D,KAAKT,MAAMmE,IAEpB1D,KAAKV,MAAM6C,mBAAqBuB,EACjC1D,KAAKgF,aAAatB,GAGZ1D,KAAKV,MAAM6C,mBAAqBnC,KAAKT,MAAM+C,SACjDtC,KAAKC,SAAS,CAAEqC,SAAS,MApC/B,yCAwCqBC,GACjB,GAAGvC,KAAKV,MAAM6C,kBAAmB,CAC/B,IAMMuB,EAAK0B,EANLC,EAActD,IAAEC,IAAIhC,KAAKV,MAAO,mBAAoB,MACpDgG,EAAiBvD,IAAEC,IAAIO,EAAW,mBAAoB,MACtDgD,EAAexD,IAAEC,IAAI1B,IAAY2B,MAAMF,IAAEC,IAAIhC,KAAKV,MAAO,kBAAmB,OAAQ,MAAO,MAC3FkG,EAAkBzD,IAAEC,IAAI1B,IAAY2B,MAAMF,IAAEC,IAAIO,EAAW,kBAAmB,OAAQ,MAAO,MAEnG,GAAG8C,GAAeE,EAGbF,GACD3B,EAAM2B,EACND,EAASE,GAGHC,IACN7B,EAAM6B,EACNH,EAASI,GAGR9B,IAAQ0B,GACTpF,KAAKgF,aAAatB,MA7D5B,mCAmEeA,GAAM,IAAD,OACV+B,EAAS/B,EAAIkB,WAEnB,GAAGa,EAAOC,QAAU,GAAI,CACtB,IAAMhC,EAAM+B,EAAOE,SAAS,GAAI,KAChC3F,KAAK2B,OAAOiB,aAAa,sBAAuB,CAAEc,IAC/Cb,MAAK,SAAAC,GACJ,IACI8C,EADEf,EAAW9C,IAAEC,IAAIc,EAAK,gBAAiB,MAG1C+B,IACDe,EAAmB7D,IAAEqB,IAAIyB,GAAU,SAACgB,EAASC,GAAV,MAAqB,CACtD,KAAQ/D,IAAEC,IAAI6D,EAAS,iBAAkB,MACzC,OAAU9D,IAAEC,IAAI6D,EAAS,SAAU,MACnC,OAAU9D,IAAEC,IAAI6D,EAAS,SAAU,MACnC,KAAQ9D,IAAEC,IAAI6D,EAAS,aAAe,IAAM9D,IAAEC,IAAI6D,EAAS,gBAC3D,GAAM9D,IAAEC,IAAI6D,EAAS,WAAa,IAAM9D,IAAEC,IAAI6D,EAAS,cACvD,iBAAoB9D,IAAEC,IAAI6D,EAAS,oBACnC,IAAO9D,IAAEC,IAAI6D,EAAS,SAAU,IAAMC,EAAMlB,gBAIhDlE,QAAQC,IAAImC,GACZ,EAAK7C,SAAS,CACZ,SAAY2F,EACZ,SAAW,EACX,YAAe7D,IAAEC,IAAIc,EAAK,mBAAoB,WAGjDiD,OAAM,SAAAC,GACL,EAAK/F,SAAS,CACZ,SAAW,IAEbS,QAAQuF,MAAMD,WAKlBhG,KAAKC,SAAS,CACZ,SAAW,EACX,IAAOwF,MA3Gf,+BAiHY,IA2DJS,EA3DG,OACDC,EAAUC,YAAW,CACzB5H,KAAM,CACJ6H,MAAO,QAETC,aAAc,CACZC,UAAW,IACXC,SAAU,UAIRC,EAAU,CACd,CAAEC,GAAI,OAAQzF,MAAO,cAAe0F,SAAU,KAQ9C,CACED,GAAI,OACJzF,MAAO,OACP0F,SAAU,GACVC,OAAQ,SAAAlH,GAAK,OAAIA,EAAMmH,kBACvBC,MAAO,SAET,CACEJ,GAAI,KACJzF,MAAO,KACP0F,SAAU,GACVG,MAAO,SAET,CACEJ,GAAI,mBACJzF,MAAO,8BACP0F,SAAU,GACVG,MAAO,UAiBLC,EAAc/G,KAAKT,MAAMyH,UAAUD,YACnCE,EAAOjH,KAAKT,MAAMyH,UAAUC,KAC5B3E,EAAUtC,KAAKT,MAAM+C,QACrBuC,EAAW9C,IAAEmF,OAAOlH,KAAKT,MAAMsF,UAAU,SAAAgB,GAAO,OAAIA,EAAO,MAAYA,EAAO,QAAcA,EAAO,UACnGnC,EAAM1D,KAAKT,MAAMmE,IAGpBmB,GAAYA,EAASa,SACtBQ,EAAenE,IAAE6B,OAAO7B,IAAEqB,IAAIyB,GAAU,SAAAgB,GAAO,OAAIA,EAAQsB,qBAAmB,SAACtD,EAAKuD,GAClF,OAAOvD,EAAMuD,IACZ,GAAKvC,EAASa,OACjBQ,EAAemB,KAAKC,MAAqB,IAAfpB,GAAuB,KAGnD,IAAMqB,EAAaxF,IAAEC,IAAIhC,KAAKT,MAAO,gBAAiB,MAEtD,OACE,oCAEM+C,EAAS,oCAAE,yBAAK1B,MAAO,CAAE2D,UAAW,UAA3B,yBAAqE,KAC5EjC,GAAauC,GAAaA,EAASa,OAAuG,KAA5F,oCAAE,yBAAK9E,MAAO,CAAE2D,UAAW,UAA3B,wCAA8Eb,EAA9E,OAChDmB,GAAaA,EAASa,OAC1B,oCACA,yBAAK9E,MAAO,CAAE4G,QAAS,QAASnB,MAAO,OAAQrH,UAAW,SAAUyI,WAAY,YAC9E,4BAAMF,IAER,yBAAK3G,MAAO,CAAE4G,QAAS,QAASC,WAAY,cAAezI,UAAW,OAAQD,OAAQ,SACpF,+DADF,KACkDmH,EADlD,cAC4EA,EAAe,EAD3F,WAGA,kBAACwB,EAAA,EAAD,CAAOC,UAAWxB,EAAQ3H,KAAMoC,MAAO,CAAE4G,QAAS,QAASnB,MAAO,SAChE,yBAAKsB,UAAWxB,EAAQG,cACtB,kBAACsB,EAAA,EAAD,CAAOC,cAAY,EAACC,aAAW,gBAC7B,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACGvB,EAAQrD,KAAI,SAAA6E,GAAM,OACjB,kBAACC,EAAA,EAAD,CACEvD,IAAKsD,EAAOvB,GACZI,MAAOmB,EAAOnB,MACdlG,MAAO,CAAE+F,SAAUsB,EAAOtB,SAAUc,WAAY,gBAEhD,gCAASQ,EAAOhH,aAKxB,kBAACkH,EAAA,EAAD,KACItD,EAAiBA,EAASuD,MAAMnB,EAAOF,EAAaE,EAAOF,EAAcA,GAAa3D,KAAI,SAAAiF,GAC1F,OACE,kBAACL,EAAA,EAAD,CAAUM,OAAK,EAACC,UAAW,EAAG5D,IAAK0D,EAAI1D,KACpC8B,EAAQrD,KAAI,SAAA6E,GACX,IAAMvI,EAAQ2I,EAAIJ,EAAOvB,IACzB,OACE,kBAACwB,EAAA,EAAD,CAAWvD,IAAKsD,EAAOvB,GAAII,MAAOmB,EAAOnB,MAAOlG,MAAO,CAAE6G,WAAY,gBAClEQ,EAAOrB,QAA2B,kBAAVlH,EAAqBuI,EAAOrB,OAAOlH,GAASA,UAPrE,QAiBlB,kBAAC8I,EAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,GAAI,KACjCC,UAAU,MACVvF,MAAQ0B,EAAaA,EAASa,OAAZ,EAClBqB,YAAaA,EACbE,KAAMA,EACN0B,aAlFiB,SAAC5I,EAAO6I,GAC/B,IAAM5B,EAAY,EAAKzH,MAAMyH,UAC7BA,EAAUC,KAAO2B,EACjB,EAAK3I,SAAS,CAAE+G,eAgFV6B,oBA7EwB,SAAA9I,GAC9B,IAAMiH,EAAY,EAAKzH,MAAMyH,UAC7BA,EAAUC,KAAO,EACjBD,EAAUD,aAAehH,EAAMG,OAAOR,MACtC,EAAKO,SAAS,CAAE+G,mBAwBqB,UA5L3C,GAAkCxF,IAAMC,WCA3BqH,EAAb,YAEE,WAAYxJ,GAAQ,IAAD,uBACjB,4CAAMA,KAIDqC,OAAS,EAAKrC,MAAMqC,OAGzB,EAAKoH,YAAc,EAAKA,YAAYnJ,KAAjB,gBAEnB,IAAMoJ,EAAuBjH,IAAEC,IAAI,EAAK1C,MAAO,qBAAsB,MAC/D2J,EAAwBlH,IAAEC,IAAI1B,IAAY2B,MAAMF,IAAEC,IAAI,EAAK1C,MAAO,kBAAmB,OAAQ,QAAS,MACtG4J,EAAeF,GAA4CC,EAZhD,OAejB,EAAK1J,MAAQ,CACX,QAAW,KACX,MAAS2J,EACT,SAAW,EACX,UAAa,CACX,KAAQ,EACR,YAAe,KArBF,EAFrB,iFA6BI,IAAMC,EAAQnJ,KAAKT,MAAM4J,MAEtBnJ,KAAKV,MAAM6C,mBAAqBgH,EACjCnJ,KAAK+I,YAAYI,GAGXnJ,KAAKV,MAAM6C,mBAAqBnC,KAAKT,MAAM+C,SACjDtC,KAAKC,SAAS,CAAEqC,SAAS,MApC/B,yCAwCqBC,GACjB,GAAGvC,KAAKV,MAAM6C,kBAAmB,CAC/B,IAMMgH,EAAOC,EANPC,EAAgBtH,IAAEC,IAAIhC,KAAKV,MAAO,qBAAsB,MACxDgK,EAAmBvH,IAAEC,IAAIO,EAAW,qBAAsB,MAC1DgH,EAAiBxH,IAAEC,IAAI1B,IAAY2B,MAAMF,IAAEC,IAAIhC,KAAKV,MAAO,kBAAmB,OAAQ,QAAS,MAC/FkK,EAAoBzH,IAAEC,IAAI1B,IAAY2B,MAAMF,IAAEC,IAAIO,EAAW,kBAAmB,OAAQ,QAAS,MAEvG,GAAG8G,GAAiBE,EAGfF,GACDF,EAAQE,EACRD,EAAWE,GAGLC,IACNJ,EAAQI,EACRH,EAAWI,GAGVL,IAAUC,GACXpJ,KAAK+I,YAAYI,MA7D3B,kCAmEcA,GAAQ,IAAD,OACXM,EAAWN,EAAMvE,WAEvB,GAAG6E,EAAS/D,QAAU,EAAG,CACvB,IAAMlC,EAAS2F,EAAMO,OAAO,EAAG,GAC/B1J,KAAK2B,OAAOiB,aAAa,sBAAuB,CAAEY,IAC/CX,MAAK,SAAAC,GACJ,IACI8C,EADEf,EAAW9C,IAAEC,IAAIc,EAAK,gBAAiB,MAG1C+B,IACDe,EAAmB7D,IAAEqB,IAAIyB,GAAU,SAACgB,EAASC,GAAV,MAAqB,CACtD,KAAQ/D,IAAEC,IAAI6D,EAAS,gBAAiB,MACxC,IAAO9D,IAAEC,IAAI6D,EAAS,MAAO,MAC7B,OAAU9D,IAAEC,IAAI6D,EAAS,SAAU,MACnC,KAAQ9D,IAAEC,IAAI6D,EAAS,aAAe,IAAM9D,IAAEC,IAAI6D,EAAS,gBAC3D,GAAM9D,IAAEC,IAAI6D,EAAS,WAAa,IAAM9D,IAAEC,IAAI6D,EAAS,cACvD,iBAAoB9D,IAAEC,IAAI6D,EAAS,oBACnC,IAAO9D,IAAEC,IAAI6D,EAAS,MAAO,IAAMC,EAAMlB,gBAI7ClE,QAAQC,IAAImC,GACZ,EAAK7C,SAAS,CACZ,QAAW2F,EACX,SAAW,EACX,aAAgB7D,IAAEC,IAAIc,EAAK,oBAAqB,WAGnDiD,OAAM,SAAAC,GACL,EAAK/F,SAAS,CACZ,SAAW,IAEbS,QAAQuF,MAAMD,WAKlBhG,KAAKC,SAAS,CACZ,SAAW,EACX,MAASwJ,MA3GjB,+BAiHY,IA2DJvD,EA3DG,OACDC,EAAUC,YAAW,CACzB5H,KAAM,CACJ6H,MAAO,QAETC,aAAc,CACZC,UAAW,IACXC,SAAU,UAIRC,EAAU,CACd,CAAEC,GAAI,OAAQzF,MAAO,cAAe0F,SAAU,KAQ9C,CACED,GAAI,OACJzF,MAAO,OACP0F,SAAU,GACVC,OAAQ,SAAAlH,GAAK,OAAIA,EAAMmH,kBACvBC,MAAO,SAET,CACEJ,GAAI,KACJzF,MAAO,KACP0F,SAAU,GACVG,MAAO,SAET,CACEJ,GAAI,mBACJzF,MAAO,8BACP0F,SAAU,IACVG,MAAO,UAiBLC,EAAc/G,KAAKT,MAAMyH,UAAUD,YACnCE,EAAOjH,KAAKT,MAAMyH,UAAUC,KAC5B3E,EAAUtC,KAAKT,MAAM+C,QACrBqB,EAAU5B,IAAEmF,OAAOlH,KAAKT,MAAMoE,SAAS,SAAAgG,GAAM,OAAIA,EAAM,MAAYA,EAAM,KAAWA,EAAM,UAC1FR,EAAQnJ,KAAKT,MAAM4J,MAGtBxF,GAAWA,EAAQ+B,SACpBQ,EAAenE,IAAE6B,OAAO7B,IAAEqB,IAAIO,GAAS,SAAAgG,GAAM,OAAIA,EAAOxC,qBAAmB,SAACtD,EAAKuD,GAC/E,OAAOvD,EAAMuD,IACZ,GAAKzD,EAAQ+B,OAChBQ,EAAemB,KAAKC,MAAqB,IAAfpB,GAAuB,KAGnD,IAAM0D,EAAc7H,IAAEC,IAAIhC,KAAKT,MAAO,iBAAkB,MAExD,OACE,oCAEM+C,EAAS,oCAAE,yBAAK1B,MAAO,CAAE2D,UAAW,UAA3B,yBAAqE,KAC5EjC,GAAaqB,GAAYA,EAAQ+B,OAA2G,KAAhG,oCAAE,yBAAK9E,MAAO,CAAE2D,UAAW,UAA3B,0CAAgF4E,EAAhF,OAC9CxF,GAAYA,EAAQ+B,OACxB,oCACA,yBAAK9E,MAAO,CAAE4G,QAAS,QAASnB,MAAO,OAAQrH,UAAW,SAAUyI,WAAY,YAC9E,4BAAMmC,IAER,yBAAKhJ,MAAO,CAAE4G,QAAS,QAASC,WAAY,cAAezI,UAAW,OAAQD,OAAQ,SACpF,+DADF,KACkDmH,EADlD,cAC4EA,EAAe,EAD3F,WAGA,kBAACwB,EAAA,EAAD,CAAOC,UAAWxB,EAAQ3H,KAAMoC,MAAO,CAAE4G,QAAS,QAASnB,MAAO,SAChE,yBAAKsB,UAAWxB,EAAQG,cACtB,kBAACsB,EAAA,EAAD,CAAOC,cAAY,EAACC,aAAW,gBAC7B,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACGvB,EAAQrD,KAAI,SAAA6E,GAAM,OACjB,kBAACC,EAAA,EAAD,CACEvD,IAAKsD,EAAOvB,GACZI,MAAOmB,EAAOnB,MACdlG,MAAO,CAAE+F,SAAUsB,EAAOtB,SAAUc,WAAY,gBAEhD,gCAASQ,EAAOhH,aAKxB,kBAACkH,EAAA,EAAD,KACIxE,EAAgBA,EAAQyE,MAAMnB,EAAOF,EAAaE,EAAOF,EAAcA,GAAa3D,KAAI,SAAAiF,GACxF,OACE,kBAACL,EAAA,EAAD,CAAUM,OAAK,EAACC,UAAW,EAAG5D,IAAK0D,EAAI1D,KACpC8B,EAAQrD,KAAI,SAAA6E,GACX,IAAMvI,EAAQ2I,EAAIJ,EAAOvB,IACzB,OACE,kBAACwB,EAAA,EAAD,CAAWvD,IAAKsD,EAAOvB,GAAII,MAAOmB,EAAOnB,MAAOlG,MAAO,CAAE6G,WAAY,gBAClEQ,EAAOrB,QAA2B,kBAAVlH,EAAqBuI,EAAOrB,OAAOlH,GAASA,UAPtE,QAiBjB,kBAAC8I,EAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,GAAI,KACjCC,UAAU,MACVvF,MAAQQ,EAAYA,EAAQ+B,OAAX,EACjBqB,YAAaA,EACbE,KAAMA,EACN0B,aAlFiB,SAAC5I,EAAO6I,GAC/B,IAAM5B,EAAY,EAAKzH,MAAMyH,UAC7BA,EAAUC,KAAO2B,EACjB,EAAK3I,SAAS,CAAE+G,eAgFV6B,oBA7EwB,SAAA9I,GAC9B,IAAMiH,EAAY,EAAKzH,MAAMyH,UAC7BA,EAAUC,KAAO,EACjBD,EAAUD,aAAehH,EAAMG,OAAOR,MACtC,EAAKO,SAAS,CAAE+G,mBAwBmB,UA5LzC,GAAiCxF,IAAMC,W,kCCV1BoI,EAAb,YACE,WAAYvK,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACX+C,SAAS,EACTwH,OAAQ,EACRC,WAAY,IAId,EAAKpI,OAAS,IAAIqI,GAGlB,EAAKC,mBAAqB,EAAKA,mBAAmBrK,KAAxB,gBAbT,EADrB,gFAiBqBG,GACjBC,KAAKC,SAAS,CAAE8J,WAAYhK,EAAMG,OAAOR,UAlB7C,mCAqBe6D,GAEX,IAAM2G,EAAalK,KAAKT,MAAMwK,WAO9B,OAAOxG,GACL,IAAK,UACHvD,KAAK2B,OAAOiB,aAAa,mBAAoB,CAACsH,IAC7CrH,MAAK,SAAAsH,GAEJ,OADAzJ,QAAQC,IAAIwJ,GACL,CACL,oBAAuBA,MA4B1BpE,OAAM,SAAAC,GACLtF,QAAQC,IAAIqF,MAEd,MAEF,IAAK,SACHhG,KAAK2B,OAAOiB,aAAa,kBAAmB,CAACsH,IAC5CrH,MAAK,SAAAsH,GAEJ,OADAzJ,QAAQC,IAAIwJ,GACL,CACL,mBAAsBA,MAsBzBpE,OAAM,SAAAC,GACLtF,QAAQC,IAAIqF,SAjGtB,0CAyGuB,IAAD,OAElBhG,KAAK2B,OAAOyI,OACXvH,MAAK,WACJ,EAAK5C,SAAS,CAAEqC,SAAS,EAAOwH,OAAQ,OAEzC/D,OAAM,SAAAC,GACLtF,QAAQC,IAAIqF,GACZ,EAAK/F,SAAS,CAAEqC,SAAS,EAAOwH,QAAS,SAjH/C,+BAqHY,IAAD,OACP,OACE,yBAAKlJ,MAAQ/B,EAAOgC,WAClB,kBAACwJ,EAAA,EAAD,CACEC,SAAWtK,KAAKT,MAAM+C,QACtB2D,MAAQjG,KAAKT,MAAM0G,MACnBsE,YAAY,gBACZ3J,MAAQ/B,EAAO2L,MACf9K,MAAQM,KAAKT,MAAMwK,WACnB/I,SAAWhB,KAAKiK,qBAElB,kBAAC7I,EAAA,EAAD,KACE,kBAACxC,EAAA,EAAD,CACE0L,SAAWtK,KAAKT,MAAM+C,QACtBhB,QAAU,kBAAM,EAAKmJ,aAAa,aAFpC,WAMA,kBAAC7L,EAAA,EAAD,CACE0L,SAAWtK,KAAKT,MAAM+C,QACtBhB,QAAU,kBAAM,EAAKmJ,aAAa,YAFpC,gBAvIV,GAA+BjJ,IAAMC,WAmJ/B5C,EAAS,CACbgC,UAAW,GAGXU,OAAQ,GAGRiJ,MAAO,CACLzL,OAAQ,ICvJC2L,EAAb,YAEE,WAAYpL,GAAQ,IAAD,8BACjB,4CAAMA,KAoBRqL,YAAc,SAACC,GAAD,OAAmB,WAAO,IAAD,EACP,EAAKrL,MAA3B0I,EAD6B,EAC7BA,OAAQ4C,EADqB,EACrBA,UAGZ5C,IAAW2C,EACb,EAAK3K,SAAS,CACZgI,OAAQ2C,EACRC,UAAW,YACXC,KAAM/I,IAAEgJ,OAAO,EAAKxL,MAAMuL,KAAM,CAAEF,MAMpC,EAAK3K,SAAS,CACZ4K,UAAyB,cAAdA,EAA4B,aAAe,YACtDC,KAAM,EAAKvL,MAAMuL,KAAKE,cAlC1B,EAAKzL,MAAQ,CACX0I,OAAQ,KACR4C,UAAW,KACXC,KAAM,EAAKxL,MAAM+D,QAAQyH,KACzBG,QAAS,EAAK3L,MAAM+D,QAAQyH,MAPb,EAFrB,kFAeQ/I,IAAEmJ,QAAQlL,KAAKV,MAAM+D,QAAQyH,KAAM9K,KAAKT,MAAM0L,UAChDjL,KAAKC,SAAS,CACZ6K,KAAM9K,KAAKV,MAAM+D,QAAQyH,KACzBG,QAASjL,KAAKV,MAAM+D,QAAQyH,SAlBpC,+BA4CY,IAAD,SAC6B9K,KAAKT,MAAjC0I,EADD,EACCA,OAAQ4C,EADT,EACSA,UAAWC,EADpB,EACoBA,KAErBK,EAAoB,CACxB,KAAQ,OACR,IAAO,MACP,KAAQ,OACR,GAAM,KACN,SAAY,YAGd,OAEE,yBAAKvK,MAAQ/B,EAAOgC,WAClB,kBAAC+G,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAEIjG,IAAEqB,IAhBM,CAAE,OAAQ,MAAO,OAAQ,KAAM,aAgBpB,SAAAG,GAAI,OACrB,kBAAC2E,EAAA,EAAD,CACEvD,IAAMpB,EACN6H,OAASnD,IAAW1E,EAAMsH,EAAW,KACrCvJ,QAAU,EAAKqJ,YAAYpH,IAEzB4H,EAAkB5H,SAM9B,kBAAC4E,EAAA,EAAD,KAEIpG,IAAEqB,IAAI0H,GAAM,WAAoCO,GAApC,IAAG9H,EAAH,EAAGA,KAAMG,EAAT,EAASA,IAAK4H,EAAd,EAAcA,KAAMxK,EAApB,EAAoBA,GAAIyK,EAAxB,EAAwBA,SAAxB,OACR,kBAACvD,EAAA,EAAD,CAAUrD,IAAM5C,IAAEyJ,KAAK,CAAC9H,EAAK,IAAK2H,GAAM,KACtC,kBAACnD,EAAA,EAAD,KAAW,8BAAQ3E,IACnB,kBAAC2E,EAAA,EAAD,KAAW,8BAAQxE,IACnB,kBAACwE,EAAA,EAAD,KAAW,8BAAQoD,IACnB,kBAACpD,EAAA,EAAD,KAAW,8BAAQpH,IACnB,kBAACoH,EAAA,EAAD,KAAW,8BAAQqD,eAlFvC,GAAgD/J,IAAMC,WA8FhD5C,EAAS,CACbgC,UAAW,CACT9B,OAAQ,KChGC0M,EAAb,YAEE,WAAYnM,GAAQ,IAAD,8BACjB,4CAAMA,KAoBRqL,YAAc,SAACC,GAAD,OAAmB,WAAO,IAAD,EACP,EAAKrL,MAA3B0I,EAD6B,EAC7BA,OAAQ4C,EADqB,EACrBA,UAGZ5C,IAAW2C,EACb,EAAK3K,SAAS,CACZgI,OAAQ2C,EACRC,UAAW,YACXC,KAAM/I,IAAEgJ,OAAO,EAAKxL,MAAMuL,KAAM,CAAEF,MAMpC,EAAK3K,SAAS,CACZ4K,UAAyB,cAAdA,EAA4B,aAAe,YACtDC,KAAM,EAAKvL,MAAMuL,KAAKE,cAlC1B,EAAKzL,MAAQ,CACX0I,OAAQ,KACR4C,UAAW,KACXC,KAAM,EAAKxL,MAAM+D,QAAQyH,KAAKY,YAAYZ,KAAKzH,QAAQyH,KAAKjG,SAC5D8G,WAAY,EAAKrM,MAAM+D,QAAQyH,KAAKY,YAAYZ,KAAKzH,QAAQyH,KAAKjG,UAPnD,EAFrB,kFAeQ9C,IAAEmJ,QAAQlL,KAAKV,MAAM+D,QAASrD,KAAKT,MAAMoM,aAC3C3L,KAAKC,SAAS,CACZ6K,KAAM9K,KAAKV,MAAM+D,QAAQyH,KACzBa,WAAY3L,KAAKV,MAAM+D,YAlB/B,+BA4CY,IAAD,SAC6BrD,KAAKT,MAAjC0I,EADD,EACCA,OAAQ4C,EADT,EACSA,UAAWC,EADpB,EACoBA,KAErBK,EAAoB,CACxB,KAAQ,OACR,MAAS,QACT,KAAQ,OACR,GAAM,KACN,SAAY,YAGd,OAEE,yBAAKvK,MAAQ/B,EAAOgC,WAClB,kBAAC+G,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAEIjG,IAAEqB,IAhBM,CAAE,OAAQ,QAAS,OAAQ,KAAM,aAgBtB,SAAAG,GAAI,OACrB,kBAAC2E,EAAA,EAAD,CACEvD,IAAMpB,EACN6H,OAASnD,IAAW1E,EAAMsH,EAAW,KACrCvJ,QAAU,EAAKqJ,YAAYpH,IAEzB4H,EAAkB5H,SAM9B,kBAAC4E,EAAA,EAAD,KAEIpG,IAAEqB,IAAI0H,GAAM,WAAgDO,GAAhD,IAAGO,EAAH,EAAGA,MAAOpI,EAAV,EAAUA,OAAQ8H,EAAlB,EAAkBA,KAAMxK,EAAxB,EAAwBA,GAAIqG,EAA5B,EAA4BA,iBAA5B,OACR,kBAACa,EAAA,EAAD,CAAUrD,IAAM5C,IAAEyJ,KAAK,CAAChI,EAAQ,IAAK6H,GAAM,KACzC,kBAACnD,EAAA,EAAD,KAAW,8BAAQ0D,EAAM,KACzB,kBAAC1D,EAAA,EAAD,KAAW,8BAAQ1E,IACnB,kBAAC0E,EAAA,EAAD,KAAW,8BAAQoD,EAAKO,KAAb,IAAsBP,EAAKQ,UACtC,kBAAC5D,EAAA,EAAD,KAAW,8BAAQpH,EAAG+K,KAAX,IAAoB/K,EAAGgL,UAClC,kBAAC5D,EAAA,EAAD,KAAW,8BAAQf,eAlFvC,GAAgD3F,IAAMC,WA8FhD5C,EAAS,CACbgC,UAAW,CACT9B,OAAQ,KCjGCgN,EAAb,YAEE,WAAYzM,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXuL,KAAM,EAAKxL,MAAM+D,QAAQyH,KACzBG,QAAS,EAAK3L,MAAM+D,QAAQyH,MALb,EAFrB,kFAaQ/I,IAAEmJ,QAAQlL,KAAKV,MAAM+D,QAAQyH,KAAM9K,KAAKT,MAAM0L,UAChDjL,KAAKC,SAAS,CACZ6K,KAAM9K,KAAKV,MAAM+D,QAAQyH,KACzBG,QAASjL,KAAKV,MAAM+D,QAAQyH,SAhBpC,+BAqBY,IACAA,EAAS9K,KAAKT,MAAduL,KAER,OACE,yBAAKlK,MAAQ/B,EAAOgC,WAClB,kBAAC+G,EAAA,EAAD,KACE,kBAACO,EAAA,EAAD,KACE,kBAACH,EAAA,EAAD,CAAUrD,IAAI,SACZ,kBAACuD,EAAA,EAAD,KACE,0DAEF,kBAACA,EAAA,EAAD,KACE,8BAAQ4C,EAAKkB,kBAGjB,kBAAChE,EAAA,EAAD,CAAUrD,IAAI,QACZ,kBAACuD,EAAA,EAAD,KACE,+EAEF,kBAACA,EAAA,EAAD,KACE,8BAAQb,KAAKC,MAAiD,IAA3CwD,EAAKmB,8BAA8BC,OAAgB,OAG1E,kBAAClE,EAAA,EAAD,CAAUrD,IAAI,YACZ,kBAACuD,EAAA,EAAD,KACE,kFAEF,kBAACA,EAAA,EAAD,KACE,8BAAQb,KAAKC,MAAoD,IAA9CwD,EAAKmB,8BAA8BV,UAAmB,cAjDzF,GAA+D/J,IAAMC,WA4D/D5C,EAAS,CACbgC,UAAW,CACT9B,OAAQ,KC/DCoN,EAAb,YAEE,WAAY7M,GAAQ,IAAD,8BACjB,4CAAMA,KAGDC,MAAQ,CACT8D,QAAS,EAAK/D,MAAM+D,SALP,EAFrB,kFAYQtB,IAAEmJ,QAAQlL,KAAKV,MAAM+D,QAASrD,KAAKT,MAAM8D,UAC3CrD,KAAKC,SAAS,CACZoD,QAASrD,KAAKV,MAAM+D,YAd5B,+BAmBY,IACAA,EAAYrD,KAAKT,MAAjB8D,QAER,OACE,yBAAKzC,MAAQ/B,GAAOgC,WAEfkB,IAAEC,IAAIqB,EAAS,uBAAwB,GAEvC,KADC,gEAA2B,gCAAQ,kCAAStB,IAAEC,IAAIqB,EAAS,kDAAmD,IAA3E,YAA2FtB,IAAEC,IAAIqB,EAAS,kDAAmD,IAA7J,OAKpCtB,IAAEC,IAAIqB,EAAS,2BAA4B,GAE3C,KADC,mEAA8B,gCAAQ,kCAAStB,IAAEC,IAAIqB,EAAS,6BAA8B,IAAtD,cAAwEtB,IAAEC,IAAIqB,EAAS,8BAA+B,IAAtH,OAMvCtB,IAAEC,IAAIqB,EAAS,6CAA8C,GAI7D,KAHC,kBAAC,EAAD,CACEA,QAAUA,EAAQ+I,qCAOrBrK,IAAEC,IAAIqB,EAAS,8BAA+B,GAI9C,KAHC,kBAAC,EAAD,CACEA,QAAUA,EAAQgJ,sBAOrBtK,IAAEC,IAAIqB,EAAS,6BAA8B,GAI7C,KAHC,kBAAC,EAAD,CACEA,QAAUA,EAAQiJ,0BA1DhC,GAAsC9K,IAAMC,WAmEtC5C,GAAS,CACbgC,UAAW,CACT9B,OAAQ,K,ICvEuByC,IAAMC,UCErC8K,EAAQ,MAHVC,G,GAAAA,OACAC,G,GAAAA,kBACAC,G,GAAAA,qBAGW1C,GAAb,WACE,aAAe,oBACbhK,KAAK2M,GAAK,GACV3M,KAAK4M,GAAK,GAHd,mLASM5M,KAAK6M,mBAAmBC,iBAT9B,SAUY9M,KAAK+M,iBAAiBD,oEAVlC,uBAW4B9M,KAAKgN,kBAAkBF,iBAXnD,cAWYG,EAXZ,gBAYYjN,KAAKkN,wBAAwB,UAAWD,GAZpD,gCAaa,GAbb,yCAgBMvM,QAAQuF,MAAR,MAhBN,iLAsBqBkH,GACjBnN,KAAKoN,OAASZ,GAAOa,2BAA2BF,KAvBpD,uCA2BmBxI,GACf,IAAM2I,EAAa,IAAIZ,GAAqBI,oEAC5C,OAAO9M,KAAKoN,OAAOG,KAAKC,oBAAoBF,GACzCzK,MAAK,SAAA4K,GAEJ,OADA/M,QAAQC,IAAR,kEAAuE8M,EAAK/G,KACrE+G,KAER1H,OAAM,SAAAC,GAEL,OADAtF,QAAQuF,MAAMD,GACPA,OApCf,iFAyC0BzC,GAzC1B,iFA0C0BvD,KAAKoN,OAAOM,iBAChCjB,GAAkBkB,QAClBpK,GA5CN,cA0CIvD,KAAK4M,GAAGrJ,GA1CZ,yBA+CWvD,KAAK4M,GAAGrJ,IA/CnB,8LAmDgCA,EAAMqJ,GAnDtC,iFAoD0BA,EAAGD,GAAGpJ,GApDhC,cAoDIvD,KAAK2M,GAAGpJ,GApDZ,yBAsDWvD,KAAK2M,GAAGpJ,IAtDnB,4IAyDeA,EAAMqK,GACjB,OAAO5N,KAAKoN,OAAOxK,aAAaW,EAAMqK,GACnC7H,OAAM,SAAAC,GAEL,OADAtF,QAAQuF,MAAMD,GACPA,SA7Df,KCgIe6H,G,YA7Gb,WAAYvO,GAAQ,IAAD,8BACjB,4CAAMA,KAGDC,MAAQ,CACXuO,OAAQ,CACNzH,MAAO,EACPjH,OAAQ,GAEV,mBAAqB,EACrB,SAAW,GAIb,EAAKuC,OAAS,IAAIqI,GAGlB,EAAK+D,wBAA0B,EAAKA,wBAAwBnO,KAA7B,gBAjBd,E,uFAqBjBI,KAAKC,SAAS,CAAE6N,OAAQ,CAAEzH,MAAOyH,OAAOE,WAAY5O,OAAQ0O,OAAOG,iB,0CAGhD,IAAD,OAClBjO,KAAK+N,0BACLD,OAAOI,iBAAiB,SAAUlO,KAAK+N,yBAEvCrN,QAAQC,IAAI,2BACZX,KAAK2B,OAAOyI,OACXvH,MAAK,SAAAmD,GACAA,GAQFtF,QAAQuF,MAAM,+BAAgCD,GAC9C,EAAK/F,SAAS,CACZ,mBAAqB,EACrB,SAAW,MAVbS,QAAQC,IAAI,mCACZ,EAAKV,SAAS,CACZ,mBAAqB,EACrB,SAAW,QAWhB8F,OAAM,SAAAC,GACLtF,QAAQuF,MAAM,+BAAgCD,GAC9C,EAAK/F,SAAS,CACZ,mBAAqB,EACrB,SAAW,S,6CAMf6N,OAAOK,oBAAoB,SAAUnO,KAAK+N,2B,+BAGlC,IAAD,OACP,OACE,kBAAC,IAAD,CAAQK,SAAUtB,aAChB,yBAAKnF,UAAU,OAKb,yBAAKA,UAAU,YACV3H,KAAKT,MAAM4C,mBAAsBnC,KAAKT,MAAM+C,QAAgD,KAAvC,uCACrDtC,KAAKT,MAAM4C,mBAAqBnC,KAAKT,MAAM+C,QAAS,oCAAE,yBAAK1B,MAAO,CAAE2D,UAAW,UAA3B,2CAAsF,oCAC7I,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE8J,KAAK,mBACLC,OACE,SAAChP,GAAD,OAAY,kBAAC,EAAD,iBAAmBA,EAAnB,CACEqC,OAAS,EAAKA,OACdQ,kBAAoB,EAAK5C,MAAM4C,wBAIjD,kBAAC,IAAD,CACEkM,KAAK,kBACLC,OACE,SAAChP,GAAD,OAAY,kBAAC,EAAD,iBAAkBA,EAAlB,CACEqC,OAAS,EAAKA,OACdQ,kBAAoB,EAAK5C,MAAM4C,wBAIjD,kBAAC,IAAD,CACEkM,KAAK,mBACLC,OACE,SAAChP,GAAD,OAAY,kBAAC,EAAD,iBAAiBA,EAAjB,CACEqC,OAAS,EAAKA,OACdQ,kBAAoB,EAAK5C,MAAM4C,iC,GAhG7CX,IAAMC,WChBJ8M,QACW,cAA7BT,OAAOrO,SAAS+O,UAEe,UAA7BV,OAAOrO,SAAS+O,UAEhBV,OAAOrO,SAAS+O,SAASC,MACvB,2DCZNC,IAASJ,OAAO,kBAAC,GAAD,MAASK,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlM,MAAK,SAAAmM,GACjCA,EAAaC,iB","file":"static/js/main.3f7918a3.chunk.js","sourcesContent":["import React from 'react';\n\nimport {\n  Redirect\n} from 'react-router-dom';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { withStyles } from '@material-ui/core/styles';\nimport { blue } from '@material-ui/core/colors';\n\nimport queryString from 'query-string';\n\nconst ColorButton = withStyles(theme => ({\n  root: {\n    color: 'white',\n    backgroundColor: blue[500],\n    '&:hover': {\n      backgroundColor: blue[700],\n    },\n  },\n}))(Button);\n\nconst styles = {\n  'container': {\n    position: 'relative',\n    margin: '10px',\n    textAlign: 'center',\n    justifyContent: 'center'\n  },\n  'textField': {\n    margin: '5px',\n  },\n  'buttonGroup': {\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)'\n  },\n  'button': {\n    height: '100%'\n  }\n};\n\nexport class Search extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      'redirect': {\n        go: false,\n        location: '/',\n      },\n      value: ''\n    };\n\n    this._handleCompanySearch = this._handleCompanySearch.bind(this);\n    this._handleSymbolSearch = this._handleSymbolSearch.bind(this);\n    this._handleChange = this._handleChange.bind(this);\n  }\n\n  _handleChange(event) {\n    this.setState({\n      'value': event.target.value\n    });  \n  }\n\n  _handleCompanySearch(q) {\n    const parsedQuery = {\n      'company': this.state.value\n    };\n\n    const qs = queryString.stringify(parsedQuery);\n\n    let newRedirect = { ...this.state.redirect };\n    newRedirect.location = ('/search?' + qs);\n    newRedirect.go = true;\n\n    console.log(this.state.value);\n    console.log(newRedirect);\n    this.setState({ redirect: newRedirect });  \n  }\n\n\n  _handleSymbolSearch(q) {\n    const parsedQuery = {\n      'symbol': this.state.value\n    };\n\n    const qs = queryString.stringify(parsedQuery);\n\n    let newRedirect = { ...this.state.redirect };\n    newRedirect.location = ('/search?' + qs);\n    newRedirect.go = true;\n\n    console.log(this.state.value);\n    console.log(newRedirect);\n    this.setState({ redirect: newRedirect });  \n  }\n\n  render() {\n    const redirect = this.state.redirect.go;\n    const location = this.state.redirect.location;\n\n    return (<div style={ styles.container }>\n\n      { redirect? <Redirect to={ location } /> :null }\n      <TextField\n        onChange={this._handleChange}\n        label='Search'\n        variant='outlined'\n        style={ styles.textField }\n      />\n      <ButtonGroup style={ styles.buttonGroup }>\n        <ColorButton variant='contained' onClick={ this._handleCompanySearch } style={ styles.button }>\n          Company\n        </ColorButton>\n        <ColorButton variant='contained' onClick={ this._handleSymbolSearch } style={ styles.button }>\n          Symbol\n        </ColorButton>\n      </ButtonGroup>\n    </div>);\n  }\n\n};\n\n","import React from 'react';\nimport queryString from 'query-string';\nimport _ from 'lodash';\n\nimport { Link } from 'react-router-dom';\n\nexport class SearchResults extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // get Stitch controller from props\n    this.stitch = this.props.stitch;\n\n    // bind this to all non-React functions\n    this._searchCompany = this._searchCompany.bind(this);\n    this._searchSymbol = this._searchSymbol.bind(this);\n\n    const initialCompanySearchFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'company', null);\n    const initialSymbolSearchFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'symbol', null);\n    \n    this.state = {\n      'companyQuery': initialCompanySearchFromQuery,\n      'symbolQuery': initialSymbolSearchFromQuery,\n      'companyResults': null,\n      'symbolResults': null,\n      'loading': true,\n    };\n  }\n\n  componentDidMount() {\n    const stitchInitialized = this.props.stitchInitialized;\n    const companyQuery = this.state.companyQuery;\n    const symbolQuery = this.state.symbolQuery;\n\n    if(stitchInitialized && companyQuery) {\n      this._searchCompany(companyQuery);\n    }\n\n    if(stitchInitialized && symbolQuery) {\n      this._searchSymbol(symbolQuery);\n    }\n\n    if(stitchInitialized && !companyQuery && !symbolQuery && this.state.loading) {\n      this.setState({ loading: false });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const stitchInitialized = this.props.stitchInitialized;\n    const companySearch = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'company', null);\n    const oldCompanySearch = _.get(queryString.parse(_.get(prevProps, 'location.search', null)), 'company', null);\n    const symbolSearch = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'symbol', null);\n    const oldSymbolSearch = _.get(queryString.parse(_.get(prevProps, 'location.search', null)), 'symbol', null);\n\n    // clear old searches\n    if(companySearch !== oldCompanySearch) {\n      this.setState({ 'companyQuery': companySearch, 'companyResults': null });\n      console.log('new company query');\n    }\n\n    if(symbolSearch !== oldSymbolSearch) {\n      this.setState({ 'symbolQuery': symbolSearch, 'symbolResults': null });\n      console.log('new symbol query');\n    }\n\n\n    // perform new searches\n    if(stitchInitialized && companySearch && companySearch !== oldCompanySearch) {\n      this._searchCompany(companySearch);\n    }\n    \n    if(stitchInitialized && symbolSearch && symbolSearch !== oldSymbolSearch) {\n      this._searchSymbol(symbolSearch);\n    }\n  }\n\n  _searchCompany(q) {\n    this.setState({ loading: true });\n    this.stitch.callFunction('searchForCompany', [ q ])\n      .then(res => {\n        const filerData = _.get(res, 'data.filerSearch.data', null);\n        const issuerData = _.get(res, 'data.issuerSearch.data', null);\n\n        let filerResults, issuerResults;\n\n        if(issuerData.count !== 1) {\n          issuerResults = _.map(issuerData.results, issuer => ({\n            name: _.get(issuer, 'names.0', null),\n            cusip6: _.get(issuer, 'cusip6', null),\n          }));\n        }\n\n        else {\n          issuerResults = [\n            {\n              name: _.get(issuerData, 'results.data.issuer_names.0', null),\n              cusip6: _.get(issuerData, 'results.data.issuer_cusip6', null),\n            }\n          ];\n        }\n\n        if(filerData.count !== 1) {\n          filerResults = _.map(filerData.results, filer => ({\n            name: _.get(filer, 'name', null),\n            cik: _.get(filer, 'cik', null),\n          }));\n        }\n\n        else {\n          filerResults = [\n            {\n              name: _.get(filerData, 'results.data.filer_names.0', null),\n              cik: _.get(filerData, 'results.data.filer_cik', null),\n            }\n          ];\n        }\n        \n        const holders = _.reduce(issuerResults, (acc, issuerResult) => {\n          const newAcc = acc;\n          const issuerName = _.get(issuerResult, 'name', null);\n          if(!newAcc[issuerName]) {\n            newAcc[issuerName] = {\n              'holders': _.get(issuerResult, 'cusip6', null)\n            };\n          }\n\n          else if(!newAcc[issuerName]['holders']) {\n            newAcc[issuerName]['holders'] = _.get(issuerResult, 'cusip6', null);\n          }\n\n          return newAcc;\n        }, {});\n\n        const filers = _.reduce(filerResults, (acc, filerResult) => {\n          const newAcc = acc;\n          const filerName = _.get(filerResult, 'name', null);\n          if(!newAcc[filerName]) {\n            newAcc[filerName] = {\n              'holdings': _.get(filerResult, 'cik', null)\n            };\n          }\n\n          else if(!newAcc[filerName]['holdings']) {\n            newAcc[filerName]['holdings'] = _.get(filerResult, 'cik', null);\n          }\n\n          return newAcc;\n        }, {});\n\n        const companyResults = _.merge(holders, filers);\n\n        console.log(res);\n        this.setState({ loading: false, companyResults: companyResults });\n      });\n  }\n\n  _searchSymbol(q) {\n    this.setState({ loading: true });\n    this.stitch.callFunction('searchForSymbol', [ q ])\n      .then(res => {\n        console.log(res);\n        this.setState({ loading: false, symbolResults: q });\n      });\n  }\n\n  render() {\n    const loading = this.state.loading;\n    const companyResults = this.state.companyResults;\n    const symbolResults = this.state.symbolResults;\n    const companyQuery = this.state.companyQuery;\n    const symbolQuery = this.state.symbolQuery;\n\n    return (<div>\n      { (!loading && !companyResults && !symbolResults)? <><div style={{ minHeight: '30vh' }}></div>{ `Please provide a search query.` }</> :null}\n      { (loading && (companyQuery || symbolQuery))? <><div style={{ minHeight: '30vh' }}></div>{ `One moment please ...` }</> :null}\n      { (companyResults && !loading)?\n      <div style={{ textAlign: 'left' }}>\n        <ul>\n          { \n            _.reduce(companyResults, (acc, val, k) => {\n              const item = <li key={ k.toString() }>\n                  { k.toString() + ' : ' }\n                  { !val.holders? null :\n                    <Link to={ '/holders/' + val.holders.toString() }>\n                      Holders\n                    </Link>\n                  }\n                  { val.holders && val.holdings? ' | ' :null}\n                  { !val.holdings? null :\n                    <Link to={ '/holdings/' + val.holdings.toString() }>\n                      Holdings\n                    </Link>\n                  }\n                </li>;\n\n              return _.concat(acc, item);\n            }, [])\n          }\n        </ul>\n      </div>\n      :null }\n    </div>);\n  }\n\n};\n","import React from 'react';\nimport queryString from 'query-string';\nimport _ from 'lodash';\n\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\n// need CIK\n\n\nexport class HoldingsView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n\n    // get Stitch controller from props\n    this.stitch = this.props.stitch;\n\n    // bind this to all non-React functions\n    this._getHoldings = this._getHoldings.bind(this);\n\n    const initialCikFromPath = _.get(this.props, 'match.params.cik', null);\n    const initialCikFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'cik', null);\n    const initialCik = initialCikFromPath? initialCikFromPath :initialCikFromQuery;\n\n    // initialize state\n    this.state = {\n      'holdings': null,\n      'cik': initialCik,\n      'loading': true,\n      'tableInfo': {\n        'page': 0,\n        'rowsPerPage': 10\n      },\n    };\n  }\n\n  componentDidMount() {\n    const cik = this.state.cik;\n\n    if(this.props.stitchInitialized && cik) {\n      this._getHoldings(cik);\n    }\n\n    else if(this.props.stitchInitialized && this.state.loading) {\n      this.setState({ loading: false });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.stitchInitialized) {\n      const cikFromPath = _.get(this.props, 'match.params.cik', null);\n      const oldCikFromPath = _.get(prevProps, 'match.params.cik', null);\n      const cikFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'cik', null);\n      const oldCikFromQuery = _.get(queryString.parse(_.get(prevProps, 'location.search', null)), 'cik', null);\n\n      if(cikFromPath || cikFromQuery) {\n        let cik, oldCik;\n\n        if(cikFromPath) {\n          cik = cikFromPath;\n          oldCik = oldCikFromPath;\n        }\n\n        else if(cikFromQuery) {\n          cik = cikFromQuery;\n          oldCik = oldCikFromQuery;\n        }\n\n        if(cik !== oldCik) {\n          this._getHoldings(cik);\n        }\n      }\n    }\n  }\n\n  _getHoldings(cik) {\n    const strCik = cik.toString();\n\n    if(strCik.length <= 10) {\n      const cik = strCik.padStart(10, '0');\n      this.stitch.callFunction('getHoldingsForFiler', [ cik ])\n        .then(res => {\n          const holdings = _.get(res, 'data.holdings', null);\n          let modifiedHoldings;\n          \n          if(holdings) {\n            modifiedHoldings = _.map(holdings, (holding, index) => ({\n              'name': _.get(holding, 'issuer_names.0', null),\n              'cusip6': _.get(holding, 'cusip6', null),\n              'cusip9': _.get(holding, 'cusip9', null),\n              'from': _.get(holding, 'from.year') + 'q' + _.get(holding, 'from.quarter'),\n              'to': _.get(holding, 'to.year') + 'q' + _.get(holding, 'to.quarter'),\n              'ownership_length': _.get(holding, 'ownership_length'),\n              'key': _.get(holding, 'cusip6', '') + index.toString()\n            }));\n          }\n\n          console.log(res);\n          this.setState({\n            'holdings': modifiedHoldings,\n            'loading': false,\n            'filer_names': _.get(res, 'data.filer_names', null)\n          });\n        })\n        .catch(err => {\n          this.setState({\n            'loading': false,\n          });\n          console.error(err);\n        });\n    }\n\n    else {\n      this.setState({\n        'loading': false,\n        'cik': strCik,\n      });\n    }\n  }\n\n\n  render() {\n    const classes = makeStyles({\n      root: {\n        width: '100%',\n      },\n      tableWrapper: {\n        maxHeight: 440,\n        overflow: 'auto',\n      },\n    });\n\n    const columns = [\n      { id: 'name', label: 'Issuer Name', minWidth: 170 },\n      /*{ id: 'cik', label: 'CIK', minWidth: 100 },\n      {\n        id: 'cik9',\n        label: 'CIK9',\n        minWidth: 170,\n        format: value => value.toLocaleString(),\n      },*/\n      {\n        id: 'from',\n        label: 'From',\n        minWidth: 70,\n        format: value => value.toLocaleString(),\n        align: 'right'\n      },\n      {\n        id: 'to',\n        label: 'To',\n        minWidth: 70,\n        align: 'right'\n      },\n      {\n        id: 'ownership_length',\n        label: 'Ownership Length (Quarters)',\n        minWidth: 70,\n        align: 'right'\n      },\n    ];\n\n    const handleChangePage = (event, newPage) => {\n      const tableInfo = this.state.tableInfo;\n      tableInfo.page = newPage;\n      this.setState({ tableInfo });\n    };\n\n    const handleChangeRowsPerPage = event => {\n      const tableInfo = this.state.tableInfo;\n      tableInfo.page = 0;\n      tableInfo.rowsPerPage = +event.target.value; // number conversion, unary '+'\n      this.setState({ tableInfo });\n    };\n\n    const rowsPerPage = this.state.tableInfo.rowsPerPage;\n    const page = this.state.tableInfo.page;\n    const loading = this.state.loading;\n    const holdings = _.filter(this.state.holdings, holding => holding['name'] && holding['cusip6'] && holding['cusip9']);\n    const cik = this.state.cik;\n    let avgOwnership;\n\n    if(holdings && holdings.length) {\n      avgOwnership = _.reduce(_.map(holdings, holding => holding.ownership_length), (acc, num) => {\n        return acc + num;\n      }, 0) / holdings.length;\n      avgOwnership = Math.round(avgOwnership * 1000) / 1000;\n    }\n\n    const filer_name = _.get(this.state, 'filer_names.0', null);\n    \n    return (\n      <>\n        \n          { loading? <><div style={{ minHeight: '30vh' }}></div>One moment please ...</> :null}\n          { (!loading && (!holdings || !holdings.length)) ? <><div style={{ minHeight: '30vh' }}></div>{ `No results for requested CIK \"${cik}\"!` }</> :null}\n        { (!holdings || !holdings.length)? null :\n        <>\n        <div style={{ display: 'block', width: '100%', textAlign: 'center', fontFamily: 'raleway'}}>\n          <h1>{ filer_name }</h1>\n        </div>\n        <div style={{ display: 'block', fontFamily: 'Courier New', textAlign: 'left', margin: '10px' }}>\n          <strong>Average length of ownership</strong>: { avgOwnership } quarters ({avgOwnership / 4} years)\n        </div>\n        <Paper className={classes.root} style={{ display: 'block', width: '100%' }}>\n          <div className={classes.tableWrapper}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                  {columns.map(column => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth, fontFamily: 'Courier New' }}\n                    >\n                      <strong>{column.label}</strong>\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {!holdings? null : holdings.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                  return (\n                    <TableRow hover tabIndex={-1} key={row.key}>\n                      {columns.map(column => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align} style={{ fontFamily: 'Courier New' }}>\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </div>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 50, 100]}\n            component=\"div\"\n            count={!holdings? 0 :holdings.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n        </>\n        }\n      </>\n    );\n  }\n\n};\n","import React from 'react';\nimport queryString from 'query-string';\nimport _ from 'lodash';\n\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\n// need CUSIP\n\n\nexport class HoldersView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n\n    // get Stitch controller from props\n    this.stitch = this.props.stitch;\n\n    // bind this to all non-React functions\n    this._getHolders = this._getHolders.bind(this);\n\n    const initialCusipFromPath = _.get(this.props, 'match.params.cusip', null);\n    const initialCusipFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'cusip', null);\n    const initialCusip = initialCusipFromPath? initialCusipFromPath :initialCusipFromQuery;\n\n    // initialize state\n    this.state = {\n      'holders': null,\n      'cusip': initialCusip,\n      'loading': true,\n      'tableInfo': {\n        'page': 0,\n        'rowsPerPage': 10\n      },\n    };\n  }\n\n  componentDidMount() {\n    const cusip = this.state.cusip;\n\n    if(this.props.stitchInitialized && cusip) {\n      this._getHolders(cusip);\n    }\n\n    else if(this.props.stitchInitialized && this.state.loading) {\n      this.setState({ loading: false });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.stitchInitialized) {\n      const cusipFromPath = _.get(this.props, 'match.params.cusip', null);\n      const oldCusipFromPath = _.get(prevProps, 'match.params.cusip', null);\n      const cusipFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'cusip', null);\n      const oldCusipFromQuery = _.get(queryString.parse(_.get(prevProps, 'location.search', null)), 'cusip', null);\n\n      if(cusipFromPath || cusipFromQuery) {\n        let cusip, oldCusip;\n\n        if(cusipFromPath) {\n          cusip = cusipFromPath;\n          oldCusip = oldCusipFromPath;\n        }\n\n        else if(cusipFromQuery) {\n          cusip = cusipFromQuery;\n          oldCusip = oldCusipFromQuery;\n        }\n\n        if(cusip !== oldCusip) {\n          this._getHolders(cusip);\n        }\n      }\n    }\n  }\n\n  _getHolders(cusip) {\n    const strCusip = cusip.toString();\n\n    if(strCusip.length >= 6) {\n      const cusip6 = cusip.substr(0, 6);\n      this.stitch.callFunction('getHoldersForIssuer', [ cusip6 ])\n        .then(res => {\n          const holdings = _.get(res, 'data.holdings', null);\n          let modifiedHoldings;\n          \n          if(holdings) {\n            modifiedHoldings = _.map(holdings, (holding, index) => ({\n              'name': _.get(holding, 'filer_names.0', null),\n              'cik': _.get(holding, 'cik', null),\n              'cusip9': _.get(holding, 'cusip9', null),\n              'from': _.get(holding, 'from.year') + 'q' + _.get(holding, 'from.quarter'),\n              'to': _.get(holding, 'to.year') + 'q' + _.get(holding, 'to.quarter'),\n              'ownership_length': _.get(holding, 'ownership_length'),\n              'key': _.get(holding, 'cik', '') + index.toString()\n            }));\n          }\n\n          console.log(res);\n          this.setState({\n            'holders': modifiedHoldings,\n            'loading': false,\n            'issuer_names': _.get(res, 'data.issuer_names', null)\n          });\n        })\n        .catch(err => {\n          this.setState({\n            'loading': false,\n          });\n          console.error(err);\n        });\n    }\n\n    else {\n      this.setState({\n        'loading': false,\n        'cusip': strCusip,\n      });\n    }\n  }\n\n\n  render() {\n    const classes = makeStyles({\n      root: {\n        width: '100%',\n      },\n      tableWrapper: {\n        maxHeight: 440,\n        overflow: 'auto',\n      },\n    });\n\n    const columns = [\n      { id: 'name', label: 'Holder Name', minWidth: 170 },\n      /*{ id: 'cik', label: 'CIK', minWidth: 100 },\n      {\n        id: 'cusip9',\n        label: 'CUSIP9',\n        minWidth: 170,\n        format: value => value.toLocaleString(),\n      },*/\n      {\n        id: 'from',\n        label: 'From',\n        minWidth: 70,\n        format: value => value.toLocaleString(),\n        align: 'right'\n      },\n      {\n        id: 'to',\n        label: 'To',\n        minWidth: 70,\n        align: 'right'\n      },\n      {\n        id: 'ownership_length',\n        label: 'Ownership Length (Quarters)',\n        minWidth: 170,\n        align: 'right'\n      },\n    ];\n\n    const handleChangePage = (event, newPage) => {\n      const tableInfo = this.state.tableInfo;\n      tableInfo.page = newPage;\n      this.setState({ tableInfo });\n    };\n\n    const handleChangeRowsPerPage = event => {\n      const tableInfo = this.state.tableInfo;\n      tableInfo.page = 0;\n      tableInfo.rowsPerPage = +event.target.value; // number conversion, unary '+'\n      this.setState({ tableInfo });\n    };\n\n    const rowsPerPage = this.state.tableInfo.rowsPerPage;\n    const page = this.state.tableInfo.page;\n    const loading = this.state.loading;\n    const holders = _.filter(this.state.holders, holder => holder['name'] && holder['cik'] && holder['cusip9']);\n    const cusip = this.state.cusip;\n    let avgOwnership;\n\n    if(holders && holders.length) {\n      avgOwnership = _.reduce(_.map(holders, holder => holder.ownership_length), (acc, num) => {\n        return acc + num;\n      }, 0) / holders.length;\n      avgOwnership = Math.round(avgOwnership * 1000) / 1000;\n    }\n\n    const issuer_name = _.get(this.state, 'issuer_names.0', null);\n    \n    return (\n      <>\n        \n          { loading? <><div style={{ minHeight: '30vh' }}></div>One moment please ...</> :null}\n          { (!loading && (!holders || !holders.length)) ? <><div style={{ minHeight: '30vh' }}></div>{ `No results for requested CUSIP \"${cusip}\"!` }</> :null}\n        { (!holders || !holders.length)? null :\n        <>\n        <div style={{ display: 'block', width: '100%', textAlign: 'center', fontFamily: 'raleway'}}>\n          <h1>{ issuer_name }</h1>\n        </div>\n        <div style={{ display: 'block', fontFamily: 'Courier New', textAlign: 'left', margin: '10px' }}>\n          <strong>Average length of ownership</strong>: { avgOwnership } quarters ({avgOwnership / 4} years)\n        </div>\n        <Paper className={classes.root} style={{ display: 'block', width: '100%' }}>\n          <div className={classes.tableWrapper}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                  {columns.map(column => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth, fontFamily: 'Courier New' }}\n                    >\n                      <strong>{column.label}</strong>\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {!holders? null : holders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                  return (\n                    <TableRow hover tabIndex={-1} key={row.key}>\n                      {columns.map(column => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align} style={{ fontFamily: 'Courier New' }}>\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </div>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 50, 100]}\n            component=\"div\"\n            count={!holders? 0 :holders.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n        </>\n        }\n      </>\n    );\n  }\n\n};\n","import React from 'react';\n//import _ from 'lodash';\n\nimport { StitchController } from '../';\nimport { Input, Button, ButtonGroup } from '@material-ui/core';\n\nexport class UserInput extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      loading: true,  // is the UI still loading?\n      status: 0,      // zero means OK, non-zero means NOT OK\n      inputValue: \"\"\n    };\n\n    // instantiate Stitch controller\n    this.stitch = new StitchController();\n    \n    // bind this for non-React functions\n    this._handleInputChange = this._handleInputChange.bind(this);\n  }\n\n  _handleInputChange(event) {\n    this.setState({ inputValue: event.target.value });\n  }\n\n  _handleClick(name) {\n    // clean up the input here if you want\n    const cleanInput = this.state.inputValue;\n\n    // TODO : add support for the checkbox (choosing the current holders / positions only)\n    /*const options = {\n      currentOnly: false\n    };*/\n\n    switch(name) {\n      case 'company':\n        this.stitch.callFunction('searchForCompany', [cleanInput])\n        .then(searchResult => {\n          console.log(searchResult);\n          return {\n            'companySearchResult': searchResult\n          };\n        })\n          /*\n          // TODO : check status of result\n          const cik = _.get(searchResult, 'data.cik', null);\n\n          return this.stitch.callFunction('getAverageTimePositionsHeldForFund', [cik, options])\n          .then(avgPosResult => {\n            return this.stitch.callFunction('getPositionsForFund', [cik, options])\n            .then(posForFundResult => {\n\n              return {\n                'searchForFund': searchResult,\n                'getAverageTimePositionsHeldForFund': avgPosResult,\n                'getPositionsForFund': posForFundResult,\n              };\n            })\n            .catch(err => {\n              console.log(err);\n              return {};\n            });\n          })\n        })\n        .then(res => {\n          console.log(res);\n          return this.props.handleSubmission(res);\n        })*/\n        .catch(err => {\n          console.log(err);\n        });\n        break;\n\n      case 'symbol':\n        this.stitch.callFunction('searchForSymbol', [cleanInput])\n        .then(searchResult => {\n          console.log(searchResult);\n          return {\n            'symbolSearchResult': searchResult\n          };\n        })\n          /*\n          // TODO : check status of result\n          const cusip = _.get(searchResult, 'data.cusip', null);\n          \n          return this.stitch.callFunction('getHoldersForTicker', [cusip, options])\n          .then(results => {\n            return {\n              'searchForCompany': searchResult,\n              'getHoldersForTicker': results\n            };\n          })\n          .catch(err => {\n            console.log(err);\n          })\n        })\n        .then(res => {\n          console.log(res);\n          return this.props.handleSubmission(res);\n        })*/\n        .catch(err => {\n          console.log(err);\n        });\n        break;\n\n      default:\n    }\n  }\n\n  componentDidMount() {\n    // initialize Stitch controller\n    this.stitch.init()\n    .then(() => {\n      this.setState({ loading: false, status: 0 });  // no longer loading\n    })\n    .catch(err => {\n      console.log(err);\n      this.setState({ loading: false, status: -1 });  // no longer loading, but bad status\n    });\n  }\n\n  render() {\n    return (\n      <div style={ styles.container }>\n        <Input\n          disabled={ this.state.loading }\n          error={ this.state.error }\n          placeholder=\"Search by ...\"\n          style={ styles.input }\n          value={ this.state.inputValue }\n          onChange={ this._handleInputChange }\n        />\n        <ButtonGroup>\n          <Button\n            disabled={ this.state.loading }\n            onClick={ () => this._handleClick('company') }\n          >\n            Company\n          </Button>\n          <Button\n            disabled={ this.state.loading }\n            onClick={ () => this._handleClick('symbol') }\n          >\n            Symbol\n          </Button>\n        </ButtonGroup>\n      </div>\n    );\n  }\n};\n\nconst styles = {\n  container: {\n    \n  },\n  button: {\n\n  },\n  input: {\n    margin: 5,\n  }\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\n\nexport class ResultsGetHoldersForTicker extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      column: null,\n      direction: null,\n      data: this.props.results.data,\n      rawData: this.props.results.data\n    };\n  }\n\n  // update raw results from props\n  componentDidUpdate() {\n    if(!_.isEqual(this.props.results.data, this.state.rawData)) {\n      this.setState({\n        data: this.props.results.data,\n        rawData: this.props.results.data,\n      });\n    } \n  }\n\n  _handleSort = (clickedColumn) => () => {\n    const { column, direction } = this.state;\n\n    // sort by ascending if not clicked\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        direction: 'ascending',\n        data: _.sortBy(this.state.data, [ clickedColumn ])\n      });\n    }\n\n    // if clicked, toggle sort direction\n    else {\n      this.setState({\n        direction: direction === 'ascending' ? 'descending' : 'ascending',\n        data: this.state.data.reverse()\n      });\n    }\n  }\n\n  render() {\n    const { column, direction, data } = this.state;\n    const columnNames = [ 'name', 'cik', 'from', 'to', 'quarters' ];\n    const columnNameDisplay = {\n      'name': 'Name',\n      'cik': 'CIK',\n      'from': 'From',\n      'to': 'To',\n      'quarters': 'Quarters'\n    };\n\n    return (\n      // name the div here? TODO\n      <div style={ styles.container }>\n        <Table>\n          <TableHead>\n            <TableRow>\n              {\n                _.map(columnNames, name => (\n                  <TableCell\n                    key={ name }\n                    sorted={ column === name? direction :null }\n                    onClick={ this._handleSort(name) }\n                  >\n                    { columnNameDisplay[name] }\n                  </TableCell>\n                ))\n              }\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              _.map(data, ({ name, cik, from, to, quarters }, idx) => (\n                  <TableRow key={ _.join([cik, '-', idx], '') }>\n                    <TableCell><code>{ name }</code></TableCell>\n                    <TableCell><code>{ cik }</code></TableCell>\n                    <TableCell><code>{ from }</code></TableCell>\n                    <TableCell><code>{ to }</code></TableCell>\n                    <TableCell><code>{ quarters }</code></TableCell>\n                  </TableRow>\n              ))\n            }\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n\n};\n\nconst styles = {\n  container: {\n    margin: 20\n  }\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\n\nexport class ResultsGetPositionsForFund extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      column: null,\n      direction: null,\n      data: this.props.results.data.filerSearch.data.results.data.holdings,\n      rawResults: this.props.results.data.filerSearch.data.results.data.holdings,\n    };\n  }\n\n  // update raw results from props\n  componentDidUpdate() {\n    if(!_.isEqual(this.props.results, this.state.rawResults)) {\n      this.setState({\n        data: this.props.results.data,\n        rawResults: this.props.results,\n      });\n    } \n  }\n\n  _handleSort = (clickedColumn) => () => {\n    const { column, direction } = this.state;\n\n    // sort by ascending if not clicked\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        direction: 'ascending',\n        data: _.sortBy(this.state.data, [ clickedColumn ])\n      });\n    }\n\n    // if clicked, toggle sort direction\n    else {\n      this.setState({\n        direction: direction === 'ascending' ? 'descending' : 'ascending',\n        data: this.state.data.reverse()\n      });\n    }\n  }\n\n  render() {\n    const { column, direction, data } = this.state;\n    const columnNames = [ 'name', 'cusip', 'from', 'to', 'quarters' ];\n    const columnNameDisplay = {\n      'name': 'Name',\n      'cusip': 'CUSIP',\n      'from': 'From',\n      'to': 'To',\n      'quarters': 'Quarters'\n    };\n\n    return (\n      // name the div here? TODO\n      <div style={ styles.container }>\n        <Table>\n          <TableHead>\n            <TableRow>\n              {\n                _.map(columnNames, name => (\n                  <TableCell\n                    key={ name }\n                    sorted={ column === name? direction :null }\n                    onClick={ this._handleSort(name) }\n                  >\n                    { columnNameDisplay[name] }\n                  </TableCell>\n                ))\n              }\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              _.map(data, ({ names, cusip6, from, to, ownership_length }, idx) => (\n                  <TableRow key={ _.join([cusip6, '-', idx], '') }>\n                    <TableCell><code>{ names[0] }</code></TableCell>\n                    <TableCell><code>{ cusip6 }</code></TableCell>\n                    <TableCell><code>{ from.year }q{ from.quarter }</code></TableCell>\n                    <TableCell><code>{ to.year }q{ to.quarter }</code></TableCell>\n                    <TableCell><code>{ ownership_length}</code></TableCell>\n                  </TableRow>\n              ))\n            }\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n\n};\n\nconst styles = {\n  container: {\n    margin: 20\n  }\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow\n} from '@material-ui/core';\n\nexport class ResultsGetAverageTimePositionsHeldForFund extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: this.props.results.data,\n      rawData: this.props.results.data,\n    };\n  }\n\n  // update raw results from props\n  componentDidUpdate() {\n    if(!_.isEqual(this.props.results.data, this.state.rawData)) {\n      this.setState({\n        data: this.props.results.data,\n        rawData: this.props.results.data,\n      });\n    } \n  }\n\n  render() {\n    const { data } = this.state;\n\n    return (\n      <div style={ styles.container }>\n        <Table>\n          <TableBody>\n            <TableRow key='total'>\n              <TableCell>\n                <strong>Total Positions Found</strong>\n              </TableCell>\n              <TableCell>\n                <code>{ data.positionsCount }</code>\n              </TableCell>\n            </TableRow>\n            <TableRow key='year'>\n              <TableCell>\n                <strong>Average Time Held of All Positions (Years)</strong>\n              </TableCell>\n              <TableCell>\n                <code>{ Math.round(data.averageLengthOfStockOwnership.years * 1000) / 1000 }</code>\n              </TableCell>\n            </TableRow>\n            <TableRow key='quarters'>\n              <TableCell>\n                <strong>Average Time Held of All Positions (Quarters)</strong>\n              </TableCell>\n              <TableCell>\n                <code>{ Math.round(data.averageLengthOfStockOwnership.quarters * 1000) / 1000 }</code>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n\n};\n\nconst styles = {\n  container: {\n    margin: 20\n  }\n};\n","import React from 'react';\nimport _ from 'lodash';\n\n// import individual results formatters\nimport { ResultsGetHoldersForTicker } from './functions/ResultsGetHoldersForTicker';\nimport { ResultsGetPositionsForFund } from './functions/ResultsGetPositionsForFund';\nimport { ResultsGetAverageTimePositionsHeldForFund } from './functions/ResultsGetAverageTimePositionsHeldForFund';\n\nexport class ResultsFormatter extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // define function results from action controller in state\n    this.state = {\n        results: this.props.results,\n    };\n  }\n\n  componentDidUpdate() {\n    if(!_.isEqual(this.props.results, this.state.results)) {\n      this.setState({\n        results: this.props.results,\n      });\n    } \n  }\n\n  render() {\n    const { results } = this.state;\n\n    return (\n      <div style={ styles.container }>\n        {\n          !_.get(results, 'companySearchResult', -1)?\n            <>Showing results for fund <strong><code>\"{ _.get(results, 'companySearchResult.data.filerSearch.data.count', '') }\" (CIK : { _.get(results, 'companySearchResult.data.filerSearch.data.count', '') })</code></strong></>\n          :null\n        }\n\n        {\n          !_.get(results, 'searchForCompany.status', -1)?\n            <>Showing results for company <strong><code>\"{ _.get(results, 'searchForCompany.data.name', '') }\" (CUSIP : { _.get(results, 'searchForCompany.data.cusip', '') })</code></strong></>\n          :null\n        }\n\n        {\n          // position average information\n          !_.get(results, 'getAverageTimePositionsHeldForFund.status', -1)?\n            <ResultsGetAverageTimePositionsHeldForFund\n              results={ results.getAverageTimePositionsHeldForFund }\n            />\n          :null\n        }\n        \n        {\n          // fund positions information\n          !_.get(results, 'companySearchResult.status', -1)?\n            <ResultsGetPositionsForFund\n              results={ results.companySearchResult }\n            />\n          :null\n        }\n        \n        {\n          // company holders information\n          !_.get(results, 'symbolSearchResult.status', -1)?\n            <ResultsGetHoldersForTicker\n              results={ results.symbolSearchResult }\n            />\n          :null\n        }\n      </div>\n    );\n  }\n};\n\nconst styles = {\n  container: {\n    margin: 20\n  }\n};\n","import React from 'react';\n\n// main components for user interface\nimport { UserInput } from './UserInput';\nimport { ResultsFormatter } from './ResultsFormatter';\n\nexport class UserInterface extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // initialize state\n    this.state = {\n      submissionResults: null  // to store submission results for display in child component(s)\n    };\n    \n    // bind non-React functions\n    this._handleSubmission = this._handleSubmission.bind(this);\n  }\n\n  // handle the submission of the child UserInput component\n  _handleSubmission(results) {\n    this.setState({ submissionResults: results });\n  }\n\n  componentDidMount() {\n    \n  }\n  \n  render() {\n    return (<div>\n      <UserInput\n        handleSubmission={ this._handleSubmission } // pass down submission handler to store results\n      />\n      <br/>\n      <ResultsFormatter\n        results={ this.state.submissionResults? this.state.submissionResults :undefined }\n      />\n    </div>);\n  }\n};\n","import { UserInterface } from './components/UserInterface';\nimport { UserInput } from './components/UserInput';\nimport { ResultsFormatter } from './components/ResultsFormatter';\n\nconst {\n  Stitch,\n  RemoteMongoClient,\n  UserApiKeyCredential\n} = require('mongodb-stitch-browser-sdk');\n\nexport class StitchController {\n  constructor() {\n    this.db = {}; // initialize database object\n    this.sc = {}; // initialize service client object\n  }\n\n  // initialize the controller\n  async init() {\n    try {\n      this.initClientForAppId(process.env.REACT_APP_STITCH_APP_ID);                            // initializes the client\n      await this.loginUsingApiKey(process.env.REACT_APP_STITCH_API_SECRET);                    // authorizes the client for use\n      const mongodb = await this.initServiceClient(process.env.REACT_APP_STITCH_SERVICE_NAME); // initializes MongoDB service client (for database access)\n      await this.initDBFromServiceClient('filings', mongodb);                                  // initializes test db for access\n      return 0;\n    }\n    catch(err) {\n      console.error(err);\n      return err;\n    }\n  }\n\n  // returns client \n  initClientForAppId(appId) {\n    this.client = Stitch.initializeDefaultAppClient(appId);\n  }\n\n  // returns a Promise (of user info)\n  loginUsingApiKey(key) {\n    const credential = new UserApiKeyCredential(process.env.REACT_APP_STITCH_API_SECRET);\n    return this.client.auth.loginWithCredential(credential)\n      .then(user => {\n        console.log(`Logged into Stitch client as API user (server) with id: ${user.id}`);\n        return user;\n      })\n      .catch(err => {\n        console.error(err);\n        return err;\n      });\n  }\n\n  // returns a Promise (of service client)\n  async initServiceClient(name) {\n    this.sc[name] = await this.client.getServiceClient(\n      RemoteMongoClient.factory,\n      name\n    );\n\n    return this.sc[name];\n  }\n\n  // returns Promise (of db client)\n  async initDBFromServiceClient(name, sc) {\n    this.db[name] = await sc.db(name);\n\n    return this.db[name];\n  }\n\n  callFunction(name, args) {\n    return this.client.callFunction(name, args)\n      .catch(err => {\n        console.error(err);\n        return err;\n      });\n  }\n};\n\n\nexport const StitchComponents = {\n  UserInterface,\n  UserInput,\n  ResultsFormatter\n};\n","import React from 'react';\nimport './App.css';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n//  Link\n} from \"react-router-dom\";\n\n/*\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\n*/\n\n// need this for the Stitch UI\n//import { StitchComponents } from './stitch';\n\nimport { Search } from './Search';\nimport { SearchResults } from './SearchResults';\nimport { HoldingsView } from './HoldingsView';\nimport { HoldersView } from './HoldersView';\nimport { StitchController } from './stitch';\n\n//import Logo from './media/assets/images/gghc.png';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // initialize state\n    this.state = {\n      window: {\n        width: 0,\n        height: 0\n      },\n      'stitchInitialized': false,\n      'loading': true\n    };\n\n    // intantiate Stitch controller\n    this.stitch = new StitchController();\n\n    // bind non-React functions\n    this._updateWindowDimensions = this._updateWindowDimensions.bind(this);\n  }\n\n  _updateWindowDimensions() {\n    this.setState({ window: { width: window.innerWidth, height: window.innerHeight } });\n  }\n\n  componentDidMount() {\n    this._updateWindowDimensions();\n    window.addEventListener('resize', this._updateWindowDimensions);\n\n    console.log('Initializing Stitch ...');\n    this.stitch.init()\n    .then(err => {\n      if(!err) {\n        console.log('Stitch initialization complete!');\n        this.setState({\n          'stitchInitialized': true,\n          'loading': false,\n        });\n      }\n      else {\n        console.error('Stitch initialization error:', err);\n        this.setState({\n          'stitchInitialized': false,\n          'loading': false,\n        });\n      }\n    })\n    .catch(err => {\n      console.error('Stitch initialization error:', err);\n      this.setState({\n        'stitchInitialized': false,\n        'loading': false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this._updateWindowDimensions);\n  }\n\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL} >\n        <div className=\"App\">\n          {/*<div className=\"App-header\">\n            <h1>Holdings Analysis</h1>\n          </div>*/}\n\n          <div className=\"App-body\">\n            { !this.state.stitchInitialized && !this.state.loading? \"Error connecting to MongoDB Stitch!\" :null }\n            { !this.state.stitchInitialized && this.state.loading? <><div style={{ minHeight: '30vh' }}></div>Connecting to MongoDB Stitch server ...</>:<>\n            <Search />\n            <Switch>\n              <Route\n                path='/search/:search?'\n                render={\n                  (props) =>  <SearchResults {...props}\n                                stitch={ this.stitch }\n                                stitchInitialized={ this.state.stitchInitialized }\n                              />\n                }\n              />\n              <Route\n                path='/holdings/:cik?'\n                render={\n                  (props) =>  <HoldingsView {...props}\n                                stitch={ this.stitch }\n                                stitchInitialized={ this.state.stitchInitialized }\n                              />\n                }\n              />\n              <Route\n                path='/holders/:cusip?'\n                render={\n                  (props) =>  <HoldersView {...props}\n                                stitch={ this.stitch }\n                                stitchInitialized={ this.state.stitchInitialized }\n                              />\n                }\n              />\n            </Switch>\n            </>}\n          </div>\n\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
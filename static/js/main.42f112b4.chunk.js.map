{"version":3,"sources":["Search.js","SearchResults.js","HoldingsView.js","HoldersView.js","stitch/components/UserInput.js","stitch/components/functions/ResultsGetHoldersForTicker.js","stitch/components/functions/ResultsGetPositionsForFund.js","stitch/components/functions/ResultsGetAverageTimePositionsHeldForFund.js","stitch/components/ResultsFormatter.js","stitch/components/UserInterface.js","stitch/index.js","App.js","serviceWorker.js","index.js"],"names":["ColorButton","withStyles","theme","root","color","backgroundColor","blue","Button","styles","position","margin","textAlign","justifyContent","width","minWidth","display","top","transform","Search","props","state","go","location","value","_handleSearch","bind","_handleChange","event","this","setState","target","q","parsedQuery","qs","queryString","stringify","newRedirect","redirect","console","log","style","container","onSubmit","to","TextField","onChange","label","variant","type","textField","fullWidth","onClick","button","React","Component","SearchResults","stitch","_searchCompany","_searchSymbol","initialSearchFromQuery","_","get","parse","fromSearch","stitchInitialized","searchQuery","loading","prevProps","search","oldSearch","oldFromSearch","loadingCompanyResults","callFunction","then","res","data","filerSearch","status","error","message","issuerSearch","filerResults","issuerResults","filerData","issuerData","count","map","results","issuer","name","cusip6","filer","cik","holders","reduce","acc","issuerResult","newAcc","issuerName","filers","filerResult","filerName","companyResults","merge","companyResultsValues","values","length","company","first","companyKeys","keys","loc","toString","id","newQuery","catch","err","loadingSymbolResults","symbolResults","symbolName","holdersView","holdingsView","holdings","symbol","minHeight","isEmpty","val","k","item","key","concat","bottom","TablePaginationActions","classes","makeStyles","flexShrink","marginLeft","spacing","useStyles1","useTheme","page","rowsPerPage","onChangePage","className","IconButton","disabled","aria-label","direction","Math","ceil","max","desc","a","b","orderBy","EnhancedTableHead","order","onRequestSort","headCells","TableHead","TableRow","headCell","TableCell","align","fontFamily","padding","disablePadding","sortDirection","TableSortLabel","active","property","HoldingsView","_getHoldings","initialCikFromPath","initialCikFromQuery","initialCik","autoRedir","query","oldCik","cikFromPath","oldCikFromPath","cikFromQuery","oldCikFromQuery","checked","strCik","padStart","modifiedHoldings","holding","index","tableWrapper","maxHeight","overflow","handleChangePage","newPage","tableInfo","columns","format","toLocaleString","date","Date","currentYear","getFullYear","currentQuarter","getMonth","currentOnly","filter","holdingYear","parseInt","substring","holdingQuarter","abs","filterValue","filterValueLower","lowerCase","colKeys","column","slimHolding","pick","includes","some","avgOwnership","ownership_length","num","round","filer_name","textDecoration","Paper","Table","size","stickyHeader","isDesc","TableBody","array","cmp","stabilizedThis","el","sort","stableSort","getSorting","slice","row","hover","tabIndex","TableFooter","colSpan","placeholder","Checkbox","TablePagination","rowsPerPageOptions","component","onChangeRowsPerPage","ActionsComponent","HoldersView","_getHolders","initialCusipFromPath","initialCusipFromQuery","initialCusip","cusip","oldCusip","cusipFromPath","oldCusipFromPath","cusipFromQuery","oldCusipFromQuery","strCusip","substr","holder","holderYear","holderQuarter","slimHolder","issuer_name","flexDirection","UserInput","inputValue","StitchController","_handleInputChange","cleanInput","searchResult","init","Input","input","ButtonGroup","_handleClick","ResultsGetHoldersForTicker","_handleSort","clickedColumn","sortBy","reverse","rawData","isEqual","columnNameDisplay","sorted","idx","from","quarters","join","ResultsGetPositionsForFund","rawResults","names","year","quarter","ResultsGetAverageTimePositionsHeldForFund","positionsCount","averageLengthOfStockOwnership","years","ResultsFormatter","getAverageTimePositionsHeldForFund","companySearchResult","symbolSearchResult","require","Stitch","RemoteMongoClient","UserApiKeyCredential","db","sc","initClientForAppId","process","loginUsingApiKey","initServiceClient","mongodb","initDBFromServiceClient","appId","client","initializeDefaultAppClient","credential","auth","loginWithCredential","user","getServiceClient","factory","args","App","window","height","_updateWindowDimensions","_authorize","innerWidth","innerHeight","addEventListener","localStorage","getItem","removeEventListener","pw","bcrypt","compare","alert","setItem","authorized","zIndex","left","path","exact","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.42f112b4.chunk.js","sourcesContent":["import React from 'react';\n\nimport {\n  Redirect\n} from 'react-router-dom';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport { blue } from '@material-ui/core/colors';\n\nimport queryString from 'query-string';\n\nconst ColorButton = withStyles(theme => ({\n  root: {\n    color: 'white',\n    backgroundColor: blue[500],\n    '&:hover': {\n      backgroundColor: blue[700],\n    },\n  },\n}))(Button);\n\nconst styles = {\n  'container': {\n    position: 'relative',\n    margin: '10px',\n    textAlign: 'center',\n    justifyContent: 'center',\n  },\n  'textField': {\n    margin: '5px',\n    width: '50%',\n    minWidth: '300px',\n    display: 'inline-block',\n  },\n  'button': {\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    display: 'inline-block',\n    //height: '100%',\n  }\n};\n\nexport class Search extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      'redirect': {\n        go: false,\n        location: '/',\n      },\n      value: ''\n    };\n\n    this._handleSearch = this._handleSearch.bind(this);\n    this._handleChange = this._handleChange.bind(this);\n  }\n\n  _handleChange(event) {\n    this.setState({\n      'value': event.target.value\n    });  \n  }\n\n  _handleSearch(q) {\n    const parsedQuery = {\n      'q': this.state.value,\n      'fromSearch': true\n    };\n\n    const qs = queryString.stringify(parsedQuery);\n\n    let newRedirect = { ...this.state.redirect };\n    newRedirect.location = '/search' + (qs? '?' + qs :'');\n    console.log(newRedirect);\n    newRedirect.go = true;\n\n    this.setState({ redirect: newRedirect });  \n  }\n\n  render() {\n    const redirect = this.state.redirect.go;\n    const location = this.state.redirect.location;\n\n    return (<div style={ styles.container }>\n      <form onSubmit={ this._handleSearch }>\n      { redirect? <Redirect to={ location } /> :null }\n      <TextField\n        onChange={this._handleChange}\n        label='Search query'\n        variant='outlined'\n        type='search'\n        style={ styles.textField }\n        fullWidth\n      />\n      <ColorButton variant='contained' onClick={ this._handleSearch } style={ styles.button }>\n        Search\n      </ColorButton>\n      </form>\n    </div>);\n  }\n\n};\n\n","import React from 'react';\nimport queryString from 'query-string';\nimport _ from 'lodash';\n\nimport { Link, Redirect } from 'react-router-dom';\n\nexport class SearchResults extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // get Stitch controller from props\n    this.stitch = this.props.stitch;\n\n    // bind this to all non-React functions\n    this._searchCompany = this._searchCompany.bind(this);\n    this._searchSymbol = this._searchSymbol.bind(this);\n\n    const initialSearchFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'q', null);\n    const fromSearch = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'fromSearch', false) === 'true'? true :false;\n    \n    this.state = {\n      'searchQuery': initialSearchFromQuery,\n      'companyResults': null,\n      'symbolResults': null,\n      'loading': true,\n      'loadingCompanyResults': false,\n      'loadingSymbolResults': false,\n      'redirect': {\n        go: false,\n        location: '/',\n      },\n      'fromSearch': fromSearch\n    };\n  }\n\n  componentDidMount() {\n    const stitchInitialized = this.props.stitchInitialized;\n    const searchQuery = this.state.searchQuery;\n\n    if(stitchInitialized && searchQuery) {\n      this._searchCompany(searchQuery);\n      this._searchSymbol(searchQuery);\n    }\n\n    if(stitchInitialized && !searchQuery && this.state.loading) {\n      this.setState({ loading: false });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const stitchInitialized = this.props.stitchInitialized;\n    const search = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'q', null);\n    const oldSearch = _.get(queryString.parse(_.get(prevProps, 'location.search', null)), 'q', null);\n\n    const fromSearch = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'fromSearch', false) === 'true'? true :false;\n    const oldFromSearch = _.get(queryString.parse(_.get(prevProps, 'location.search', null)), 'fromSearch', false) === 'true'? true :false;\n\n    \n\n    // clear old searches\n    if(search !== oldSearch) {\n      this.setState({\n        'searchQuery': search,\n        'companyResults': null,\n        'symbolResults': null\n      });\n    }\n\n    if(fromSearch !== oldFromSearch) {\n      this.setState({ 'fromSearch': fromSearch });\n    }\n\n    // perform new searches\n    if(stitchInitialized && search && search !== oldSearch) {\n      this._searchCompany(search);\n      this._searchSymbol(search);\n    }\n  }\n\n  _searchCompany(q) {\n    this.setState({ loading: true, loadingCompanyResults: true });\n    this.stitch.callFunction('searchForCompany', [ q ])\n      .then(res => {\n        if(res.data.filerSearch.status < 0) {\n          console.error(res.data.filerSearch.message);\n        }\n\n        if(res.data.issuerSearch.status < 0) {\n          console.error(res.data.issuerSearch.message);\n        }\n\n        const filerData = _.get(res, 'data.filerSearch.data', null);\n        const issuerData = _.get(res, 'data.issuerSearch.data', null);\n\n        let filerResults, issuerResults;\n\n        if(issuerData.count !== 1) {\n          issuerResults = _.map(issuerData.results, issuer => ({\n            name: _.get(issuer, 'names.0', null),\n            cusip6: _.get(issuer, 'cusip6', null),\n          }));\n        }\n\n        else {\n          issuerResults = [\n            {\n              name: _.get(issuerData, 'results.data.issuer_names.0', null),\n              cusip6: _.get(issuerData, 'results.data.issuer_cusip6', null),\n            }\n          ];\n        }\n\n        if(filerData.count !== 1) {\n          filerResults = _.map(filerData.results, filer => ({\n            name: _.get(filer, 'name', null),\n            cik: _.get(filer, 'cik', null),\n          }));\n        }\n\n        else {\n          filerResults = [\n            {\n              name: _.get(filerData, 'results.data.filer_names.0', null),\n              cik: _.get(filerData, 'results.data.filer_cik', null),\n            }\n          ];\n        }\n        \n        const holders = _.reduce(issuerResults, (acc, issuerResult) => {\n          const newAcc = acc;\n          const issuerName = _.get(issuerResult, 'name', null);\n          if(!newAcc[issuerName]) {\n            newAcc[issuerName] = {\n              'holders': _.get(issuerResult, 'cusip6', null)\n            };\n          }\n\n          else if(!newAcc[issuerName]['holders']) {\n            newAcc[issuerName]['holders'] = _.get(issuerResult, 'cusip6', null);\n          }\n\n          return newAcc;\n        }, {});\n\n        const filers = _.reduce(filerResults, (acc, filerResult) => {\n          const newAcc = acc;\n          const filerName = _.get(filerResult, 'name', null);\n          if(!newAcc[filerName]) {\n            newAcc[filerName] = {\n              'holdings': _.get(filerResult, 'cik', null)\n            };\n          }\n\n          else if(!newAcc[filerName]['holdings']) {\n            newAcc[filerName]['holdings'] = _.get(filerResult, 'cik', null);\n          }\n\n          return newAcc;\n        }, {});\n\n        const companyResults = _.merge(holders, filers);\n\n        const companyResultsValues = _.values(companyResults);\n\n        if(companyResultsValues.length === 1) {\n          const company = _.first(companyResultsValues);\n          const companyKeys = _.keys(company);\n\n          if(companyKeys.length === 1 && this.state.fromSearch) {\n            const loc = _.first(companyKeys).toString();\n            const id = _.get(company, loc).toString();\n\n            const newQuery = {\n              'autoRedir': true,\n              q\n            };\n\n            const qs = queryString.stringify(newQuery);\n\n            let newRedirect = { ...this.state.redirect };\n            newRedirect.location = '/' + loc + '/' + id + (qs? '?' + qs :'');\n            newRedirect.go = true;\n\n            this.setState({ redirect: newRedirect });  \n          }\n\n          else {\n            this.setState({ loading: false, loadingCompanyResults: false, companyResults });\n          }\n        }\n\n        else {\n          this.setState({ loading: false, loadingCompanyResults: false, companyResults });\n        }\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({ loading: false, loadingCompanyResults: false });\n      });\n  }\n\n  _searchSymbol(q) {\n    this.setState({ loading: true, loadingSymbolResults: true });\n    this.stitch.callFunction('searchForSymbol', [ q ])\n      .then(res => {\n        // no results\n        if(!res.status && !res.data) {\n          this.setState({ loading: false, symbolResults: null });\n        }\n\n        if(res.status < 0) {\n          console.error(res.message);\n        }\n\n        else {\n          const data = _.get(res, 'data', null);\n          const symbolName = _.get(data, 'symbol.symbol', null);\n          const holdersView = _.get(data, 'holdersView', null);\n          const holdingsView = _.get(data, 'holdingsView', null);\n          const holdings = holdingsView? {\n            'name': _.get(holdingsView, 'data.filer_names.0', null),\n            'cik': _.get(holdingsView, 'data.filer_cik', null),\n          } :null;\n          const holders = holdersView? {\n            'name': _.get(holdersView, 'data.issuer_names.0', null),\n            'cusip6': _.get(holdersView, 'data.issuer_cusip6', null),\n          } :null;\n\n\n          const name = holdings? holdings.name :(holders? holders.name :symbolName);\n\n          const symbolResults = {\n            name,\n            symbol: symbolName,\n            holdings: holdings? _.get(holdings, 'cik', null) :null,\n            holders: holders? _.get(holders, 'cusip6', null) :null,\n          };\n\n          if(symbolResults.holdings && !symbolResults.holders && this.state.fromSearch) {\n            const newQuery = {\n              'autoRedir': true,\n              q\n            };\n\n            const qs = queryString.stringify(newQuery);\n\n            let newRedirect = { ...this.state.redirect };\n            newRedirect.location = ('/holdings/' + symbolResults.holdings.toString() + (qs? '?' + qs :''));\n            newRedirect.go = true;\n\n            this.setState({ redirect: newRedirect });  \n          }\n          \n          else if(!symbolResults.holdings && symbolResults.holders && this.state.fromSearch) {\n            const newQuery = {\n              'autoRedir': true,\n              q\n            };\n\n            const qs = queryString.stringify(newQuery);\n\n            let newRedirect = { ...this.state.redirect };\n            newRedirect.location = ('/holders/' + symbolResults.holders.toString() + (qs? '?' + qs :''));\n            newRedirect.go = true;\n\n            this.setState({ redirect: newRedirect });  \n          }\n          \n          else {\n            this.setState({ loading: false, loadingSymbolResults: false, symbolResults });\n          }\n        }\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({ loading: false, loadingSymbolResults: false });\n      });\n  }\n\n  render() {\n    const loading = this.state.loading || this.state.loadingCompanyResults || this.state.loadingSymbolResults;\n    const companyResults = this.state.companyResults;\n    const symbolResults = this.state.symbolResults;\n    const searchQuery = this.state.searchQuery;\n\n    const redirect = this.state.redirect.go;\n    const location = this.state.redirect.location;\n\n    return (<div>\n      { redirect? <Redirect to={ location } /> :null }\n      { (!loading && !searchQuery)? <><div style={{ minHeight: '30vh' }}></div>{ `Please provide a search query.` }</> :null}\n      { (!loading && searchQuery && _.isEmpty(companyResults) && _.isEmpty(symbolResults))?\n        <>\n          <div style={{ minHeight: '30vh' }}></div>\n          { `No results for search query \"${searchQuery}\".` }\n        </> :null}\n      { (loading && searchQuery)? <><div style={{ minHeight: '30vh' }}></div>{ `One moment please ...` }</> :null}\n      { (!_.isEmpty(companyResults) && !loading)?\n      <div style={{ textAlign: 'left', margin: '10px' }}>\n        <h2>Company Results</h2>\n        <ul>\n          { \n            _.reduce(companyResults, (acc, val, k) => {\n              const item = <li key={ k.toString() }>\n                  <strong>{ k.toString() }</strong>\n                  { ' : ' }\n                  { !val.holders? null :\n                    <Link to={ '/holders/' + val.holders.toString() }>\n                      Holders\n                    </Link>\n                  }\n                  { val.holders && val.holdings? ' | ' :null}\n                  { !val.holdings? null :\n                    <Link to={ '/holdings/' + val.holdings.toString() }>\n                      Holdings\n                    </Link>\n                  }\n                  {!val.holders && !val.holdings? 'No holders or holdings views available.' :null}\n                </li>;\n\n              return _.concat(acc, item);\n            }, [])\n          }\n        </ul>\n      </div>\n      :null }\n      { (symbolResults && (!_.isEmpty(symbolResults.holdings) || !_.isEmpty(symbolResults.holders)) && !loading)?\n      <div style={{ textAlign: 'left', margin: '10px' }}>\n        <h2>Symbol Results</h2>\n        <ul>\n          { (() => {\n              const name = _.get(symbolResults, 'name', null);\n              const symbol = _.get(symbolResults, 'symbol', null);\n              const holders = _.get(symbolResults, 'holders', null);\n              const holdings = _.get(symbolResults, 'holdings', null);\n\n              return <li key={ name }>\n                <strong>{ name + ' ( ' + symbol + ' )' }</strong>\n                { ' : ' }\n                { !holders? null :\n                  <Link to={ '/holders/' + holders }>\n                    Holders\n                  </Link>\n                }\n                {holders && holdings? ' | ' :null}\n                { !holdings? null :\n                  <Link to={ '/holdings/' + holdings }>\n                    Holdings\n                  </Link>\n                }\n                {!holders && !holdings? 'No holders or holdings views available.' :null}\n              </li>;\n            })()\n          }\n        </ul>\n      </div>\n      :null}\n    </div>);\n  }\n\n};\n","import React from 'react';\nimport queryString from 'query-string';\nimport _ from 'lodash';\n\nimport { Link } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TextField from '@material-ui/core/TextField';\n\n// need CIK\n\nconst styles = {\n  'textField': {\n    margin: '5px',\n    width: '30%',\n    minWidth: '300px',\n    display: 'inline-block',\n    position: '',\n    bottom: 0\n  },\n};\n\nfunction TablePaginationActions(props) {\n    const useStyles1 = makeStyles(theme => ({\n      root: {\n        flexShrink: 0,\n        marginLeft: theme.spacing(2.5),\n      },\n    }));\n    \n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\n// need CUSIP\nfunction EnhancedTableHead(props) {\n  const { order, orderBy, onRequestSort, headCells } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.align}\n            style={{ minWidth: headCell.minWidth, fontFamily: 'Courier New' }}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={order}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {/*orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null*/}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  headCells: PropTypes.object.isRequired,\n};\n\nexport class HoldingsView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n\n    // get Stitch controller from props\n    this.stitch = this.props.stitch;\n\n    // bind this to all non-React functions\n    this._getHoldings = this._getHoldings.bind(this);\n    this._handleChange = this._handleChange.bind(this);\n\n    const initialCikFromPath = _.get(this.props, 'match.params.cik', null);\n    const initialCikFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'cik', null);\n    const initialCik = initialCikFromPath? initialCikFromPath :initialCikFromQuery;\n    const autoRedir = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'autoRedir', false);\n    const query = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'q', null);\n\n    // initialize state\n    this.state = {\n      'holdings': null,\n      'cik': initialCik,\n      'loading': true,\n      'tableInfo': {\n        'page': 0,\n        'rowsPerPage': 10\n      },\n      'currentOnly': false,\n      'order': 'desc',\n      'orderBy': 'ownership_length',\n      'filter': '',\n      'autoRedir': autoRedir,\n      'query': query,\n    };\n  }\n\n  componentDidMount() {\n    const cik = this.state.cik;\n\n    if(this.props.stitchInitialized && cik) {\n      this._getHoldings(cik);\n    }\n\n    else if(this.props.stitchInitialized && this.state.loading) {\n      this.setState({ loading: false });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.stitchInitialized) {\n      const cikFromPath = _.get(this.props, 'match.params.cik', null);\n      const oldCikFromPath = _.get(prevProps, 'match.params.cik', null);\n      const cikFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'cik', null);\n      const oldCikFromQuery = _.get(queryString.parse(_.get(prevProps, 'location.search', null)), 'cik', null);\n\n      if(cikFromPath || cikFromQuery) {\n        let cik, oldCik;\n\n        if(cikFromPath) {\n          cik = cikFromPath;\n          oldCik = oldCikFromPath;\n        }\n\n        else if(cikFromQuery) {\n          cik = cikFromQuery;\n          oldCik = oldCikFromQuery;\n        }\n\n        if(cik !== oldCik) {\n          this._getHoldings(cik);\n        }\n      }\n    }\n  }\n\n  _handleChange(event, type) {\n    if(type === 'current_only') {\n      this.setState({\n        'currentOnly': event.target.checked\n      });  \n    }\n\n    if(type === 'filter') {\n      this.setState({\n        'filter': event.target.value\n      });\n    }\n  }\n\n  _getHoldings(cik) {\n    const strCik = cik.toString();\n\n    if(strCik.length <= 10) {\n      const cik = strCik.padStart(10, '0');\n      this.stitch.callFunction('getHoldingsForFiler', [ cik ])\n        .then(res => {\n          const holdings = _.get(res, 'data.holdings', null);\n          let modifiedHoldings;\n          \n          if(holdings) {\n            modifiedHoldings = _.map(holdings, (holding, index) => ({\n              'name': _.get(holding, 'issuer_names.0', null),\n              'cusip6': _.get(holding, 'cusip6', null),\n              'cusip9': _.get(holding, 'cusip9', null),\n              'from': _.get(holding, 'from.year') + 'q' + _.get(holding, 'from.quarter'),\n              'to': _.get(holding, 'to.year') + 'q' + _.get(holding, 'to.quarter'),\n              'ownership_length': _.get(holding, 'ownership_length'),\n              'key': _.get(holding, 'cusip6', '') + index.toString()\n            }));\n          }\n\n          if(_.isEmpty(modifiedHoldings)) {\n            modifiedHoldings = null;\n          }\n\n          this.setState({\n            'holdings': modifiedHoldings,\n            'loading': false,\n            'filer_names': _.get(res, 'data.filer_names', null)\n          });\n        })\n        .catch(err => {\n          this.setState({\n            'loading': false,\n          });\n          console.error(err);\n        });\n    }\n\n    else {\n      this.setState({\n        'loading': false,\n        'cik': strCik,\n      });\n    }\n  }\n\n\n  render() {\n\n    const order = this.state.order;\n    const orderBy = this.state.orderBy;\n\n    const handleRequestSort = (event, property) => {\n      const isDesc = orderBy === property && order === 'desc';\n      this.setState({ order: isDesc ? 'asc' : 'desc' });\n      this.setState({ orderBy: property });\n    };\n\n    const classes = makeStyles({\n      root: {\n        width: '100%',\n      },\n      tableWrapper: {\n        maxHeight: 440,\n        overflow: 'auto',\n      },\n    });\n\n    const handleChangePage = (event, newPage) => {\n      const tableInfo = this.state.tableInfo;\n      tableInfo.page = newPage;\n      this.setState({ tableInfo });\n    };\n\n    const handleChangeRowsPerPage = event => {\n      const tableInfo = this.state.tableInfo;\n      tableInfo.page = 0;\n      tableInfo.rowsPerPage = +event.target.value; // number conversion, unary '+'\n      this.setState({ tableInfo });\n    };\n\n    const columns = [\n      { id: 'name', label: 'Issuer Name', minWidth: 170 },\n      /*{ id: 'cik', label: 'CIK', minWidth: 100 },\n      {\n        id: 'cik9',\n        label: 'CIK9',\n        minWidth: 170,\n        format: value => value.toLocaleString(),\n      },*/\n      {\n        id: 'from',\n        label: 'From',\n        minWidth: 70,\n        format: value => value.toLocaleString(),\n        align: 'right'\n      },\n      {\n        id: 'to',\n        label: 'To',\n        minWidth: 70,\n        align: 'right'\n      },\n      {\n        id: 'ownership_length',\n        label: 'Ownership Length (Quarters)',\n        minWidth: 70,\n        align: 'right'\n      },\n    ];\n\n\n    const rowsPerPage = this.state.tableInfo.rowsPerPage;\n    const page = this.state.tableInfo.page;\n    const loading = this.state.loading;\n\n    const date = new Date();\n    const currentYear = date.getFullYear();\n    const currentQuarter = ~~((date.getMonth() + 1) / 3) + 1;\n\n    const currentOnly = this.state.currentOnly;\n\n    let holdings = _.filter(this.state.holdings, holding => holding['name'] && holding['cusip6'] && holding['cusip9']);\n    if(currentOnly) {\n      holdings = _.filter(holdings, holding => {\n        const holdingYear = parseInt(_.get(holding, 'to', '0000q0').substring(0, 4));\n        const holdingQuarter = parseInt(_.get(holding, 'to', '0000q0').substring(5, 6));\n\n        if(!Math.abs(currentYear - holdingYear)) {\n          return Math.abs(currentQuarter - holdingQuarter) <= 1;\n        }\n        \n        return Math.abs(currentYear - holdingYear) === 1 && currentQuarter === 1 && holdingQuarter === 4;\n      });\n    }\n\n    const filterValue = this.state.filter;\n\n    if(!_.isEmpty(filterValue)) {\n      const filterValueLower = _.lowerCase(filterValue.toString());\n      const colKeys = _.map(columns, column => column.id);\n      holdings = _.filter(holdings, holding => {\n        const slimHolding = _.pick(holding, colKeys);\n        return _.map(_.values(slimHolding), value => _.includes(_.lowerCase(value.toString()), filterValueLower)).some(a => a)\n      });\n    }\n\n\n    const cik = this.state.cik;\n    let avgOwnership = 0;\n\n    if(holdings && holdings.length) {\n      avgOwnership = _.reduce(_.map(holdings, holding => holding.ownership_length), (acc, num) => {\n        return acc + num;\n      }, 0) / holdings.length;\n      avgOwnership = Math.round(avgOwnership * 1000) / 1000;\n    }\n\n    const filer_name = _.get(this.state, 'filer_names.0', null);\n\n    const autoRedir = this.state.autoRedir;\n    const query = this.state.query;\n    const parsedQuery = {\n      'q': query,\n      'fromSearch': false\n    };\n    const qs = queryString.stringify(parsedQuery);\n    \n    return (\n      <>\n        { loading? <><div style={{ minHeight: '30vh' }}></div>One moment please ...</> :null}\n        { (!loading && !holdings)? <><div style={{ minHeight: '30vh' }}></div>{ `No results for requested CIK \"${cik}\"!` }</> :null}\n        { loading || !holdings? null :\n        <>\n        <div style={{ display: 'block', width: '100%', textAlign: 'center' }}>\n          { autoRedir && query?\n            <div>\n              You were automatically redirected from search.  Click <Link style={{ textDecoration: 'none', color: 'blue' }} to={ '/search?' + qs }>here</Link> to view full results.\n            </div> :null }\n          <h1>{ filer_name }</h1>\n        </div>\n        <Paper className={classes.root} style={{ display: 'block', width: '100%' }}>\n          <div className={classes.tableWrapper}>\n            <Table size='small' stickyHeader aria-label=\"sticky table\">\n              { /*<TableHead>\n                <TableRow>\n                  {columns.map(column => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth, fontFamily: 'Courier New' }}\n                    >\n                      <strong>{column.label}</strong>\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead> */ }\n              <EnhancedTableHead\n                classes={classes}\n                order={order}\n                orderBy={orderBy}\n                onRequestSort={handleRequestSort}\n                headCells={columns}\n              />\n              <TableBody>\n                {!holdings? null : stableSort(holdings, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                  return (\n                    <TableRow hover tabIndex={-1} key={row.key}>\n                      {columns.map(column => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align} style={{ fontFamily: 'Courier New' }}>\n                            {\n                              (() => {\n                                if(column.id === 'name') {\n                                  return <Link style={{ textDecoration: 'none', color: 'blue' }} to={ '/holders/' + row.cusip6 }>{ value }</Link>;\n                                }\n\n                                return column.format && typeof value === 'number' ? column.format(value) : value;\n                              })()\n                            }\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n              <TableFooter>\n                <TableRow>\n                  <TableCell colSpan={ columns.length - 2}>\n                    <TextField\n                      onChange={(event) => this._handleChange(event, 'filter')}\n                      /*label='Filter'*/\n                      /*variant='filled'*/\n                      placeholder='Filter'\n                      type='search'\n                      value={ filterValue }\n                      style={ styles.textField }\n                      fullWidth\n                    />\n                  </TableCell>\n                  <TableCell style={{ fontFamily: 'Courier New' }}>\n                    <Checkbox\n                      checked={currentOnly}\n                      onChange={(event) => {\n                        this._handleChange(event, 'current_only');\n                        handleChangePage(event, 0);\n                      }}\n                      color=\"primary\"\n                    /> Show current holdings only \n                  </TableCell>\n                  <TableCell style={{ textAlign: 'right', fontFamily: 'Courier New' }}>\n                    <strong>Average</strong>: { avgOwnership } quarters ({Math.round(1000 * avgOwnership / 4)/1000} years)\n                  </TableCell>\n                </TableRow>\n              </TableFooter>\n            </Table>\n          </div>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 50, 100]}\n            component=\"div\"\n            count={!holdings? 0 :holdings.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            ActionsComponent={TablePaginationActions}\n          />\n        </Paper>\n        </>\n        }\n      </>\n    );\n  }\n\n};\n","import React from 'react';\nimport queryString from 'query-string';\nimport _ from 'lodash';\n\nimport { Link } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = {\n  'textField': {\n    margin: '5px',\n    width: '30%',\n    minWidth: '300px',\n    display: 'inline-block',\n    position: '',\n    bottom: 0\n  },\n};\n\nfunction TablePaginationActions(props) {\n  const useStyles1 = makeStyles(theme => ({\n    root: {\n      flexShrink: 0,\n      marginLeft: theme.spacing(2.5),\n    },\n  }));\n\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\n// need CUSIP\nfunction EnhancedTableHead(props) {\n  const { order, orderBy, onRequestSort, headCells } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.align}\n            style={{ minWidth: headCell.minWidth, fontFamily: 'Courier New' }}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={order}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {/*orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null*/}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  headCells: PropTypes.array.isRequired,\n};\n\n\nexport class HoldersView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n\n    // get Stitch controller from props\n    this.stitch = this.props.stitch;\n\n    // bind this to all non-React functions\n    this._getHolders = this._getHolders.bind(this);\n    this._handleChange = this._handleChange.bind(this);\n\n    const initialCusipFromPath = _.get(this.props, 'match.params.cusip', null);\n    const initialCusipFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'cusip', null);\n    const initialCusip = initialCusipFromPath? initialCusipFromPath :initialCusipFromQuery;\n    const autoRedir = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'autoRedir', false);\n    const query = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'q', null);\n\n    // initialize state\n    this.state = {\n      'holders': null,\n      'cusip': initialCusip,\n      'loading': true,\n      'tableInfo': {\n        'page': 0,\n        'rowsPerPage': 10\n      },\n      'currentOnly': false,\n      'order': 'desc',\n      'orderBy': 'ownership_length',\n      'filter': '',\n      'autoRedir': autoRedir,\n      'query': query,\n    };\n  }\n\n  componentDidMount() {\n    const cusip = this.state.cusip;\n\n    if(this.props.stitchInitialized && cusip) {\n      this._getHolders(cusip);\n    }\n\n    else if(this.props.stitchInitialized && this.state.loading) {\n      this.setState({ loading: false });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.stitchInitialized) {\n      const cusipFromPath = _.get(this.props, 'match.params.cusip', null);\n      const oldCusipFromPath = _.get(prevProps, 'match.params.cusip', null);\n      const cusipFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'cusip', null);\n      const oldCusipFromQuery = _.get(queryString.parse(_.get(prevProps, 'location.search', null)), 'cusip', null);\n\n      if(cusipFromPath || cusipFromQuery) {\n        let cusip, oldCusip;\n\n        if(cusipFromPath) {\n          cusip = cusipFromPath;\n          oldCusip = oldCusipFromPath;\n        }\n\n        else if(cusipFromQuery) {\n          cusip = cusipFromQuery;\n          oldCusip = oldCusipFromQuery;\n        }\n\n        if(cusip !== oldCusip) {\n          this._getHolders(cusip);\n        }\n      }\n    }\n  }\n\n  _handleChange(event, type) {\n    if(type === 'current_only') {\n      this.setState({\n        'currentOnly': event.target.checked\n      });  \n    }\n\n    if(type === 'filter') {\n      this.setState({\n        'filter': event.target.value\n      });\n    }\n  }\n\n  _getHolders(cusip) {\n    const strCusip = cusip.toString();\n\n    if(strCusip.length >= 6) {\n      const cusip6 = cusip.substr(0, 6);\n      this.stitch.callFunction('getHoldersForIssuer', [ cusip6 ])\n        .then(res => {\n          const holdings = _.get(res, 'data.holdings', null);\n          let modifiedHoldings;\n          \n          if(holdings) {\n            modifiedHoldings = _.map(holdings, (holding, index) => ({\n              'name': _.get(holding, 'filer_names.0', null),\n              'cik': _.get(holding, 'cik', null),\n              'cusip9': _.get(holding, 'cusip9', null),\n              'from': _.get(holding, 'from.year') + 'q' + _.get(holding, 'from.quarter'),\n              'to': _.get(holding, 'to.year') + 'q' + _.get(holding, 'to.quarter'),\n              'ownership_length': _.get(holding, 'ownership_length'),\n              'key': _.get(holding, 'cik', '') + index.toString()\n            }));\n          }\n\n          if(_.isEmpty(modifiedHoldings)) {\n            modifiedHoldings = null;\n          }\n\n          this.setState({\n            'holders': modifiedHoldings,\n            'loading': false,\n            'issuer_names': _.get(res, 'data.issuer_names', null)\n          });\n        })\n        .catch(err => {\n          this.setState({\n            'loading': false,\n          });\n          console.error(err);\n        });\n    }\n\n    else {\n      this.setState({\n        'loading': false,\n        'cusip': strCusip,\n      });\n    }\n  }\n\n\n  render() {\n\n    const order = this.state.order;\n    const orderBy = this.state.orderBy;\n\n    const handleRequestSort = (event, property) => {\n      const isDesc = orderBy === property && order === 'desc';\n      this.setState({ order: isDesc ? 'asc' : 'desc' });\n      this.setState({ orderBy: property });\n    };\n\n    const classes = makeStyles({\n      root: {\n        width: '100%',\n      },\n      tableWrapper: {\n        maxHeight: 440,\n        overflow: 'auto',\n      },\n    });\n\n    const columns = [\n      { id: 'name', label: 'Holder Name', minWidth: 170 },\n      /*{ id: 'cik', label: 'CIK', minWidth: 100 },\n      {\n        id: 'cusip9',\n        label: 'CUSIP9',\n        minWidth: 170,\n        format: value => value.toLocaleString(),\n      },*/\n      {\n        id: 'from',\n        label: 'From',\n        minWidth: 70,\n        format: value => value.toLocaleString(),\n        align: 'right'\n      },\n      {\n        id: 'to',\n        label: 'To',\n        minWidth: 70,\n        align: 'right'\n      },\n      {\n        id: 'ownership_length',\n        label: 'Ownership Length (Quarters)',\n        minWidth: 170,\n        align: 'right'\n      },\n    ];\n\n    const handleChangePage = (event, newPage) => {\n      const tableInfo = this.state.tableInfo;\n      tableInfo.page = newPage;\n      this.setState({ tableInfo });\n    };\n\n    const handleChangeRowsPerPage = event => {\n      const tableInfo = this.state.tableInfo;\n      tableInfo.page = 0;\n      tableInfo.rowsPerPage = +event.target.value; // number conversion, unary '+'\n      this.setState({ tableInfo });\n    };\n\n    const rowsPerPage = this.state.tableInfo.rowsPerPage;\n    const page = this.state.tableInfo.page;\n    const loading = this.state.loading;\n\n    const date = new Date();\n    const currentYear = date.getFullYear();\n    const currentQuarter = ~~((date.getMonth() + 1) / 3) + 1;\n\n    const currentOnly = this.state.currentOnly;\n\n    let holders = _.filter(this.state.holders, holder => holder['name'] && holder['cik'] && holder['cusip9']);\n    if(currentOnly) {\n      holders = _.filter(holders, holder => {\n        const holderYear = parseInt(_.get(holder, 'to', '0000q0').substring(0, 4));\n        const holderQuarter = parseInt(_.get(holder, 'to', '0000q0').substring(5, 6));\n\n        if(!Math.abs(currentYear - holderYear)) {\n          return Math.abs(currentQuarter - holderQuarter) <= 1;\n        }\n        \n        return Math.abs(currentYear - holderYear) === 1 && currentQuarter === 1 && holderQuarter === 4;\n      });\n    }\n\n    const filterValue = this.state.filter;\n\n    if(!_.isEmpty(filterValue)) {\n      const filterValueLower = _.lowerCase(filterValue.toString());\n      const colKeys = _.map(columns, column => column.id);\n      holders = _.filter(holders, holder => {\n        const slimHolder = _.pick(holder, colKeys);\n        return _.map(_.values(slimHolder), value => _.includes(_.lowerCase(value.toString()), filterValueLower)).some(a => a)\n      });\n    }\n    \n    const cusip = this.state.cusip;\n    let avgOwnership = 0;\n\n    if(holders && holders.length) {\n      avgOwnership = _.reduce(_.map(holders, holder => holder.ownership_length), (acc, num) => {\n        return acc + num;\n      }, 0) / holders.length;\n      avgOwnership = Math.round(avgOwnership * 1000) / 1000;\n    }\n\n    const issuer_name = _.get(this.state, 'issuer_names.0', null);\n\n    const autoRedir = this.state.autoRedir;\n    const query = this.state.query;\n    const parsedQuery = {\n      'q': query,\n      'fromSearch': false\n    };\n\n    console.log(parsedQuery);\n    const qs = queryString.stringify(parsedQuery);\n    \n    return (\n      <>\n        { loading? <><div style={{ minHeight: '30vh' }}></div>One moment please ...</> :null}\n        { (!loading && !holders)? <><div style={{ minHeight: '30vh' }}></div>{ `No results for requested CUSIP \"${cusip}\"!` }</> :null}\n        { loading || !holders? null :\n        <>\n        <div style={{ display: 'flex', flexDirection: 'column', width: '100%', textAlign: 'center', justifyContent: 'center' }}>\n          { autoRedir && query?\n            <div>\n              You were automatically redirected from search.  Click <Link style={{ textDecoration: 'none', color: 'blue' }} to={ '/search?' + qs }>here</Link> to view full results.\n            </div> :null }\n          <h1>{ issuer_name }</h1>\n        </div>\n        <Paper className={classes.root} style={{ display: 'block', width: '100%' }}>\n          <div className={classes.tableWrapper}>\n            <Table size='small' stickyHeader aria-label=\"sticky table\">\n              { /*<TableHead>\n                <TableRow>\n                  {columns.map(column => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth, fontFamily: 'Courier New' }}\n                    >\n                      <strong>{column.label}</strong>\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead> */ }\n              <EnhancedTableHead\n                order={order}\n                orderBy={orderBy}\n                onRequestSort={handleRequestSort}\n                headCells={columns}\n              />\n              <TableBody>\n                {!holders? null : stableSort(holders, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                  return (\n                    <TableRow hover tabIndex={-1} key={row.key}>\n                      {columns.map(column => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align} style={{ fontFamily: 'Courier New' }}>\n                            {\n                              (() => {\n                                if(column.id === 'name') {\n                                  return <Link style={{ textDecoration: 'none', color: 'blue' }} to={ '/holdings/' + row.cik }>{ value }</Link>;\n                                }\n\n                                return column.format && typeof value === 'number' ? column.format(value) : value;\n                              })()\n                            }\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n              <TableFooter>\n                <TableRow>\n                  <TableCell colSpan={ columns.length - 2}>\n                    <TextField\n                      onChange={(event) => this._handleChange(event, 'filter')}\n                      /*label='Filter'*/\n                      /*variant='filled'*/\n                      placeholder='Filter'\n                      type='search'\n                      value={ filterValue }\n                      style={ styles.textField }\n                      fullWidth\n                    />\n                  </TableCell>\n                  <TableCell style={{ fontFamily: 'Courier New' }}>\n                    <Checkbox\n                      checked={currentOnly}\n                      onChange={(event) => {\n                        this._handleChange(event, 'current_only');\n                        handleChangePage(event, 0);\n                      }}\n                      color=\"primary\"\n                    /> Show current holders only \n                  </TableCell>\n                  <TableCell style={{ textAlign: 'right', fontFamily: 'Courier New' }}>\n                    <strong>Average</strong>: { avgOwnership } quarters ({Math.round(1000 * avgOwnership / 4)/1000} years)\n                  </TableCell>\n                </TableRow>\n              </TableFooter>\n            </Table>\n          </div>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 50, 100]}\n            component=\"div\"\n            count={!holders? 0 :holders.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            ActionsComponent={TablePaginationActions}\n          />\n        </Paper>\n        </>\n        }\n      </>\n    );\n  }\n\n};\n","import React from 'react';\n//import _ from 'lodash';\n\nimport { StitchController } from '../';\nimport { Input, Button, ButtonGroup } from '@material-ui/core';\n\nexport class UserInput extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      loading: true,  // is the UI still loading?\n      status: 0,      // zero means OK, non-zero means NOT OK\n      inputValue: \"\"\n    };\n\n    // instantiate Stitch controller\n    this.stitch = new StitchController();\n    \n    // bind this for non-React functions\n    this._handleInputChange = this._handleInputChange.bind(this);\n  }\n\n  _handleInputChange(event) {\n    this.setState({ inputValue: event.target.value });\n  }\n\n  _handleClick(name) {\n    // clean up the input here if you want\n    const cleanInput = this.state.inputValue;\n\n    // TODO : add support for the checkbox (choosing the current holders / positions only)\n    /*const options = {\n      currentOnly: false\n    };*/\n\n    switch(name) {\n      case 'company':\n        this.stitch.callFunction('searchForCompany', [cleanInput])\n        .then(searchResult => {\n          console.log(searchResult);\n          return {\n            'companySearchResult': searchResult\n          };\n        })\n          /*\n          // TODO : check status of result\n          const cik = _.get(searchResult, 'data.cik', null);\n\n          return this.stitch.callFunction('getAverageTimePositionsHeldForFund', [cik, options])\n          .then(avgPosResult => {\n            return this.stitch.callFunction('getPositionsForFund', [cik, options])\n            .then(posForFundResult => {\n\n              return {\n                'searchForFund': searchResult,\n                'getAverageTimePositionsHeldForFund': avgPosResult,\n                'getPositionsForFund': posForFundResult,\n              };\n            })\n            .catch(err => {\n              console.log(err);\n              return {};\n            });\n          })\n        })\n        .then(res => {\n          console.log(res);\n          return this.props.handleSubmission(res);\n        })*/\n        .catch(err => {\n          console.log(err);\n        });\n        break;\n\n      case 'symbol':\n        this.stitch.callFunction('searchForSymbol', [cleanInput])\n        .then(searchResult => {\n          console.log(searchResult);\n          return {\n            'symbolSearchResult': searchResult\n          };\n        })\n          /*\n          // TODO : check status of result\n          const cusip = _.get(searchResult, 'data.cusip', null);\n          \n          return this.stitch.callFunction('getHoldersForTicker', [cusip, options])\n          .then(results => {\n            return {\n              'searchForCompany': searchResult,\n              'getHoldersForTicker': results\n            };\n          })\n          .catch(err => {\n            console.log(err);\n          })\n        })\n        .then(res => {\n          console.log(res);\n          return this.props.handleSubmission(res);\n        })*/\n        .catch(err => {\n          console.log(err);\n        });\n        break;\n\n      default:\n    }\n  }\n\n  componentDidMount() {\n    // initialize Stitch controller\n    this.stitch.init()\n    .then(() => {\n      this.setState({ loading: false, status: 0 });  // no longer loading\n    })\n    .catch(err => {\n      console.log(err);\n      this.setState({ loading: false, status: -1 });  // no longer loading, but bad status\n    });\n  }\n\n  render() {\n    return (\n      <div style={ styles.container }>\n        <Input\n          disabled={ this.state.loading }\n          error={ this.state.error }\n          placeholder=\"Search by ...\"\n          style={ styles.input }\n          value={ this.state.inputValue }\n          onChange={ this._handleInputChange }\n        />\n        <ButtonGroup>\n          <Button\n            disabled={ this.state.loading }\n            onClick={ () => this._handleClick('company') }\n          >\n            Company\n          </Button>\n          <Button\n            disabled={ this.state.loading }\n            onClick={ () => this._handleClick('symbol') }\n          >\n            Symbol\n          </Button>\n        </ButtonGroup>\n      </div>\n    );\n  }\n};\n\nconst styles = {\n  container: {\n    \n  },\n  button: {\n\n  },\n  input: {\n    margin: 5,\n  }\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\n\nexport class ResultsGetHoldersForTicker extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      column: null,\n      direction: null,\n      data: this.props.results.data,\n      rawData: this.props.results.data\n    };\n  }\n\n  // update raw results from props\n  componentDidUpdate() {\n    if(!_.isEqual(this.props.results.data, this.state.rawData)) {\n      this.setState({\n        data: this.props.results.data,\n        rawData: this.props.results.data,\n      });\n    } \n  }\n\n  _handleSort = (clickedColumn) => () => {\n    const { column, direction } = this.state;\n\n    // sort by ascending if not clicked\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        direction: 'ascending',\n        data: _.sortBy(this.state.data, [ clickedColumn ])\n      });\n    }\n\n    // if clicked, toggle sort direction\n    else {\n      this.setState({\n        direction: direction === 'ascending' ? 'descending' : 'ascending',\n        data: this.state.data.reverse()\n      });\n    }\n  }\n\n  render() {\n    const { column, direction, data } = this.state;\n    const columnNames = [ 'name', 'cik', 'from', 'to', 'quarters' ];\n    const columnNameDisplay = {\n      'name': 'Name',\n      'cik': 'CIK',\n      'from': 'From',\n      'to': 'To',\n      'quarters': 'Quarters'\n    };\n\n    return (\n      // name the div here? TODO\n      <div style={ styles.container }>\n        <Table>\n          <TableHead>\n            <TableRow>\n              {\n                _.map(columnNames, name => (\n                  <TableCell\n                    key={ name }\n                    sorted={ column === name? direction :null }\n                    onClick={ this._handleSort(name) }\n                  >\n                    { columnNameDisplay[name] }\n                  </TableCell>\n                ))\n              }\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              _.map(data, ({ name, cik, from, to, quarters }, idx) => (\n                  <TableRow key={ _.join([cik, '-', idx], '') }>\n                    <TableCell><code>{ name }</code></TableCell>\n                    <TableCell><code>{ cik }</code></TableCell>\n                    <TableCell><code>{ from }</code></TableCell>\n                    <TableCell><code>{ to }</code></TableCell>\n                    <TableCell><code>{ quarters }</code></TableCell>\n                  </TableRow>\n              ))\n            }\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n\n};\n\nconst styles = {\n  container: {\n    margin: 20\n  }\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\n\nexport class ResultsGetPositionsForFund extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      column: null,\n      direction: null,\n      data: this.props.results.data.filerSearch.data.results.data.holdings,\n      rawResults: this.props.results.data.filerSearch.data.results.data.holdings,\n    };\n  }\n\n  // update raw results from props\n  componentDidUpdate() {\n    if(!_.isEqual(this.props.results, this.state.rawResults)) {\n      this.setState({\n        data: this.props.results.data,\n        rawResults: this.props.results,\n      });\n    } \n  }\n\n  _handleSort = (clickedColumn) => () => {\n    const { column, direction } = this.state;\n\n    // sort by ascending if not clicked\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        direction: 'ascending',\n        data: _.sortBy(this.state.data, [ clickedColumn ])\n      });\n    }\n\n    // if clicked, toggle sort direction\n    else {\n      this.setState({\n        direction: direction === 'ascending' ? 'descending' : 'ascending',\n        data: this.state.data.reverse()\n      });\n    }\n  }\n\n  render() {\n    const { column, direction, data } = this.state;\n    const columnNames = [ 'name', 'cusip', 'from', 'to', 'quarters' ];\n    const columnNameDisplay = {\n      'name': 'Name',\n      'cusip': 'CUSIP',\n      'from': 'From',\n      'to': 'To',\n      'quarters': 'Quarters'\n    };\n\n    return (\n      // name the div here? TODO\n      <div style={ styles.container }>\n        <Table>\n          <TableHead>\n            <TableRow>\n              {\n                _.map(columnNames, name => (\n                  <TableCell\n                    key={ name }\n                    sorted={ column === name? direction :null }\n                    onClick={ this._handleSort(name) }\n                  >\n                    { columnNameDisplay[name] }\n                  </TableCell>\n                ))\n              }\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              _.map(data, ({ names, cusip6, from, to, ownership_length }, idx) => (\n                  <TableRow key={ _.join([cusip6, '-', idx], '') }>\n                    <TableCell><code>{ names[0] }</code></TableCell>\n                    <TableCell><code>{ cusip6 }</code></TableCell>\n                    <TableCell><code>{ from.year }q{ from.quarter }</code></TableCell>\n                    <TableCell><code>{ to.year }q{ to.quarter }</code></TableCell>\n                    <TableCell><code>{ ownership_length}</code></TableCell>\n                  </TableRow>\n              ))\n            }\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n\n};\n\nconst styles = {\n  container: {\n    margin: 20\n  }\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow\n} from '@material-ui/core';\n\nexport class ResultsGetAverageTimePositionsHeldForFund extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: this.props.results.data,\n      rawData: this.props.results.data,\n    };\n  }\n\n  // update raw results from props\n  componentDidUpdate() {\n    if(!_.isEqual(this.props.results.data, this.state.rawData)) {\n      this.setState({\n        data: this.props.results.data,\n        rawData: this.props.results.data,\n      });\n    } \n  }\n\n  render() {\n    const { data } = this.state;\n\n    return (\n      <div style={ styles.container }>\n        <Table>\n          <TableBody>\n            <TableRow key='total'>\n              <TableCell>\n                <strong>Total Positions Found</strong>\n              </TableCell>\n              <TableCell>\n                <code>{ data.positionsCount }</code>\n              </TableCell>\n            </TableRow>\n            <TableRow key='year'>\n              <TableCell>\n                <strong>Average Time Held of All Positions (Years)</strong>\n              </TableCell>\n              <TableCell>\n                <code>{ Math.round(data.averageLengthOfStockOwnership.years * 1000) / 1000 }</code>\n              </TableCell>\n            </TableRow>\n            <TableRow key='quarters'>\n              <TableCell>\n                <strong>Average Time Held of All Positions (Quarters)</strong>\n              </TableCell>\n              <TableCell>\n                <code>{ Math.round(data.averageLengthOfStockOwnership.quarters * 1000) / 1000 }</code>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n\n};\n\nconst styles = {\n  container: {\n    margin: 20\n  }\n};\n","import React from 'react';\nimport _ from 'lodash';\n\n// import individual results formatters\nimport { ResultsGetHoldersForTicker } from './functions/ResultsGetHoldersForTicker';\nimport { ResultsGetPositionsForFund } from './functions/ResultsGetPositionsForFund';\nimport { ResultsGetAverageTimePositionsHeldForFund } from './functions/ResultsGetAverageTimePositionsHeldForFund';\n\nexport class ResultsFormatter extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // define function results from action controller in state\n    this.state = {\n        results: this.props.results,\n    };\n  }\n\n  componentDidUpdate() {\n    if(!_.isEqual(this.props.results, this.state.results)) {\n      this.setState({\n        results: this.props.results,\n      });\n    } \n  }\n\n  render() {\n    const { results } = this.state;\n\n    return (\n      <div style={ styles.container }>\n        {\n          !_.get(results, 'companySearchResult', -1)?\n            <>Showing results for fund <strong><code>\"{ _.get(results, 'companySearchResult.data.filerSearch.data.count', '') }\" (CIK : { _.get(results, 'companySearchResult.data.filerSearch.data.count', '') })</code></strong></>\n          :null\n        }\n\n        {\n          !_.get(results, 'searchForCompany.status', -1)?\n            <>Showing results for company <strong><code>\"{ _.get(results, 'searchForCompany.data.name', '') }\" (CUSIP : { _.get(results, 'searchForCompany.data.cusip', '') })</code></strong></>\n          :null\n        }\n\n        {\n          // position average information\n          !_.get(results, 'getAverageTimePositionsHeldForFund.status', -1)?\n            <ResultsGetAverageTimePositionsHeldForFund\n              results={ results.getAverageTimePositionsHeldForFund }\n            />\n          :null\n        }\n        \n        {\n          // fund positions information\n          !_.get(results, 'companySearchResult.status', -1)?\n            <ResultsGetPositionsForFund\n              results={ results.companySearchResult }\n            />\n          :null\n        }\n        \n        {\n          // company holders information\n          !_.get(results, 'symbolSearchResult.status', -1)?\n            <ResultsGetHoldersForTicker\n              results={ results.symbolSearchResult }\n            />\n          :null\n        }\n      </div>\n    );\n  }\n};\n\nconst styles = {\n  container: {\n    margin: 20\n  }\n};\n","import React from 'react';\n\n// main components for user interface\nimport { UserInput } from './UserInput';\nimport { ResultsFormatter } from './ResultsFormatter';\n\nexport class UserInterface extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // initialize state\n    this.state = {\n      submissionResults: null  // to store submission results for display in child component(s)\n    };\n    \n    // bind non-React functions\n    this._handleSubmission = this._handleSubmission.bind(this);\n  }\n\n  // handle the submission of the child UserInput component\n  _handleSubmission(results) {\n    this.setState({ submissionResults: results });\n  }\n\n  componentDidMount() {\n    \n  }\n  \n  render() {\n    return (<div>\n      <UserInput\n        handleSubmission={ this._handleSubmission } // pass down submission handler to store results\n      />\n      <br/>\n      <ResultsFormatter\n        results={ this.state.submissionResults? this.state.submissionResults :undefined }\n      />\n    </div>);\n  }\n};\n","import { UserInterface } from './components/UserInterface';\nimport { UserInput } from './components/UserInput';\nimport { ResultsFormatter } from './components/ResultsFormatter';\n\nconst {\n  Stitch,\n  RemoteMongoClient,\n  UserApiKeyCredential\n} = require('mongodb-stitch-browser-sdk');\n\nexport class StitchController {\n  constructor() {\n    this.db = {}; // initialize database object\n    this.sc = {}; // initialize service client object\n  }\n\n  // initialize the controller\n  async init() {\n    try {\n      this.initClientForAppId(process.env.REACT_APP_STITCH_APP_ID);                            // initializes the client\n      await this.loginUsingApiKey(process.env.REACT_APP_STITCH_API_SECRET);                    // authorizes the client for use\n      const mongodb = await this.initServiceClient(process.env.REACT_APP_STITCH_SERVICE_NAME); // initializes MongoDB service client (for database access)\n      await this.initDBFromServiceClient('filings', mongodb);                                  // initializes test db for access\n      return 0;\n    }\n    catch(err) {\n      console.error(err);\n      return err;\n    }\n  }\n\n  // returns client \n  initClientForAppId(appId) {\n    this.client = Stitch.initializeDefaultAppClient(appId);\n  }\n\n  // returns a Promise (of user info)\n  loginUsingApiKey(key) {\n    const credential = new UserApiKeyCredential(process.env.REACT_APP_STITCH_API_SECRET);\n    return this.client.auth.loginWithCredential(credential)\n      .then(user => {\n        console.log(`Logged into Stitch client as API user (server) with id: ${user.id}`);\n        return user;\n      })\n      .catch(err => {\n        console.error(err);\n        return err;\n      });\n  }\n\n  // returns a Promise (of service client)\n  async initServiceClient(name) {\n    this.sc[name] = await this.client.getServiceClient(\n      RemoteMongoClient.factory,\n      name\n    );\n\n    return this.sc[name];\n  }\n\n  // returns Promise (of db client)\n  async initDBFromServiceClient(name, sc) {\n    this.db[name] = await sc.db(name);\n\n    return this.db[name];\n  }\n\n  callFunction(name, args) {\n    return this.client.callFunction(name, args)\n      .catch(err => {\n        console.error(err);\n        return err;\n      });\n  }\n};\n\n\nexport const StitchComponents = {\n  UserInterface,\n  UserInput,\n  ResultsFormatter\n};\n","import React from 'react';\nimport './App.css';\nimport { blue } from '@material-ui/core/colors';\nimport bcrypt from 'bcryptjs';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n/*\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\n*/\n\n// need this for the Stitch UI\n//import { StitchComponents } from './stitch';\n\nimport { Search } from './Search';\nimport { SearchResults } from './SearchResults';\nimport { HoldingsView } from './HoldingsView';\nimport { HoldersView } from './HoldersView';\nimport { StitchController } from './stitch';\nimport HomeIcon from '@material-ui/icons/Home';\n\n//import Logo from './media/assets/images/gghc.png';\nconst ColorButton = withStyles(theme => ({\n  root: {\n    color: 'white',\n    backgroundColor: blue[500],\n    '&:hover': {\n      backgroundColor: blue[700],\n    },\n  },\n}))(Button);\n\nconst styles = {\n  'container': {\n    position: 'relative',\n    margin: '10px',\n    textAlign: 'center',\n    justifyContent: 'center',\n  },\n  'textField': {\n    margin: '5px',\n    width: '50%',\n    minWidth: '300px',\n    display: 'inline-block',\n  },\n  'button': {\n    display: 'inline-block',\n    //height: '100%',\n  }\n};\n\nconst authHash = process.env.REACT_APP_AUTH_HASH;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // initialize state\n    this.state = {\n      window: {\n        width: 0,\n        height: 0\n      },\n      'stitchInitialized': false,\n      'loading': true,\n      'authorized': false,\n      'value': '',\n    };\n\n    // intantiate Stitch controller\n    this.stitch = new StitchController();\n\n    // bind non-React functions\n    this._updateWindowDimensions = this._updateWindowDimensions.bind(this);\n    this._authorize = this._authorize.bind(this);\n    this._handleChange = this._handleChange.bind(this);\n  }\n\n  _handleChange(event) {\n    this.setState({\n      'value': event.target.value\n    });  \n  }\n\n  _updateWindowDimensions() {\n    this.setState({ window: { width: window.innerWidth, height: window.innerHeight } });\n  }\n\n  componentDidMount() {\n    this._updateWindowDimensions();\n    window.addEventListener('resize', this._updateWindowDimensions);\n\n    // set up auth (not secure, for many reasons)\n    const authed = localStorage.getItem('holdings_app_authed');\n    \n    if(authed) {\n      this.setState({ 'authorized': true });\n    }\n\n    this.stitch.init()\n    .then(err => {\n      if(!err) {\n        console.log('Stitch initialization complete!');\n        this.setState({\n          'stitchInitialized': true,\n          'loading': false,\n        });\n      }\n      else {\n        console.error('Stitch initialization error:', err);\n        this.setState({\n          'stitchInitialized': false,\n          'loading': false,\n        });\n      }\n    })\n    .catch(err => {\n      console.error('Stitch initialization error:', err);\n      this.setState({\n        'stitchInitialized': false,\n        'loading': false\n      });\n    })\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this._updateWindowDimensions);\n  }\n\n  _authorize() {\n    const pw = this.state.value;\n    \n    bcrypt.compare(pw, authHash)\n      .then(res => {\n        if(res) {\n          alert('Success!');\n          localStorage.setItem('holdings_app_authed', true);\n          this.setState({ 'authorized': true });\n        }\n\n        else {\n          alert('Incorrect credentials.  Please try again.');\n        }\n      })\n      .catch(err => console.error(err));\n  }\n\n  render() {\n    const authorized = this.state.authorized;\n    \n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"App-body\">\n            { !authorized? \n              <div style={{\n                'verticalAlign': 'middle',\n                'height': '100px',\n                'lineHeight': '100px',\n                'whiteSpace': 'nowrap',\n              }}>\n                <form onSubmit={ this._authorize }>\n                  <TextField\n                    onChange={this._handleChange}\n                    type='password'\n                    variant='outlined'\n                    style={ styles.textField }\n                    fullWidth\n                  />\n                  <ColorButton variant='contained' onClick={ this._authorize } style={ styles.button }>\n                    Authorize\n                  </ColorButton>\n                </form>\n              </div>\n              :<>\n            { !this.state.stitchInitialized && !this.state.loading? <><div style={{ minHeight: '30vh' }}></div>Error connecting to MongoDB Stitch!</> :null }\n            { !this.state.stitchInitialized && this.state.loading? <><div style={{ minHeight: '30vh' }}></div>Connecting to MongoDB Stitch server ...</>:<>\n            <Link to='/' style={{ zIndex: 10, width: 32, height: 32, position: 'absolute', top: 5, left: 5 }}><HomeIcon\n              style={{ width: 32, height: 32, color: blue[500]}}\n            /></Link>\n            <Switch>\n              <Route\n                path='/'\n                exact\n                render={\n                  (props) => <div className=\"Welcome\">\n                    <h2>Welcome to the Holdings Analysis tool!</h2>\n                    The purpose of this tool is to enable research of both current &amp; historical holders of issued financial securities (holdings).<br/>\n                    This tool uses publicly available data disseminated by the U.S. Securities and Exchange Commission (SEC), the NASDAQ stock exchange, and others.<br/>\n                    To start using the tool, enter a search query using the search bar below.<br/>\n                    <span>You may search either by company (e.g. <strong>Tesla</strong> for Tesla Inc.) or by stock symbol (e.g. <strong>MSFT</strong> for Microsoft Corp.)  (... or <em>both</em> via search query string in the address bar.)</span>\n\n                    <h3>Definitions</h3>\n                    <ul>\n                      <li><strong>Holders</strong> are people, companies, and other entities that own, or <em>hold</em>, a financial security.</li>\n                      <li><strong>Holdings</strong> are collections of financial securities issued to a given holder.</li>\n                      <li><strong>Issuers</strong> are companies that issue, or ascribe ownership of, financial securities to holders.</li>\n                      <li><strong>Filers</strong> are people, companies, and other entities that have filed any form with the SEC.</li>\n                    </ul>\n                    \n                    <h3>Search Tips</h3>\n                    <ul>\n                      <li>By default, search tokens match by a logical <em>or</em> operation.  <strong>Example:</strong> The search query <strong>apple computer</strong> yields results matching <strong>apple</strong>, <strong>computer</strong>, or <em>both</em>.</li>\n                      <li>To search by exact phrase, use double quotes ({ '\"' }).  <strong>Example:</strong> The search query <strong>{ '\"apple computer\"' }</strong> yields results matching <strong>apple computer</strong> EXACTLY.</li>\n                      <li>To exclude a term, prepend that term with a hyphen ({ '-' }).  <strong>Example:</strong> The search query <strong>apple -computer</strong> yields results matching <strong>apple</strong> but NOT <strong>computer</strong>.</li>\n                      <li>Search queries are case-insensitive.</li>\n                    </ul>\n\n                  </div>\n                }\n              />\n            </Switch>\n            <Search />\n            <Switch>\n              <Route\n                path='/search/:search?'\n                render={\n                  (props) =>  <SearchResults {...props}\n                                stitch={ this.stitch }\n                                stitchInitialized={ this.state.stitchInitialized }\n                              />\n                }\n              />\n              <Route\n                path='/holdings/:cik?'\n                render={\n                  (props) =>  <HoldingsView {...props}\n                                stitch={ this.stitch }\n                                stitchInitialized={ this.state.stitchInitialized }\n                              />\n                }\n              />\n              <Route\n                path='/holders/:cusip?'\n                render={\n                  (props) =>  <HoldersView {...props}\n                                stitch={ this.stitch }\n                                stitchInitialized={ this.state.stitchInitialized }\n                              />\n                }\n              />\n            </Switch>\n            </>}\n\n            </>}\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["Search.js","SearchResults.js","HoldingsView.js","HoldersView.js","stitch/components/UserInput.js","stitch/components/functions/ResultsGetHoldersForTicker.js","stitch/components/functions/ResultsGetPositionsForFund.js","stitch/components/functions/ResultsGetAverageTimePositionsHeldForFund.js","stitch/components/ResultsFormatter.js","stitch/components/UserInterface.js","stitch/index.js","App.js","serviceWorker.js","index.js"],"names":["ColorButton","withStyles","theme","root","color","backgroundColor","blue","Button","styles","position","margin","textAlign","justifyContent","width","minWidth","display","top","transform","height","Search","props","state","go","location","value","_handleCompanySearch","bind","_handleSymbolSearch","_handleChange","event","this","setState","target","q","parsedQuery","qs","queryString","stringify","newRedirect","redirect","console","log","style","container","to","TextField","onChange","label","variant","textField","fullWidth","ButtonGroup","buttonGroup","onClick","button","React","Component","SearchResults","stitch","_searchCompany","_searchSymbol","initialCompanySearchFromQuery","_","get","parse","initialSymbolSearchFromQuery","stitchInitialized","companyQuery","symbolQuery","loading","prevProps","companySearch","oldCompanySearch","symbolSearch","oldSymbolSearch","callFunction","then","res","filerResults","issuerResults","filerData","issuerData","count","map","results","issuer","name","cusip6","filer","cik","holders","reduce","acc","issuerResult","newAcc","issuerName","filers","filerResult","filerName","companyResults","merge","catch","err","error","status","data","symbolName","holdersView","holdingsView","holdings","symbolResults","symbol","minHeight","isEmpty","noResults","val","k","item","key","toString","concat","HoldingsView","_getHoldings","initialCikFromPath","initialCikFromQuery","initialCik","oldCik","cikFromPath","oldCikFromPath","cikFromQuery","oldCikFromQuery","type","checked","strCik","length","padStart","modifiedHoldings","holding","index","classes","makeStyles","tableWrapper","maxHeight","overflow","columns","id","format","toLocaleString","align","useStyles1","flexShrink","marginLeft","spacing","rowsPerPage","tableInfo","page","date","Date","currentYear","getFullYear","currentQuarter","getMonth","currentOnly","filter","holdingYear","parseInt","substring","holdingQuarter","Math","abs","avgOwnership","ownership_length","num","round","filer_name","tableDense","fontFamily","flexDirection","Checkbox","Paper","className","Table","size","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","TableBody","slice","row","hover","tabIndex","TablePagination","rowsPerPageOptions","component","onChangePage","newPage","onChangeRowsPerPage","ActionsComponent","useTheme","IconButton","disabled","direction","ceil","max","HoldersView","_getHolders","initialCusipFromPath","initialCusipFromQuery","initialCusip","cusip","oldCusip","cusipFromPath","oldCusipFromPath","cusipFromQuery","oldCusipFromQuery","strCusip","substr","holder","holderYear","holderQuarter","issuer_name","UserInput","inputValue","StitchController","_handleInputChange","cleanInput","searchResult","init","Input","placeholder","input","_handleClick","ResultsGetHoldersForTicker","_handleSort","clickedColumn","sortBy","reverse","rawData","isEqual","columnNameDisplay","sorted","idx","from","quarters","join","ResultsGetPositionsForFund","filerSearch","rawResults","names","year","quarter","ResultsGetAverageTimePositionsHeldForFund","positionsCount","averageLengthOfStockOwnership","years","ResultsFormatter","getAverageTimePositionsHeldForFund","companySearchResult","symbolSearchResult","require","Stitch","RemoteMongoClient","UserApiKeyCredential","db","sc","initClientForAppId","process","loginUsingApiKey","initServiceClient","mongodb","initDBFromServiceClient","appId","client","initializeDefaultAppClient","credential","auth","loginWithCredential","user","getServiceClient","factory","args","App","window","_updateWindowDimensions","innerWidth","innerHeight","addEventListener","removeEventListener","path","exact","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f46d5638.chunk.js","sourcesContent":["import React from 'react';\n\nimport {\n  Redirect\n} from 'react-router-dom';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { withStyles } from '@material-ui/core/styles';\nimport { blue } from '@material-ui/core/colors';\n\nimport queryString from 'query-string';\n\nconst ColorButton = withStyles(theme => ({\n  root: {\n    color: 'white',\n    backgroundColor: blue[500],\n    '&:hover': {\n      backgroundColor: blue[700],\n    },\n  },\n}))(Button);\n\nconst styles = {\n  'container': {\n    position: 'relative',\n    margin: '10px',\n    textAlign: 'center',\n    justifyContent: 'center',\n  },\n  'textField': {\n    margin: '5px',\n    width: '50%',\n    minWidth: '300px',\n    display: 'inline-block',\n  },\n  'buttonGroup': {\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    display: 'inline-block',\n  },\n  'button': {\n    height: '100%',\n  }\n};\n\nexport class Search extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      'redirect': {\n        go: false,\n        location: '/',\n      },\n      value: ''\n    };\n\n    this._handleCompanySearch = this._handleCompanySearch.bind(this);\n    this._handleSymbolSearch = this._handleSymbolSearch.bind(this);\n    this._handleChange = this._handleChange.bind(this);\n  }\n\n  _handleChange(event) {\n    this.setState({\n      'value': event.target.value\n    });  \n  }\n\n  _handleCompanySearch(q) {\n    const parsedQuery = {\n      'company': this.state.value\n    };\n\n    const qs = queryString.stringify(parsedQuery);\n\n    let newRedirect = { ...this.state.redirect };\n    newRedirect.location = ('/search?' + qs);\n    newRedirect.go = true;\n\n    console.log(this.state.value);\n    console.log(newRedirect);\n    this.setState({ redirect: newRedirect });  \n  }\n\n\n  _handleSymbolSearch(q) {\n    const parsedQuery = {\n      'symbol': this.state.value\n    };\n\n    const qs = queryString.stringify(parsedQuery);\n\n    let newRedirect = { ...this.state.redirect };\n    newRedirect.location = ('/search?' + qs);\n    newRedirect.go = true;\n\n    console.log(this.state.value);\n    console.log(newRedirect);\n    this.setState({ redirect: newRedirect });  \n  }\n\n  render() {\n    const redirect = this.state.redirect.go;\n    const location = this.state.redirect.location;\n\n    return (<div style={ styles.container }>\n\n      { redirect? <Redirect to={ location } /> :null }\n      <TextField\n        onChange={this._handleChange}\n        label='Search'\n        variant='outlined'\n        style={ styles.textField }\n        fullWidth\n      />\n      <ButtonGroup style={ styles.buttonGroup }>\n        <ColorButton variant='contained' onClick={ this._handleCompanySearch } style={ styles.button }>\n          Company\n        </ColorButton>\n        <ColorButton variant='contained' onClick={ this._handleSymbolSearch } style={ styles.button }>\n          Symbol\n        </ColorButton>\n      </ButtonGroup>\n    </div>);\n  }\n\n};\n\n","import React from 'react';\nimport queryString from 'query-string';\nimport _ from 'lodash';\n\nimport { Link } from 'react-router-dom';\n\nexport class SearchResults extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // get Stitch controller from props\n    this.stitch = this.props.stitch;\n\n    // bind this to all non-React functions\n    this._searchCompany = this._searchCompany.bind(this);\n    this._searchSymbol = this._searchSymbol.bind(this);\n\n    const initialCompanySearchFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'company', null);\n    const initialSymbolSearchFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'symbol', null);\n    \n    this.state = {\n      'companyQuery': initialCompanySearchFromQuery,\n      'symbolQuery': initialSymbolSearchFromQuery,\n      'companyResults': null,\n      'symbolResults': null,\n      'loading': true,\n    };\n  }\n\n  componentDidMount() {\n    const stitchInitialized = this.props.stitchInitialized;\n    const companyQuery = this.state.companyQuery;\n    const symbolQuery = this.state.symbolQuery;\n\n    if(stitchInitialized && companyQuery) {\n      this._searchCompany(companyQuery);\n    }\n\n    if(stitchInitialized && symbolQuery) {\n      this._searchSymbol(symbolQuery);\n    }\n\n    if(stitchInitialized && !companyQuery && !symbolQuery && this.state.loading) {\n      this.setState({ loading: false });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const stitchInitialized = this.props.stitchInitialized;\n    const companySearch = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'company', null);\n    const oldCompanySearch = _.get(queryString.parse(_.get(prevProps, 'location.search', null)), 'company', null);\n    const symbolSearch = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'symbol', null);\n    const oldSymbolSearch = _.get(queryString.parse(_.get(prevProps, 'location.search', null)), 'symbol', null);\n\n    // clear old searches\n    if(companySearch !== oldCompanySearch) {\n      this.setState({ 'companyQuery': companySearch, 'companyResults': null });\n    }\n\n    if(symbolSearch !== oldSymbolSearch) {\n      this.setState({ 'symbolQuery': symbolSearch, 'symbolResults': null });\n    }\n\n\n    // perform new searches\n    if(stitchInitialized && companySearch && companySearch !== oldCompanySearch) {\n      this._searchCompany(companySearch);\n    }\n    \n    if(stitchInitialized && symbolSearch && symbolSearch !== oldSymbolSearch) {\n      this._searchSymbol(symbolSearch);\n    }\n  }\n\n  _searchCompany(q) {\n    this.setState({ loading: true });\n    this.stitch.callFunction('searchForCompany', [ q ])\n      .then(res => {\n        const filerData = _.get(res, 'data.filerSearch.data', null);\n        const issuerData = _.get(res, 'data.issuerSearch.data', null);\n\n        let filerResults, issuerResults;\n\n        if(issuerData.count !== 1) {\n          issuerResults = _.map(issuerData.results, issuer => ({\n            name: _.get(issuer, 'names.0', null),\n            cusip6: _.get(issuer, 'cusip6', null),\n          }));\n        }\n\n        else {\n          issuerResults = [\n            {\n              name: _.get(issuerData, 'results.data.issuer_names.0', null),\n              cusip6: _.get(issuerData, 'results.data.issuer_cusip6', null),\n            }\n          ];\n        }\n\n        if(filerData.count !== 1) {\n          filerResults = _.map(filerData.results, filer => ({\n            name: _.get(filer, 'name', null),\n            cik: _.get(filer, 'cik', null),\n          }));\n        }\n\n        else {\n          filerResults = [\n            {\n              name: _.get(filerData, 'results.data.filer_names.0', null),\n              cik: _.get(filerData, 'results.data.filer_cik', null),\n            }\n          ];\n        }\n        \n        const holders = _.reduce(issuerResults, (acc, issuerResult) => {\n          const newAcc = acc;\n          const issuerName = _.get(issuerResult, 'name', null);\n          if(!newAcc[issuerName]) {\n            newAcc[issuerName] = {\n              'holders': _.get(issuerResult, 'cusip6', null)\n            };\n          }\n\n          else if(!newAcc[issuerName]['holders']) {\n            newAcc[issuerName]['holders'] = _.get(issuerResult, 'cusip6', null);\n          }\n\n          return newAcc;\n        }, {});\n\n        const filers = _.reduce(filerResults, (acc, filerResult) => {\n          const newAcc = acc;\n          const filerName = _.get(filerResult, 'name', null);\n          if(!newAcc[filerName]) {\n            newAcc[filerName] = {\n              'holdings': _.get(filerResult, 'cik', null)\n            };\n          }\n\n          else if(!newAcc[filerName]['holdings']) {\n            newAcc[filerName]['holdings'] = _.get(filerResult, 'cik', null);\n          }\n\n          return newAcc;\n        }, {});\n\n        const companyResults = _.merge(holders, filers);\n\n        console.log(res);\n        this.setState({ loading: false, companyResults });\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({ loading: false });\n      });\n  }\n\n  _searchSymbol(q) {\n    this.setState({ loading: true });\n    console.log(q);\n    this.stitch.callFunction('searchForSymbol', [ q ])\n      .then(res => {\n        console.log(res);\n        // no results\n        if(!res.status && !res.data) {\n          this.setState({ loading: false, symbolResults: null });\n        }\n\n        else {\n          const data = _.get(res, 'data', null);\n          const symbolName = _.get(data, 'symbol.symbol', null);\n          const holdersView = _.get(data, 'holdersView', null);\n          const holdingsView = _.get(data, 'holdingsView', null);\n          const holdings = holdingsView? {\n            'name': _.get(holdingsView, 'data.filer_names.0', null),\n            'cik': _.get(holdingsView, 'data.filer_cik', null),\n          } :null;\n          const holders = holdersView? {\n            'name': _.get(holdersView, 'data.issuer_names.0', null),\n            'cusip6': _.get(holdersView, 'data.issuer_cusip6', null),\n          } :null;\n\n          const name = holdings? holdings.name :(holders? holders.name :symbolName);\n\n          const symbolResults = {\n            name,\n            symbol: symbolName,\n            holdings: holdings? _.get(holdings, 'cik', null) :null,\n            holders: holders? _.get(holders, 'cusip6', null) :null,\n          };\n\n          this.setState({ loading: false, symbolResults });\n        }\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({ loading: false });\n      });\n  }\n\n  render() {\n    const loading = this.state.loading;\n    const companyResults = this.state.companyResults;\n    const symbolResults = this.state.symbolResults;\n    const companyQuery = this.state.companyQuery;\n    const symbolQuery = this.state.symbolQuery;\n\n    return (<div>\n      { (!loading && !companyQuery && !symbolQuery)? <><div style={{ minHeight: '30vh' }}></div>{ `Please provide a search query.` }</> :null}\n      { (!loading && (companyQuery || symbolQuery) && _.isEmpty(companyResults) && _.isEmpty(symbolResults))?\n        <>\n          <div style={{ minHeight: '30vh' }}></div>\n          {\n            (() => {\n              let noResults = 'No results';\n              if(companyQuery) {\n                noResults += ` for company query \"${companyQuery}\"`\n              }\n              if(companyQuery && symbolQuery) {\n                noResults += ' or';\n              }\n              if(symbolQuery) {\n                noResults += ` for symbol query \"${symbolQuery}\"`;\n              }\n              noResults += '.';\n\n              return noResults;\n            })()\n          }\n        </> :null}\n      { (loading && (companyQuery || symbolQuery))? <><div style={{ minHeight: '30vh' }}></div>{ `One moment please ...` }</> :null}\n      { (!_.isEmpty(companyResults) && !loading)?\n      <div style={{ textAlign: 'left', margin: '10px' }}>\n        <h2>Company Results</h2>\n        <ul>\n          { \n            _.reduce(companyResults, (acc, val, k) => {\n              const item = <li key={ k.toString() }>\n                  <strong>{ k.toString() }</strong>\n                  { ' : ' }\n                  { !val.holders? null :\n                    <Link to={ '/holders/' + val.holders.toString() }>\n                      Holders\n                    </Link>\n                  }\n                  { val.holders && val.holdings? ' | ' :null}\n                  { !val.holdings? null :\n                    <Link to={ '/holdings/' + val.holdings.toString() }>\n                      Holdings\n                    </Link>\n                  }\n                  {!val.holders && !val.holdings? 'No holders or holdings views available.' :null}\n                </li>;\n\n              return _.concat(acc, item);\n            }, [])\n          }\n        </ul>\n      </div>\n      :null }\n      { (!_.isEmpty(symbolResults) && !loading)?\n      <div style={{ textAlign: 'left', margin: '10px' }}>\n        <h2>Symbol Results</h2>\n        <ul>\n          { (() => {\n              const name = _.get(symbolResults, 'name', null);\n              const symbol = _.get(symbolResults, 'symbol', null);\n              const holders = _.get(symbolResults, 'holders', null);\n              const holdings = _.get(symbolResults, 'holdings', null);\n\n              console.log(symbolResults);\n\n              return <li key={ name }>\n                <strong>{ name + ' ( ' + symbol + ' )' }</strong>\n                { ' : ' }\n                { !holders? null :\n                  <Link to={ '/holders/' + holders }>\n                    Holders\n                  </Link>\n                }\n                {holders && holdings? ' | ' :null}\n                { !holdings? null :\n                  <Link to={ '/holdings/' + holdings }>\n                    Holdings\n                  </Link>\n                }\n                {!holders && !holdings? 'No holders or holdings views available.' :null}\n              </li>;\n            })()\n          }\n        </ul>\n      </div>\n      :null}\n    </div>);\n  }\n\n};\n","import React from 'react';\nimport queryString from 'query-string';\nimport _ from 'lodash';\n\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n// need CIK\n\n\nexport class HoldingsView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n\n    // get Stitch controller from props\n    this.stitch = this.props.stitch;\n\n    // bind this to all non-React functions\n    this._getHoldings = this._getHoldings.bind(this);\n    this._handleChange = this._handleChange.bind(this);\n\n    const initialCikFromPath = _.get(this.props, 'match.params.cik', null);\n    const initialCikFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'cik', null);\n    const initialCik = initialCikFromPath? initialCikFromPath :initialCikFromQuery;\n\n    // initialize state\n    this.state = {\n      'holdings': null,\n      'cik': initialCik,\n      'loading': true,\n      'tableInfo': {\n        'page': 0,\n        'rowsPerPage': 10\n      },\n      'currentOnly': false,\n      'tableDense': false,\n    };\n  }\n\n  componentDidMount() {\n    const cik = this.state.cik;\n\n    if(this.props.stitchInitialized && cik) {\n      this._getHoldings(cik);\n    }\n\n    else if(this.props.stitchInitialized && this.state.loading) {\n      this.setState({ loading: false });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.stitchInitialized) {\n      const cikFromPath = _.get(this.props, 'match.params.cik', null);\n      const oldCikFromPath = _.get(prevProps, 'match.params.cik', null);\n      const cikFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'cik', null);\n      const oldCikFromQuery = _.get(queryString.parse(_.get(prevProps, 'location.search', null)), 'cik', null);\n\n      if(cikFromPath || cikFromQuery) {\n        let cik, oldCik;\n\n        if(cikFromPath) {\n          cik = cikFromPath;\n          oldCik = oldCikFromPath;\n        }\n\n        else if(cikFromQuery) {\n          cik = cikFromQuery;\n          oldCik = oldCikFromQuery;\n        }\n\n        if(cik !== oldCik) {\n          this._getHoldings(cik);\n        }\n      }\n    }\n  }\n\n  _handleChange(event, type) {\n    if(type === 'current_only') {\n      this.setState({\n        'currentOnly': event.target.checked\n      });  \n    }\n\n    if(type === 'table_density') {\n      this.setState({\n        'tableDense': event.target.checked\n      });  \n    }\n  }\n\n  _getHoldings(cik) {\n    const strCik = cik.toString();\n\n    if(strCik.length <= 10) {\n      const cik = strCik.padStart(10, '0');\n      this.stitch.callFunction('getHoldingsForFiler', [ cik ])\n        .then(res => {\n          const holdings = _.get(res, 'data.holdings', null);\n          let modifiedHoldings;\n          \n          if(holdings) {\n            modifiedHoldings = _.map(holdings, (holding, index) => ({\n              'name': _.get(holding, 'issuer_names.0', null),\n              'cusip6': _.get(holding, 'cusip6', null),\n              'cusip9': _.get(holding, 'cusip9', null),\n              'from': _.get(holding, 'from.year') + 'q' + _.get(holding, 'from.quarter'),\n              'to': _.get(holding, 'to.year') + 'q' + _.get(holding, 'to.quarter'),\n              'ownership_length': _.get(holding, 'ownership_length'),\n              'key': _.get(holding, 'cusip6', '') + index.toString()\n            }));\n          }\n\n          if(_.isEmpty(modifiedHoldings)) {\n            modifiedHoldings = null;\n          }\n\n          this.setState({\n            'holdings': modifiedHoldings,\n            'loading': false,\n            'filer_names': _.get(res, 'data.filer_names', null)\n          });\n        })\n        .catch(err => {\n          this.setState({\n            'loading': false,\n          });\n          console.error(err);\n        });\n    }\n\n    else {\n      this.setState({\n        'loading': false,\n        'cik': strCik,\n      });\n    }\n  }\n\n\n  render() {\n    const classes = makeStyles({\n      root: {\n        width: '100%',\n      },\n      tableWrapper: {\n        maxHeight: 440,\n        overflow: 'auto',\n      },\n    });\n\n    const columns = [\n      { id: 'name', label: 'Issuer Name', minWidth: 170 },\n      /*{ id: 'cik', label: 'CIK', minWidth: 100 },\n      {\n        id: 'cik9',\n        label: 'CIK9',\n        minWidth: 170,\n        format: value => value.toLocaleString(),\n      },*/\n      {\n        id: 'from',\n        label: 'From',\n        minWidth: 70,\n        format: value => value.toLocaleString(),\n        align: 'right'\n      },\n      {\n        id: 'to',\n        label: 'To',\n        minWidth: 70,\n        align: 'right'\n      },\n      {\n        id: 'ownership_length',\n        label: 'Ownership Length (Quarters)',\n        minWidth: 70,\n        align: 'right'\n      },\n    ];\n\n    const useStyles1 = makeStyles(theme => ({\n      root: {\n        flexShrink: 0,\n        marginLeft: theme.spacing(2.5),\n      },\n    }));\n    \n    function TablePaginationActions(props) {\n      const classes = useStyles1();\n      const theme = useTheme();\n      const { count, page, rowsPerPage, onChangePage } = props;\n\n      const handleFirstPageButtonClick = event => {\n        onChangePage(event, 0);\n      };\n\n      const handleBackButtonClick = event => {\n        onChangePage(event, page - 1);\n      };\n\n      const handleNextButtonClick = event => {\n        onChangePage(event, page + 1);\n      };\n\n      const handleLastPageButtonClick = event => {\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n      };\n\n      return (\n        <div className={classes.root}>\n          <IconButton\n            onClick={handleFirstPageButtonClick}\n            disabled={page === 0}\n            aria-label=\"first page\"\n          >\n            {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n          </IconButton>\n          <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n          </IconButton>\n          <IconButton\n            onClick={handleNextButtonClick}\n            disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n            aria-label=\"next page\"\n          >\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n          </IconButton>\n          <IconButton\n            onClick={handleLastPageButtonClick}\n            disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n            aria-label=\"last page\"\n          >\n            {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n          </IconButton>\n        </div>\n      );\n    }\n\n    TablePaginationActions.propTypes = {\n      count: PropTypes.number.isRequired,\n      onChangePage: PropTypes.func.isRequired,\n      page: PropTypes.number.isRequired,\n      rowsPerPage: PropTypes.number.isRequired,\n    };\n    const handleChangePage = (event, newPage) => {\n      const tableInfo = this.state.tableInfo;\n      tableInfo.page = newPage;\n      this.setState({ tableInfo });\n    };\n\n    const handleChangeRowsPerPage = event => {\n      const tableInfo = this.state.tableInfo;\n      tableInfo.page = 0;\n      tableInfo.rowsPerPage = +event.target.value; // number conversion, unary '+'\n      this.setState({ tableInfo });\n    };\n\n    const rowsPerPage = this.state.tableInfo.rowsPerPage;\n    const page = this.state.tableInfo.page;\n    const loading = this.state.loading;\n\n    const date = new Date();\n    const currentYear = date.getFullYear();\n    const currentQuarter = ~~((date.getMonth() + 1) / 3) + 1;\n\n    const currentOnly = this.state.currentOnly;\n\n    let holdings = _.filter(this.state.holdings, holding => holding['name'] && holding['cusip6'] && holding['cusip9']);\n    if(currentOnly) {\n      holdings = _.filter(holdings, holding => {\n        const holdingYear = parseInt(_.get(holding, 'to', '0000q0').substring(0, 4));\n        const holdingQuarter = parseInt(_.get(holding, 'to', '0000q0').substring(5, 6));\n\n        if(!Math.abs(currentYear - holdingYear)) {\n          return Math.abs(currentQuarter - holdingQuarter) <= 1;\n        }\n        \n        return Math.abs(currentYear - holdingYear) === 1 && currentQuarter === 1 && holdingQuarter === 4;\n      });\n    }\n\n\n\n    const cik = this.state.cik;\n    let avgOwnership = 0;\n\n    if(holdings && holdings.length) {\n      avgOwnership = _.reduce(_.map(holdings, holding => holding.ownership_length), (acc, num) => {\n        return acc + num;\n      }, 0) / holdings.length;\n      avgOwnership = Math.round(avgOwnership * 1000) / 1000;\n    }\n\n    const filer_name = _.get(this.state, 'filer_names.0', null);\n    const tableDense = this.state.tableDense;\n    \n    return (\n      <>\n        { loading? <><div style={{ minHeight: '30vh' }}></div>One moment please ...</> :null}\n        { (!loading && !holdings)? <><div style={{ minHeight: '30vh' }}></div>{ `No results for requested CIK \"${cik}\"!` }</> :null}\n        { loading || !holdings? null :\n        <>\n        <div style={{ display: 'block', width: '100%', textAlign: 'center', fontFamily: 'raleway'}}>\n          <h1>{ filer_name }</h1>\n        </div>\n        <div style={{ display: 'flex', flexDirection: 'column', fontFamily: 'Courier New', textAlign: 'right', margin: '10px' }}>\n          <div><strong>Average length of ownership</strong>: { avgOwnership } quarters ({Math.round(1000 * avgOwnership / 4)/1000} years)</div>\n          <div>\n          Show current holdings only <Checkbox\n            checked={currentOnly}\n            onChange={(event) => this._handleChange(event, 'current_only')}\n            color=\"primary\"\n          /></div>\n          <div>\n          Dense table padding\n          <Checkbox\n            checked={tableDense}\n            onChange={(event) => this._handleChange(event, 'table_density')}\n            color=\"primary\"\n          /></div>\n        </div>\n        <Paper className={classes.root} style={{ display: 'block', width: '100%' }}>\n          <div className={classes.tableWrapper}>\n            <Table size={ tableDense? 'small' :'medium' } stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                  {columns.map(column => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth, fontFamily: 'Courier New' }}\n                    >\n                      <strong>{column.label}</strong>\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {!holdings? null : holdings.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                  return (\n                    <TableRow hover tabIndex={-1} key={row.key}>\n                      {columns.map(column => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align} style={{ fontFamily: 'Courier New' }}>\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </div>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 50, 100]}\n            component=\"div\"\n            count={!holdings? 0 :holdings.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            ActionsComponent={TablePaginationActions}\n          />\n        </Paper>\n        </>\n        }\n      </>\n    );\n  }\n\n};\n","import React from 'react';\nimport queryString from 'query-string';\nimport _ from 'lodash';\n\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n// need CUSIP\n\n\nexport class HoldersView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n\n    // get Stitch controller from props\n    this.stitch = this.props.stitch;\n\n    // bind this to all non-React functions\n    this._getHolders = this._getHolders.bind(this);\n    this._handleChange = this._handleChange.bind(this);\n\n    const initialCusipFromPath = _.get(this.props, 'match.params.cusip', null);\n    const initialCusipFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'cusip', null);\n    const initialCusip = initialCusipFromPath? initialCusipFromPath :initialCusipFromQuery;\n\n    // initialize state\n    this.state = {\n      'holders': null,\n      'cusip': initialCusip,\n      'loading': true,\n      'tableInfo': {\n        'page': 0,\n        'rowsPerPage': 10\n      },\n      'currentOnly': false,\n      'tableDense': false,\n    };\n  }\n\n  componentDidMount() {\n    const cusip = this.state.cusip;\n\n    if(this.props.stitchInitialized && cusip) {\n      this._getHolders(cusip);\n    }\n\n    else if(this.props.stitchInitialized && this.state.loading) {\n      this.setState({ loading: false });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.stitchInitialized) {\n      const cusipFromPath = _.get(this.props, 'match.params.cusip', null);\n      const oldCusipFromPath = _.get(prevProps, 'match.params.cusip', null);\n      const cusipFromQuery = _.get(queryString.parse(_.get(this.props, 'location.search', null)), 'cusip', null);\n      const oldCusipFromQuery = _.get(queryString.parse(_.get(prevProps, 'location.search', null)), 'cusip', null);\n\n      if(cusipFromPath || cusipFromQuery) {\n        let cusip, oldCusip;\n\n        if(cusipFromPath) {\n          cusip = cusipFromPath;\n          oldCusip = oldCusipFromPath;\n        }\n\n        else if(cusipFromQuery) {\n          cusip = cusipFromQuery;\n          oldCusip = oldCusipFromQuery;\n        }\n\n        if(cusip !== oldCusip) {\n          this._getHolders(cusip);\n        }\n      }\n    }\n  }\n\n  _handleChange(event, type) {\n    if(type === 'current_only') {\n      this.setState({\n        'currentOnly': event.target.checked\n      });  \n    }\n\n    if(type === 'table_density') {\n      this.setState({\n        'tableDense': event.target.checked\n      });  \n    }\n  }\n\n  _handleChangeDensity(event) {\n  }\n\n  _getHolders(cusip) {\n    const strCusip = cusip.toString();\n\n    if(strCusip.length >= 6) {\n      const cusip6 = cusip.substr(0, 6);\n      this.stitch.callFunction('getHoldersForIssuer', [ cusip6 ])\n        .then(res => {\n          const holdings = _.get(res, 'data.holdings', null);\n          let modifiedHoldings;\n          \n          if(holdings) {\n            modifiedHoldings = _.map(holdings, (holding, index) => ({\n              'name': _.get(holding, 'filer_names.0', null),\n              'cik': _.get(holding, 'cik', null),\n              'cusip9': _.get(holding, 'cusip9', null),\n              'from': _.get(holding, 'from.year') + 'q' + _.get(holding, 'from.quarter'),\n              'to': _.get(holding, 'to.year') + 'q' + _.get(holding, 'to.quarter'),\n              'ownership_length': _.get(holding, 'ownership_length'),\n              'key': _.get(holding, 'cik', '') + index.toString()\n            }));\n          }\n\n          if(_.isEmpty(modifiedHoldings)) {\n            modifiedHoldings = null;\n          }\n\n          this.setState({\n            'holders': modifiedHoldings,\n            'loading': false,\n            'issuer_names': _.get(res, 'data.issuer_names', null)\n          });\n        })\n        .catch(err => {\n          this.setState({\n            'loading': false,\n          });\n          console.error(err);\n        });\n    }\n\n    else {\n      this.setState({\n        'loading': false,\n        'cusip': strCusip,\n      });\n    }\n  }\n\n\n  render() {\n    const classes = makeStyles({\n      root: {\n        width: '100%',\n      },\n      tableWrapper: {\n        maxHeight: 440,\n        overflow: 'auto',\n      },\n    });\n\n    const columns = [\n      { id: 'name', label: 'Holder Name', minWidth: 170 },\n      /*{ id: 'cik', label: 'CIK', minWidth: 100 },\n      {\n        id: 'cusip9',\n        label: 'CUSIP9',\n        minWidth: 170,\n        format: value => value.toLocaleString(),\n      },*/\n      {\n        id: 'from',\n        label: 'From',\n        minWidth: 70,\n        format: value => value.toLocaleString(),\n        align: 'right'\n      },\n      {\n        id: 'to',\n        label: 'To',\n        minWidth: 70,\n        align: 'right'\n      },\n      {\n        id: 'ownership_length',\n        label: 'Ownership Length (Quarters)',\n        minWidth: 170,\n        align: 'right'\n      },\n    ];\n\n    const useStyles1 = makeStyles(theme => ({\n      root: {\n        flexShrink: 0,\n        marginLeft: theme.spacing(2.5),\n      },\n    }));\n    \n    function TablePaginationActions(props) {\n      const classes = useStyles1();\n      const theme = useTheme();\n      const { count, page, rowsPerPage, onChangePage } = props;\n\n      const handleFirstPageButtonClick = event => {\n        onChangePage(event, 0);\n      };\n\n      const handleBackButtonClick = event => {\n        onChangePage(event, page - 1);\n      };\n\n      const handleNextButtonClick = event => {\n        onChangePage(event, page + 1);\n      };\n\n      const handleLastPageButtonClick = event => {\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n      };\n\n      return (\n        <div className={classes.root}>\n          <IconButton\n            onClick={handleFirstPageButtonClick}\n            disabled={page === 0}\n            aria-label=\"first page\"\n          >\n            {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n          </IconButton>\n          <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n          </IconButton>\n          <IconButton\n            onClick={handleNextButtonClick}\n            disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n            aria-label=\"next page\"\n          >\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n          </IconButton>\n          <IconButton\n            onClick={handleLastPageButtonClick}\n            disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n            aria-label=\"last page\"\n          >\n            {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n          </IconButton>\n        </div>\n      );\n    }\n\n    TablePaginationActions.propTypes = {\n      count: PropTypes.number.isRequired,\n      onChangePage: PropTypes.func.isRequired,\n      page: PropTypes.number.isRequired,\n      rowsPerPage: PropTypes.number.isRequired,\n    };\n\n    const handleChangePage = (event, newPage) => {\n      const tableInfo = this.state.tableInfo;\n      tableInfo.page = newPage;\n      this.setState({ tableInfo });\n    };\n\n    const handleChangeRowsPerPage = event => {\n      const tableInfo = this.state.tableInfo;\n      tableInfo.page = 0;\n      tableInfo.rowsPerPage = +event.target.value; // number conversion, unary '+'\n      this.setState({ tableInfo });\n    };\n\n    const rowsPerPage = this.state.tableInfo.rowsPerPage;\n    const page = this.state.tableInfo.page;\n    const loading = this.state.loading;\n\n    const date = new Date();\n    const currentYear = date.getFullYear();\n    const currentQuarter = ~~((date.getMonth() + 1) / 3) + 1;\n\n    const currentOnly = this.state.currentOnly;\n\n    let holders = _.filter(this.state.holders, holder => holder['name'] && holder['cik'] && holder['cusip9']);\n    if(currentOnly) {\n      holders = _.filter(holders, holder => {\n        const holderYear = parseInt(_.get(holder, 'to', '0000q0').substring(0, 4));\n        const holderQuarter = parseInt(_.get(holder, 'to', '0000q0').substring(5, 6));\n\n        if(!Math.abs(currentYear - holderYear)) {\n          return Math.abs(currentQuarter - holderQuarter) <= 1;\n        }\n        \n        return Math.abs(currentYear - holderYear) === 1 && currentQuarter === 1 && holderQuarter === 4;\n      });\n    }\n\n    \n\n    const cusip = this.state.cusip;\n    let avgOwnership = 0;\n\n    if(holders && holders.length) {\n      avgOwnership = _.reduce(_.map(holders, holder => holder.ownership_length), (acc, num) => {\n        return acc + num;\n      }, 0) / holders.length;\n      avgOwnership = Math.round(avgOwnership * 1000) / 1000;\n    }\n\n    const issuer_name = _.get(this.state, 'issuer_names.0', null);\n    const tableDense = this.state.tableDense;\n    \n    return (\n      <>\n        { loading? <><div style={{ minHeight: '30vh' }}></div>One moment please ...</> :null}\n        { (!loading && !holders)? <><div style={{ minHeight: '30vh' }}></div>{ `No results for requested CUSIP \"${cusip}\"!` }</> :null}\n        { loading || !holders? null :\n        <>\n        <div style={{ display: 'block', width: '100%', textAlign: 'center', fontFamily: 'raleway'}}>\n          <h1>{ issuer_name }</h1>\n        </div>\n        <div style={{ display: 'flex', flexDirection: 'column', fontFamily: 'Courier New', textAlign: 'right', margin: '10px' }}>\n          <div><strong>Average length of ownership</strong>: { avgOwnership } quarters ({Math.round(1000 * avgOwnership / 4)/1000} years)</div>\n          <div>\n          Show current holders only <Checkbox\n            checked={currentOnly}\n            onChange={(event) => this._handleChange(event, 'current_only')}\n            color=\"primary\"\n          /></div>\n          <div>\n          Dense table padding\n          <Checkbox\n            checked={tableDense}\n            onChange={(event) => this._handleChange(event, 'table_density')}\n            color=\"primary\"\n          /></div>\n        </div>\n        <Paper className={classes.root} style={{ display: 'block', width: '100%' }}>\n          <div className={classes.tableWrapper}>\n            <Table size={ tableDense? 'small' :'medium' } stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                  {columns.map(column => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth, fontFamily: 'Courier New' }}\n                    >\n                      <strong>{column.label}</strong>\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {!holders? null : holders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                  return (\n                    <TableRow hover tabIndex={-1} key={row.key}>\n                      {columns.map(column => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align} style={{ fontFamily: 'Courier New' }}>\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </div>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 50, 100]}\n            component=\"div\"\n            count={!holders? 0 :holders.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            ActionsComponent={TablePaginationActions}\n          />\n        </Paper>\n        </>\n        }\n      </>\n    );\n  }\n\n};\n","import React from 'react';\n//import _ from 'lodash';\n\nimport { StitchController } from '../';\nimport { Input, Button, ButtonGroup } from '@material-ui/core';\n\nexport class UserInput extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      loading: true,  // is the UI still loading?\n      status: 0,      // zero means OK, non-zero means NOT OK\n      inputValue: \"\"\n    };\n\n    // instantiate Stitch controller\n    this.stitch = new StitchController();\n    \n    // bind this for non-React functions\n    this._handleInputChange = this._handleInputChange.bind(this);\n  }\n\n  _handleInputChange(event) {\n    this.setState({ inputValue: event.target.value });\n  }\n\n  _handleClick(name) {\n    // clean up the input here if you want\n    const cleanInput = this.state.inputValue;\n\n    // TODO : add support for the checkbox (choosing the current holders / positions only)\n    /*const options = {\n      currentOnly: false\n    };*/\n\n    switch(name) {\n      case 'company':\n        this.stitch.callFunction('searchForCompany', [cleanInput])\n        .then(searchResult => {\n          console.log(searchResult);\n          return {\n            'companySearchResult': searchResult\n          };\n        })\n          /*\n          // TODO : check status of result\n          const cik = _.get(searchResult, 'data.cik', null);\n\n          return this.stitch.callFunction('getAverageTimePositionsHeldForFund', [cik, options])\n          .then(avgPosResult => {\n            return this.stitch.callFunction('getPositionsForFund', [cik, options])\n            .then(posForFundResult => {\n\n              return {\n                'searchForFund': searchResult,\n                'getAverageTimePositionsHeldForFund': avgPosResult,\n                'getPositionsForFund': posForFundResult,\n              };\n            })\n            .catch(err => {\n              console.log(err);\n              return {};\n            });\n          })\n        })\n        .then(res => {\n          console.log(res);\n          return this.props.handleSubmission(res);\n        })*/\n        .catch(err => {\n          console.log(err);\n        });\n        break;\n\n      case 'symbol':\n        this.stitch.callFunction('searchForSymbol', [cleanInput])\n        .then(searchResult => {\n          console.log(searchResult);\n          return {\n            'symbolSearchResult': searchResult\n          };\n        })\n          /*\n          // TODO : check status of result\n          const cusip = _.get(searchResult, 'data.cusip', null);\n          \n          return this.stitch.callFunction('getHoldersForTicker', [cusip, options])\n          .then(results => {\n            return {\n              'searchForCompany': searchResult,\n              'getHoldersForTicker': results\n            };\n          })\n          .catch(err => {\n            console.log(err);\n          })\n        })\n        .then(res => {\n          console.log(res);\n          return this.props.handleSubmission(res);\n        })*/\n        .catch(err => {\n          console.log(err);\n        });\n        break;\n\n      default:\n    }\n  }\n\n  componentDidMount() {\n    // initialize Stitch controller\n    this.stitch.init()\n    .then(() => {\n      this.setState({ loading: false, status: 0 });  // no longer loading\n    })\n    .catch(err => {\n      console.log(err);\n      this.setState({ loading: false, status: -1 });  // no longer loading, but bad status\n    });\n  }\n\n  render() {\n    return (\n      <div style={ styles.container }>\n        <Input\n          disabled={ this.state.loading }\n          error={ this.state.error }\n          placeholder=\"Search by ...\"\n          style={ styles.input }\n          value={ this.state.inputValue }\n          onChange={ this._handleInputChange }\n        />\n        <ButtonGroup>\n          <Button\n            disabled={ this.state.loading }\n            onClick={ () => this._handleClick('company') }\n          >\n            Company\n          </Button>\n          <Button\n            disabled={ this.state.loading }\n            onClick={ () => this._handleClick('symbol') }\n          >\n            Symbol\n          </Button>\n        </ButtonGroup>\n      </div>\n    );\n  }\n};\n\nconst styles = {\n  container: {\n    \n  },\n  button: {\n\n  },\n  input: {\n    margin: 5,\n  }\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\n\nexport class ResultsGetHoldersForTicker extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      column: null,\n      direction: null,\n      data: this.props.results.data,\n      rawData: this.props.results.data\n    };\n  }\n\n  // update raw results from props\n  componentDidUpdate() {\n    if(!_.isEqual(this.props.results.data, this.state.rawData)) {\n      this.setState({\n        data: this.props.results.data,\n        rawData: this.props.results.data,\n      });\n    } \n  }\n\n  _handleSort = (clickedColumn) => () => {\n    const { column, direction } = this.state;\n\n    // sort by ascending if not clicked\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        direction: 'ascending',\n        data: _.sortBy(this.state.data, [ clickedColumn ])\n      });\n    }\n\n    // if clicked, toggle sort direction\n    else {\n      this.setState({\n        direction: direction === 'ascending' ? 'descending' : 'ascending',\n        data: this.state.data.reverse()\n      });\n    }\n  }\n\n  render() {\n    const { column, direction, data } = this.state;\n    const columnNames = [ 'name', 'cik', 'from', 'to', 'quarters' ];\n    const columnNameDisplay = {\n      'name': 'Name',\n      'cik': 'CIK',\n      'from': 'From',\n      'to': 'To',\n      'quarters': 'Quarters'\n    };\n\n    return (\n      // name the div here? TODO\n      <div style={ styles.container }>\n        <Table>\n          <TableHead>\n            <TableRow>\n              {\n                _.map(columnNames, name => (\n                  <TableCell\n                    key={ name }\n                    sorted={ column === name? direction :null }\n                    onClick={ this._handleSort(name) }\n                  >\n                    { columnNameDisplay[name] }\n                  </TableCell>\n                ))\n              }\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              _.map(data, ({ name, cik, from, to, quarters }, idx) => (\n                  <TableRow key={ _.join([cik, '-', idx], '') }>\n                    <TableCell><code>{ name }</code></TableCell>\n                    <TableCell><code>{ cik }</code></TableCell>\n                    <TableCell><code>{ from }</code></TableCell>\n                    <TableCell><code>{ to }</code></TableCell>\n                    <TableCell><code>{ quarters }</code></TableCell>\n                  </TableRow>\n              ))\n            }\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n\n};\n\nconst styles = {\n  container: {\n    margin: 20\n  }\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\n\nexport class ResultsGetPositionsForFund extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      column: null,\n      direction: null,\n      data: this.props.results.data.filerSearch.data.results.data.holdings,\n      rawResults: this.props.results.data.filerSearch.data.results.data.holdings,\n    };\n  }\n\n  // update raw results from props\n  componentDidUpdate() {\n    if(!_.isEqual(this.props.results, this.state.rawResults)) {\n      this.setState({\n        data: this.props.results.data,\n        rawResults: this.props.results,\n      });\n    } \n  }\n\n  _handleSort = (clickedColumn) => () => {\n    const { column, direction } = this.state;\n\n    // sort by ascending if not clicked\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        direction: 'ascending',\n        data: _.sortBy(this.state.data, [ clickedColumn ])\n      });\n    }\n\n    // if clicked, toggle sort direction\n    else {\n      this.setState({\n        direction: direction === 'ascending' ? 'descending' : 'ascending',\n        data: this.state.data.reverse()\n      });\n    }\n  }\n\n  render() {\n    const { column, direction, data } = this.state;\n    const columnNames = [ 'name', 'cusip', 'from', 'to', 'quarters' ];\n    const columnNameDisplay = {\n      'name': 'Name',\n      'cusip': 'CUSIP',\n      'from': 'From',\n      'to': 'To',\n      'quarters': 'Quarters'\n    };\n\n    return (\n      // name the div here? TODO\n      <div style={ styles.container }>\n        <Table>\n          <TableHead>\n            <TableRow>\n              {\n                _.map(columnNames, name => (\n                  <TableCell\n                    key={ name }\n                    sorted={ column === name? direction :null }\n                    onClick={ this._handleSort(name) }\n                  >\n                    { columnNameDisplay[name] }\n                  </TableCell>\n                ))\n              }\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              _.map(data, ({ names, cusip6, from, to, ownership_length }, idx) => (\n                  <TableRow key={ _.join([cusip6, '-', idx], '') }>\n                    <TableCell><code>{ names[0] }</code></TableCell>\n                    <TableCell><code>{ cusip6 }</code></TableCell>\n                    <TableCell><code>{ from.year }q{ from.quarter }</code></TableCell>\n                    <TableCell><code>{ to.year }q{ to.quarter }</code></TableCell>\n                    <TableCell><code>{ ownership_length}</code></TableCell>\n                  </TableRow>\n              ))\n            }\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n\n};\n\nconst styles = {\n  container: {\n    margin: 20\n  }\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow\n} from '@material-ui/core';\n\nexport class ResultsGetAverageTimePositionsHeldForFund extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: this.props.results.data,\n      rawData: this.props.results.data,\n    };\n  }\n\n  // update raw results from props\n  componentDidUpdate() {\n    if(!_.isEqual(this.props.results.data, this.state.rawData)) {\n      this.setState({\n        data: this.props.results.data,\n        rawData: this.props.results.data,\n      });\n    } \n  }\n\n  render() {\n    const { data } = this.state;\n\n    return (\n      <div style={ styles.container }>\n        <Table>\n          <TableBody>\n            <TableRow key='total'>\n              <TableCell>\n                <strong>Total Positions Found</strong>\n              </TableCell>\n              <TableCell>\n                <code>{ data.positionsCount }</code>\n              </TableCell>\n            </TableRow>\n            <TableRow key='year'>\n              <TableCell>\n                <strong>Average Time Held of All Positions (Years)</strong>\n              </TableCell>\n              <TableCell>\n                <code>{ Math.round(data.averageLengthOfStockOwnership.years * 1000) / 1000 }</code>\n              </TableCell>\n            </TableRow>\n            <TableRow key='quarters'>\n              <TableCell>\n                <strong>Average Time Held of All Positions (Quarters)</strong>\n              </TableCell>\n              <TableCell>\n                <code>{ Math.round(data.averageLengthOfStockOwnership.quarters * 1000) / 1000 }</code>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n\n};\n\nconst styles = {\n  container: {\n    margin: 20\n  }\n};\n","import React from 'react';\nimport _ from 'lodash';\n\n// import individual results formatters\nimport { ResultsGetHoldersForTicker } from './functions/ResultsGetHoldersForTicker';\nimport { ResultsGetPositionsForFund } from './functions/ResultsGetPositionsForFund';\nimport { ResultsGetAverageTimePositionsHeldForFund } from './functions/ResultsGetAverageTimePositionsHeldForFund';\n\nexport class ResultsFormatter extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // define function results from action controller in state\n    this.state = {\n        results: this.props.results,\n    };\n  }\n\n  componentDidUpdate() {\n    if(!_.isEqual(this.props.results, this.state.results)) {\n      this.setState({\n        results: this.props.results,\n      });\n    } \n  }\n\n  render() {\n    const { results } = this.state;\n\n    return (\n      <div style={ styles.container }>\n        {\n          !_.get(results, 'companySearchResult', -1)?\n            <>Showing results for fund <strong><code>\"{ _.get(results, 'companySearchResult.data.filerSearch.data.count', '') }\" (CIK : { _.get(results, 'companySearchResult.data.filerSearch.data.count', '') })</code></strong></>\n          :null\n        }\n\n        {\n          !_.get(results, 'searchForCompany.status', -1)?\n            <>Showing results for company <strong><code>\"{ _.get(results, 'searchForCompany.data.name', '') }\" (CUSIP : { _.get(results, 'searchForCompany.data.cusip', '') })</code></strong></>\n          :null\n        }\n\n        {\n          // position average information\n          !_.get(results, 'getAverageTimePositionsHeldForFund.status', -1)?\n            <ResultsGetAverageTimePositionsHeldForFund\n              results={ results.getAverageTimePositionsHeldForFund }\n            />\n          :null\n        }\n        \n        {\n          // fund positions information\n          !_.get(results, 'companySearchResult.status', -1)?\n            <ResultsGetPositionsForFund\n              results={ results.companySearchResult }\n            />\n          :null\n        }\n        \n        {\n          // company holders information\n          !_.get(results, 'symbolSearchResult.status', -1)?\n            <ResultsGetHoldersForTicker\n              results={ results.symbolSearchResult }\n            />\n          :null\n        }\n      </div>\n    );\n  }\n};\n\nconst styles = {\n  container: {\n    margin: 20\n  }\n};\n","import React from 'react';\n\n// main components for user interface\nimport { UserInput } from './UserInput';\nimport { ResultsFormatter } from './ResultsFormatter';\n\nexport class UserInterface extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // initialize state\n    this.state = {\n      submissionResults: null  // to store submission results for display in child component(s)\n    };\n    \n    // bind non-React functions\n    this._handleSubmission = this._handleSubmission.bind(this);\n  }\n\n  // handle the submission of the child UserInput component\n  _handleSubmission(results) {\n    this.setState({ submissionResults: results });\n  }\n\n  componentDidMount() {\n    \n  }\n  \n  render() {\n    return (<div>\n      <UserInput\n        handleSubmission={ this._handleSubmission } // pass down submission handler to store results\n      />\n      <br/>\n      <ResultsFormatter\n        results={ this.state.submissionResults? this.state.submissionResults :undefined }\n      />\n    </div>);\n  }\n};\n","import { UserInterface } from './components/UserInterface';\nimport { UserInput } from './components/UserInput';\nimport { ResultsFormatter } from './components/ResultsFormatter';\n\nconst {\n  Stitch,\n  RemoteMongoClient,\n  UserApiKeyCredential\n} = require('mongodb-stitch-browser-sdk');\n\nexport class StitchController {\n  constructor() {\n    this.db = {}; // initialize database object\n    this.sc = {}; // initialize service client object\n  }\n\n  // initialize the controller\n  async init() {\n    try {\n      this.initClientForAppId(process.env.REACT_APP_STITCH_APP_ID);                            // initializes the client\n      await this.loginUsingApiKey(process.env.REACT_APP_STITCH_API_SECRET);                    // authorizes the client for use\n      const mongodb = await this.initServiceClient(process.env.REACT_APP_STITCH_SERVICE_NAME); // initializes MongoDB service client (for database access)\n      await this.initDBFromServiceClient('filings', mongodb);                                  // initializes test db for access\n      return 0;\n    }\n    catch(err) {\n      console.error(err);\n      return err;\n    }\n  }\n\n  // returns client \n  initClientForAppId(appId) {\n    this.client = Stitch.initializeDefaultAppClient(appId);\n  }\n\n  // returns a Promise (of user info)\n  loginUsingApiKey(key) {\n    const credential = new UserApiKeyCredential(process.env.REACT_APP_STITCH_API_SECRET);\n    return this.client.auth.loginWithCredential(credential)\n      .then(user => {\n        console.log(`Logged into Stitch client as API user (server) with id: ${user.id}`);\n        return user;\n      })\n      .catch(err => {\n        console.error(err);\n        return err;\n      });\n  }\n\n  // returns a Promise (of service client)\n  async initServiceClient(name) {\n    this.sc[name] = await this.client.getServiceClient(\n      RemoteMongoClient.factory,\n      name\n    );\n\n    return this.sc[name];\n  }\n\n  // returns Promise (of db client)\n  async initDBFromServiceClient(name, sc) {\n    this.db[name] = await sc.db(name);\n\n    return this.db[name];\n  }\n\n  callFunction(name, args) {\n    return this.client.callFunction(name, args)\n      .catch(err => {\n        console.error(err);\n        return err;\n      });\n  }\n};\n\n\nexport const StitchComponents = {\n  UserInterface,\n  UserInput,\n  ResultsFormatter\n};\n","import React from 'react';\nimport './App.css';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n//  Link\n} from \"react-router-dom\";\n\n/*\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\n*/\n\n// need this for the Stitch UI\n//import { StitchComponents } from './stitch';\n\nimport { Search } from './Search';\nimport { SearchResults } from './SearchResults';\nimport { HoldingsView } from './HoldingsView';\nimport { HoldersView } from './HoldersView';\nimport { StitchController } from './stitch';\n\n//import Logo from './media/assets/images/gghc.png';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // initialize state\n    this.state = {\n      window: {\n        width: 0,\n        height: 0\n      },\n      'stitchInitialized': false,\n      'loading': true\n    };\n\n    // intantiate Stitch controller\n    this.stitch = new StitchController();\n\n    // bind non-React functions\n    this._updateWindowDimensions = this._updateWindowDimensions.bind(this);\n  }\n\n  _updateWindowDimensions() {\n    this.setState({ window: { width: window.innerWidth, height: window.innerHeight } });\n  }\n\n  componentDidMount() {\n    this._updateWindowDimensions();\n    window.addEventListener('resize', this._updateWindowDimensions);\n\n    console.log('Initializing Stitch ...');\n    this.stitch.init()\n    .then(err => {\n      if(!err) {\n        console.log('Stitch initialization complete!');\n        this.setState({\n          'stitchInitialized': true,\n          'loading': false,\n        });\n      }\n      else {\n        console.error('Stitch initialization error:', err);\n        this.setState({\n          'stitchInitialized': false,\n          'loading': false,\n        });\n      }\n    })\n    .catch(err => {\n      console.error('Stitch initialization error:', err);\n      this.setState({\n        'stitchInitialized': false,\n        'loading': false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this._updateWindowDimensions);\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          {/*<div className=\"App-header\">\n            <h1>Holdings Analysis</h1>\n          </div>*/}\n\n          <div className=\"App-body\">\n            { !this.state.stitchInitialized && !this.state.loading? <><div style={{ minHeight: '30vh' }}></div>Error connecting to MongoDB Stitch!</> :null }\n            { !this.state.stitchInitialized && this.state.loading? <><div style={{ minHeight: '30vh' }}></div>Connecting to MongoDB Stitch server ...</>:<>\n            <Switch>\n              <Route\n                path='/'\n                exact\n                render={\n                  (props) => <div className=\"Welcome\">\n                    <h2>Welcome to the Holdings Analysis tool!</h2>\n                    <strong>Search tips:</strong>\n                    <ol>\n                      <li>Search tokens match by a logical <strong>OR</strong>.  Ex: <strong>tech media consulting firm</strong> yields results matching any of those words.</li>\n                      <li>To search by exact phrase, use double quotes ({ '\"' }).  Ex: <strong>{ '\"apple computer\"' }</strong> yields results matching <strong>apple computer</strong> EXACTLY.</li>\n                      <li>To exclude a term, prepend that term with a hyphen ({ '-' }).  Ex: <strong>apple -computer</strong> yields results matching <strong>apple</strong> but NOT <strong>computer</strong>.</li>\n                    </ol>\n                    \n                  </div>\n                }\n              />\n            </Switch>\n            <Search />\n            <Switch>\n              <Route\n                path='/search/:search?'\n                render={\n                  (props) =>  <SearchResults {...props}\n                                stitch={ this.stitch }\n                                stitchInitialized={ this.state.stitchInitialized }\n                              />\n                }\n              />\n              <Route\n                path='/holdings/:cik?'\n                render={\n                  (props) =>  <HoldingsView {...props}\n                                stitch={ this.stitch }\n                                stitchInitialized={ this.state.stitchInitialized }\n                              />\n                }\n              />\n              <Route\n                path='/holders/:cusip?'\n                render={\n                  (props) =>  <HoldersView {...props}\n                                stitch={ this.stitch }\n                                stitchInitialized={ this.state.stitchInitialized }\n                              />\n                }\n              />\n            </Switch>\n            </>}\n          </div>\n\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}